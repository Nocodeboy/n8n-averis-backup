{
  "createdAt": "2025-05-15T14:33:25.529Z",
  "updatedAt": "2025-05-17T07:33:05.680Z",
  "id": "X2PIataa2U4EwZBy",
  "name": "**** DEV**** Agente IA Avanzado WhatsApp",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "a5ac7a68-0290-4b2d-9b3a-1a5b62fde3e5",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -9440,
        1160
      ],
      "id": "164e4a19-411a-472c-a6ab-27ed9693ec44",
      "name": "Webhook",
      "webhookId": "a5ac7a68-0290-4b2d-9b3a-1a5b62fde3e5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "24c275ee-aef2-4b03-bf22-4ca69aa05e98",
              "name": "serverUrl",
              "value": "={{ $('Webhook').item.json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "a15eb467-42de-4299-a389-667647ccc613",
              "name": "instanceName",
              "value": "={{ $('Webhook').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "13f6d482-fb2d-42a2-958e-e82273d6679c",
              "name": "apiKey",
              "value": "={{ $('Webhook').item.json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "557486dd-9057-4d07-8c8a-19583a79b9f9",
              "name": "message.messageId",
              "value": "={{ $('Webhook').item.json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "79493ec9-a117-496c-88bf-65254c376d20",
              "name": "message.chatId",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "1208a065-1670-40c7-9b9d-5c8c87cedd3f",
              "name": "message.messageType",
              "value": "={{ $('Webhook').item.json.body.data.message.conversation ? 'text': '' }}{{ $('Webhook').item.json.body.data.message.extendedTextMessage ? 'text': '' }}{{ $('Webhook').item.json.body.data.message.audioMessage ? 'audio': '' }}{{ $('Webhook').item.json.body.data.message.imageMessage ? 'image': '' }}",
              "type": "string"
            },
            {
              "id": "2e0a8ca5-35b9-4d4d-9005-1e66ac828eeb",
              "name": "message.messageContent",
              "value": "={{ $('Webhook').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "2f72443f-eace-44fa-8a81-5f3bf1ab5e88",
              "name": "message.messageTimeStamp",
              "value": "={{ $('Webhook').item.json.body.date_time.toDateTime().toISO() }}",
              "type": "string"
            },
            {
              "id": "a8c0f64c-2ad7-42c8-9af0-eb792f298cdd",
              "name": "userName",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -7560,
        1200
      ],
      "id": "90f07d6a-1ce5-4b6f-b407-e7e10c866dc1",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "e397999f-f0d4-47db-8619-c188b5e3616b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "338e3688-336d-4e2a-a3a9-d81e6bbd4e11",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ce0507ad-b0f4-4d0a-bf21-d6db06ab283f",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b8f82334-7775-4e5d-9d7c-f6402af55910",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "sticker",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sticker"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e427d52a-3b56-409b-b7c8-2e3029e5201d",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "video"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "other"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7380,
        1200
      ],
      "id": "49721a53-838d-4866-8ca9-5c330fde7b43",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6700,
        380
      ],
      "id": "aaca50e7-d1b3-4f07-a341-7106de3239df",
      "name": "descargar audio"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -6500,
        380
      ],
      "id": "8ecbaabe-d920-466c-b8b3-66d87decbc02",
      "name": "convertir audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -6000,
        380
      ],
      "id": "6041cc5d-781c-4027-aead-b9f73ee1beae",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6700,
        720
      ],
      "id": "6b529620-4b08-46c4-a8b3-5dcb1bbc3efd",
      "name": "descargar imagen"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -6480,
        720
      ],
      "id": "1b2349d9-b544-4d3a-9d32-45d8ed6fb501",
      "name": "convertir imagen"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "1b078c6c-6824-43e2-8bff-8a56fca7a1c9",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5540,
        380
      ],
      "id": "7b888413-8665-45bb-845b-b8688777201d",
      "name": "audio content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "=<image>\n{{ $json.content }}\n</image>",
              "type": "string"
            },
            {
              "id": "29e2c943-8bb0-4199-84dd-16d098894ddd",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5520,
        720
      ],
      "id": "c79abc0d-4213-4917-8ca1-38f5a3380251",
      "name": "image content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bcea6c99-72fa-44d3-acc6-ecfdec887583",
              "name": "content",
              "value": "={{ $json.messageContent }}",
              "type": "string"
            },
            {
              "id": "6abb6aff-1f4a-4ab5-aece-c2bf1d27a59d",
              "name": "timestamp",
              "value": "={{ $('Json Parse').item.json.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5380,
        1220
      ],
      "id": "f9716409-383b-4737-9e2c-c01feba2b7cf",
      "name": "text content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2599831-cc84-4aa6-acf7-77ed624f72ab",
              "name": "content",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "58b79cfa-6b3c-4b54-9c05-9cc2f3534cbc",
              "name": "chatInput",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3620,
        1220
      ],
      "id": "733ab018-43a3-47f3-87e5-761546cac087",
      "name": "mensaje"
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -5800,
        1220
      ],
      "id": "f5013f2f-87d5-47c9-b65d-0c47df4a323b",
      "name": "Split Out"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5580,
        1220
      ],
      "id": "ce5a401c-ef28-470b-a88b-209f66af4159",
      "name": "Json Parse"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        -4480,
        1220
      ],
      "id": "5089da41-5e8d-4855-a674-ddb205ba4483",
      "name": "Sort"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -4240,
        1220
      ],
      "id": "fbd21e7e-8e91-4137-ac7b-f8718200cbc1",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18445dcf-1967-40d1-aec2-6d2196b1364b",
              "leftValue": "={{ JSON.parse($json.message.last()).messageId }}",
              "rightValue": "={{ $('Edit Fields').item.json.message.messageId }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -6220,
        1240
      ],
      "id": "c2d37b1d-c259-4271-922c-ebffbbfe2aa8",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -5980,
        1460
      ],
      "id": "819af38e-82ea-463c-8f2f-540882d3440e",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"response\": {\n      \"part_1\": \"Parte uno de la respuesta\",\n      \"part_2\": \"Parte dos de la respuesta (opcional).\",\n      \"part_3\": \"Parte tres de la respuesta (opcional).\"\n    }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1440,
        800
      ],
      "id": "5a033ad3-9841-4e37-a47b-c9b8ad0fa411",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Respuesta a formatear:{{ $json.response }}\n\nSi contiene signos de puntuación, omite el primero \"¿\" \"¡\", para que sea mas humano.\n\nDevuelve este formato:\n\n{\n\t\"response\": {\n      \"part_1\": \"Parte uno de la respuesta\",\n      \"part_2\": \"Parte dos de la respuesta (opcional).\",\n      \"part_3\": \"Parte tres de la respuesta (opcional).\"\n    }\n}",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1220,
        600
      ],
      "id": "33e43b26-874b-4324-a67f-062462d1c5c8",
      "name": "Verificador de Respuesta",
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b92a1f4-d4bc-4689-87cf-1be40aa49c27",
              "leftValue": "={{ $('Verificador de Respuesta').item.json.output.response.part_2 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2160,
        620
      ],
      "id": "616ea869-6f92-4bc4-8279-e9a3243ca50a",
      "name": "If Parte 2"
    },
    {
      "parameters": {
        "amount": "={{ 2+$('Verificador de Respuesta').item.json.output.response.part_2.length*0.01 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2420,
        500
      ],
      "id": "e203e3b4-7deb-4f1e-8fe3-5cffd4530aa5",
      "name": "Wait",
      "webhookId": "353a6e1a-d782-4002-ae23-89023e57860e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b92a1f4-d4bc-4689-87cf-1be40aa49c27",
              "leftValue": "={{ $('Verificador de Respuesta').item.json.output.response.part_3 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2880,
        640
      ],
      "id": "3e80f814-3ade-41f8-9029-c95d50842714",
      "name": "If Parte 3"
    },
    {
      "parameters": {
        "amount": "={{ 2+$('Verificador de Respuesta').item.json.output.response.part_3.length*0.01 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3180,
        500
      ],
      "id": "59bff2d7-f22d-4892-9289-0e27db9207eb",
      "name": "Wait2",
      "webhookId": "c2f6de3c-f4f0-4bf0-9246-6190d7258b86"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3680,
        660
      ],
      "id": "56572784-e3bf-4795-bdf6-6bedae970a4f",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6720,
        1720
      ],
      "id": "752183be-78b4-4fec-96c4-b9ebe4efb4ad",
      "name": "descargar sticker"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -6460,
        1720
      ],
      "id": "a34427c7-6d58-4860-81cf-a5908d34a5d8",
      "name": "convertir sticker"
    },
    {
      "parameters": {
        "messages": {
          "messageValues": [
            {
              "message": "Analiza el siguiente mensaje recibido por WhatsApp y devuelve un JSON con dos claves:\n\n\"contiene_informacion_sensible\":\nClasifícalo exclusivamente como:\n\n\"true\" → si el usuario solicita o menciona datos como: estado del pedido, número de pedido, día de envío, día de pago, método de pago, dirección, teléfono u otros datos personales o de seguimiento.\n\n\"false\" → si no hay ninguna referencia a esos elementos.\n\n\"idioma\":\nDetecta el idioma del mensaje y devuelve una sola palabra con la lengua principal del texto. Ejemplos: \"Español\", \"English\", \"Français\", \"Русский\", etc.\n\n⚠️ Instrucciones importantes:\n\nNo añadas explicaciones ni ningún otro contenido.\n\nSolo responde con un JSON.\n\nSé conciso y preciso.\n\nEjemplo de salida esperada:\n\n{\n  \"contiene_informacion_sensible\": \"true\",\n  \"idioma\": \"Español\"\n}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -3220,
        1520
      ],
      "id": "2fd1e535-cd54-44a6-873f-ff88a3004019",
      "name": "Identificador de privacidad"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -2240,
        1220
      ],
      "id": "5a9b6dd5-2470-4baf-8fa0-3e0093dd52ad",
      "name": "Merge1"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2040,
        1220
      ],
      "id": "fa2e4133-c679-4ac4-9cc2-47daed05f11f",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e2de6ac5-d97f-4bd2-b011-08314c9f8112",
              "name": "mensaje",
              "value": "={{ $('Merge').item.json.content }}",
              "type": "string"
            },
            {
              "id": "db088a59-b9b8-446f-9631-003c5849df1a",
              "name": "intencion",
              "value": "={{ $('Aggregate1').item.json.data[0].accion_identificada }}",
              "type": "string"
            },
            {
              "id": "01afba78-10f5-4ce5-bc6a-45fc70c22551",
              "name": "privacidad",
              "value": "={{ $('Aggregate1').item.json.data[1].privacidad }}",
              "type": "string"
            },
            {
              "id": "875527d2-a9b3-4e55-8e18-7dfeb7d3938e",
              "name": "enHorarioComercial",
              "value": "={{ $json.enHorarioComercial }}",
              "type": "string"
            },
            {
              "id": "dabf60e6-821c-4999-92f7-a1e17fee4cd0",
              "name": "idioma",
              "value": "={{ $('Aggregate1').item.json.data[1].idioma }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1560,
        1220
      ],
      "id": "59282d42-6ca7-4b61-8aa7-080a42e0cd10",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -4720,
        1180
      ],
      "id": "a8f34be2-b76c-4cd1-afa9-8e3e182edd9f",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c3f8e100-0a17-4d37-98aa-b8a6f5b30ddc",
              "name": "accion_identificada",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2760,
        960
      ],
      "id": "e45e631e-8903-40f4-9cce-f9717ea74b85",
      "name": "Output Identifica la accion"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0270dfff-accd-42b8-99b0-ff06bd2fd4d1",
              "name": "privacidad",
              "value": "={{ $json.contiene_informacion_sensible }}",
              "type": "string"
            },
            {
              "id": "a51c33fc-949f-448d-bd6c-33d1d9713086",
              "name": "idioma",
              "value": "={{ $json.idioma }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2640,
        1520
      ],
      "id": "62e0f29a-2ca6-4b81-8421-1b6053c67e88",
      "name": "Output Identificador de privacidad"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Historial: {{ $json.historial }}\n\nIntención: {{ $('Edit Fields1').item.json.intencion }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Analiza la siguiente conversación con el cliente y responde con \"true\" o \"false\".\n\nResponde \"true\" si el mensaje cumple **al menos una** de estas condiciones: \n\n- El cliente ya ha confirmado que SI quiere hablar con un agente o le hemos dicho nosotros que le hemos transferido con un agente.\n\n- El cliente nos insulta o llama estafadores.\n\n- El cliente quiere hacer un pedido por WhastsApp.\n\n- La intención es 'Queja' o 'hablar con un agente'.\n\n\nINSTRUCCIONES CRÍTICAS:\n\nEvalúa el contexto para saber si le hemos indicado que vamos a pasar la consulta a un agente.\n\nResponde \"true\" solo si:\n\nLa solicitud actual es nueva y no se ha repetido anteriormente en la conversacion.\n\nEn todos los demás casos, incluyendo repeticiones, reformulaciones o ausencia de petición de ayuda, responde \"false\".\n\nNo expliques tu respuesta. Solo responde con \"true\" o \"false\".\n\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        760,
        2020
      ],
      "id": "3a73182b-2dd9-4e0b-88f1-197a3b9b0fef",
      "name": "Detector de intervención humana"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "28deb1a5-65cf-4581-bd61-0781110b325e",
              "name": "agente",
              "value": "={{ $json.output }}",
              "type": "string"
            },
            {
              "id": "3417aa2c-0779-4979-b1e1-b95dffde5d15",
              "name": "nombre",
              "value": "={{ $('Edit Fields').item.json.userName }}",
              "type": "string"
            },
            {
              "id": "28c59ec1-b6c0-4af9-bcc5-2312c0f73959",
              "name": "telefono",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid.replace(/\\D/g, '') }}\n",
              "type": "string"
            },
            {
              "id": "d7cb60d7-9f26-4fa7-9649-eebb4ac17f5f",
              "name": "intencion",
              "value": "={{ $('Edit Fields1').item.json.intencion }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        1220
      ],
      "id": "e3a43494-a688-4660-a20c-a7a83070eea4",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -3140,
        1740
      ],
      "id": "fba5e23a-e333-4e35-accc-41aee61c78fe",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "iNiz53Yy3AWmTq9X",
          "name": "Gemini API"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -3160,
        1180
      ],
      "id": "aa696a1e-fef7-49f9-8923-3da2a68cfe8c",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "iNiz53Yy3AWmTq9X",
          "name": "Gemini API"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-lite-001",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        860,
        2220
      ],
      "id": "0fdf65ab-6ea9-4af4-86f2-549d169283c7",
      "name": "Google Gemini Chat Model3",
      "credentials": {
        "googlePalmApi": {
          "id": "iNiz53Yy3AWmTq9X",
          "name": "Gemini API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const now = new Date();\nconst madridTime = new Date(now.toLocaleString(\"en-US\", { timeZone: \"Europe/Madrid\" }));\nconst day = madridTime.getDay(); // 0 = Domingo, 1 = Lunes, ..., 6 = Sábado\nconst hour = madridTime.getHours();\n\nconst enHorario = day >= 1 && day <= 5 && hour >= 9 && hour < 14;\n\nreturn [\n  {\n    json: {\n      enHorarioComercial: enHorario\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1780,
        1220
      ],
      "id": "22840465-ec68-4553-8bda-2806b798fb94",
      "name": "HorarioComercial"
    },
    {
      "parameters": {
        "content": "# Humanizador de respuesta-  Forma una respuesta natural\n## Divide en partes el mensaje, y espera antes de enviarlas",
        "height": 1240,
        "width": 3580,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        -60
      ],
      "id": "d4fedb32-5ad3-4204-88ff-3714173ed197",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Basic Chain - Clasificadores del input\n## Verifica la privacidad y detecta el motivo de la solicitud",
        "height": 1660,
        "width": 2400,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3740,
        480
      ],
      "id": "5db9226f-bc49-4f85-a2d5-6fa450c35d7d",
      "name": "Sticky Note2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -8220,
        1040
      ],
      "id": "d113054b-bf29-4997-9c36-87180c139e04",
      "name": "No Operation, do nothing2"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8600,
        760
      ],
      "id": "a7022887-8748-456f-83fa-58207fa9c5ec",
      "name": "Activar Bot",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "value": "blocked-bot",
        "expire": true,
        "ttl": 18000
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8600,
        940
      ],
      "id": "165bb8a9-30d7-4370-be71-7c924efef59c",
      "name": "Bloquea el agente",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "bot-state",
        "key": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8860,
        1180
      ],
      "id": "bc97151b-30e1-4079-b044-63e21b68d2cb",
      "name": "Verifica bloqueo",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bd712d41-139a-4068-9363-1e23fc492d5b",
              "leftValue": "={{ $json['bot-state'] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -8620,
        1180
      ],
      "id": "491cf53a-8eab-4cbd-af84-c31a74cfdda6",
      "name": "Verifica el estado de la sesión"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6fa50db6-b081-4d0d-94e2-cfe80d8ac29b",
              "leftValue": "={{ $json.body.data.key.fromMe }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9180,
        1160
      ],
      "id": "42b47b34-abcd-4868-b8ce-74b701a03e4c",
      "name": "Verifica quien ha escribe"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8da2ca7b-bbee-4fbb-84f7-892a6c6e4786",
              "leftValue": "={{ $json.body.data.message.conversation }}",
              "rightValue": ".",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9200,
        840
      ],
      "id": "fc8192bc-4ff8-48e5-918c-476a4c522955",
      "name": "Verifica palabra Clave"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Edit Fields').item.json.message.chatId }}",
        "messageData": "={{ JSON.stringify($('Edit Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -6860,
        1240
      ],
      "id": "09e627aa-8c46-4344-a8c7-259c8c625c9f",
      "name": "Guarda el mensaje en Redis",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Edit Fields').item.json.message.chatId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -6400,
        1240
      ],
      "id": "e42d3ee8-098c-45c4-ae10-611c13c6f5f8",
      "name": "Recupera los mensajes",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Edit Fields').item.json.message.chatId }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5980,
        1220
      ],
      "id": "e351e0a3-f69c-4946-9bde-34b75949d356",
      "name": "Borrar todos mensajes",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "=<image>\n{{ $json.content }}\n</image>",
              "type": "string"
            },
            {
              "id": "29e2c943-8bb0-4199-84dd-16d098894ddd",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5480,
        1720
      ],
      "id": "a12b6048-3748-43ee-8541-4b72d1642787",
      "name": "sticker content"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "34623990383",
        "messageText": "=📞 SOLICITUD DE HABLAR CON AGENTE\n\nUn cliente ha solicitado hablar con un agente. Te dejamos los detalles para que puedas gestionarlo cuanto antes:\n\n👤 Nombre del cliente: {{ $('Webhook').item.json.body.data.pushName }}\n📞 Teléfono: {{ $('Webhook').item.json.body.data.key.remoteJid.split('@')[0] }}\n🕒 Fecha y hora: {{ $now.setZone('Europe/Madrid').toFormat('yyyy-MM-dd HH:mm:ss') }}\n\n📌 Motivo de contacto: {{ $('Edit Fields1').item.json.intencion }}\n\nNúmero pedido: {{ $('trackingAgent').item.json.output }}\n\n💬 Mensaje recibido:\n{{ $('Webhook').item.json.body.data.message.conversation }}\n\n➡️ Cuando puedas, por favor responde al cliente directamente o deriva al equipo correspondiente.\n¡Gracias!\n",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3280,
        1620
      ],
      "id": "8805e323-c686-4c26-a2ea-f77c6345e230",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Edit Fields1').item.json.intencion }}",
                    "rightValue": "Queja",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "09d7bc2a-dbc4-4874-8679-22d9eb447c00"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "hablar con agente"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7e64ad78-e403-4dad-96da-4cc6c0168646",
                    "leftValue": "={{ $('Edit Fields1').item.json.intencion }}",
                    "rightValue": "Queja",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "queja"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2640,
        1720
      ],
      "id": "a8c7bfb9-96a4-4990-afef-b30287779b35",
      "name": "Switch1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "34623990383",
        "messageText": "=🚨 AVISO IMPORTANTE 🚨\n\nHemos recibido un mensaje que podría reflejar cierta frustración por parte de un cliente. Conviene revisar y dar respuesta con agilidad.\n\n👤 Nombre del cliente: {{ $('Webhook').item.json.body.data.pushName }}\n📞 Teléfono: {{ $('Webhook').item.json.body.data.key.remoteJid.split('@')[0] }}\n🕒 Fecha y hora: {{ $now.setZone('Europe/Madrid').toFormat('yyyy-MM-dd HH:mm:ss') }}\n\n📌 Posible motivo: {{ $('Edit Fields1').item.json.intencion }}\n\nNúmero pedido: {{ $('trackingAgent').item.json.output }}\n\n💬 Mensaje del cliente:\n{{ $('Webhook').item.json.body.data.message.conversation }}\n\n\n⚠️ Sería conveniente atenderlo cuanto antes para mantener una buena experiencia de atención.\n\n¡Gracias por estar pendiente! 😊\n",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3140,
        1860
      ],
      "id": "d5017980-00b9-4bce-838e-8ccf789021f5",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Detector de intervención humana - Notifica a un agente humano\n## Detecta si es necesaria la intervención humana en la conversación y notifica por email y WhatsApp ",
        "height": 1240,
        "width": 3380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        600,
        1460
      ],
      "id": "12cd857d-a4e5-4163-9014-fc9c4b92b595",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Sistema de desconexión con Redis - Desconecta el agente\n## Cuando un agente humano entra en la conversación, se desconecta, y se reactiva a los 5 minutos",
        "height": 1200,
        "width": 1720,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -9500,
        540
      ],
      "id": "8d44a73c-33ce-423f-9c2a-482813cd06e9",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5602d42f-6f3a-4adf-8657-32ea660b2af6",
      "name": "Try Again",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3300,
        2360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9d66713b-9b36-4454-b515-f3ce9fbb9373",
      "name": "Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3420,
        2140
      ]
    },
    {
      "parameters": {
        "sendTo": "=actiserver@gmail.com",
        "subject": "={{ $fromAI(\"subject\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2860,
        2480
      ],
      "id": "8b2c0800-b5f5-410e-83cb-f7a95ebd2b6d",
      "name": "Send Email",
      "webhookId": "253eeb40-a153-459d-9f07-0138bd5bd22c",
      "credentials": {
        "gmailOAuth2": {
          "id": "BwWjplhZQVpEPVPV",
          "name": "Gmail daniel@averis.es"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Nombre del cliente: {{ $('Edit Fields3').item.json.nombre }}\nTeléfono de contacto: {{ $('Edit Fields3').item.json.telefono }}\nFecha y hora de la solicitud: {{ $now.setZone('Europe/Madrid').toFormat('yyyy-MM-dd HH:mm:ss') }}\nNúmero de pedido: {{ $json.output }}\n\n📌 Motivo: {{ $('Edit Fields1').item.json.intencion }}\n\n💬 Mensaje del cliente:\n{{ $('Webhook').item.json.body.data.message.conversation }}\n\nHistorial de conversación:\n{{ $('Edit Fields3').item.json.historial }}",
        "options": {
          "systemMessage": "# Gestor de Tickets para Denipharma\n\nEres un asistente encargado de crear tickets de soporte para Denipharma, una tienda online de complementos alimenticios.\n\nTu tarea es enviar un email al equipo de soporte cada vez que un cliente necesite atención personalizada que no pueda ser resuelta automáticamente.\n\nLimpia, ordena y separa el texto del ´Historial de conversación' antes de enviarlo. Usa 'Usuario' y 'Agente Denipharma'. Que se vea claramente la conversación.\n\n## Herramienta de Email\n\n- Utiliza \"Send Email\" para enviar los tickets de soporte al equipo.\n\n## Formato del Email de Ticket\n\nTu email de ticket debe tener el siguiente formato:\n\nAsunto: Nuevo Ticket de Soporte - Cliente de WhatsApp: {número_teléfono}\n\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Nuevo Ticket de Soporte - Denipharma</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      line-height: 1.6;\n      color: #333;\n    }\n    .header {\n      background-color: #4CAF50;\n      color: white;\n      padding: 10px;\n      text-align: center;\n    }\n    .container {\n      padding: 20px;\n    }\n    .info-label {\n      font-weight: bold;\n    }\n    .conversation {\n      background-color: #f9f9f9;\n      padding: 15px;\n      border-radius: 5px;\n      margin-top: 20px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"header\">\n    <h2>Nuevo Ticket de Soporte - Denipharma</h2>\n  </div>\n  <div class=\"container\">\n    <p>Se ha recibido una solicitud de atención personalizada:</p>\n    \n    <p><span class=\"info-label\">Número de Teléfono:</span> {número_teléfono}</p>\n    <p><span class=\"info-label\">Nombre del Cliente:</span> {nombre}</p>\n    <p><span class=\"info-label\">Número de Pedido:</span> {número_pedido}</p>\n    <p><span class=\"info-label\">Fecha y Hora:</span> {fecha_hora}</p>\n    <p><span class=\"info-label\">Tipo de Consulta:</span> {tipo_consulta}</p>\n    \n    <div class=\"conversation\">\n      <p><span class=\"info-label\">Consulta del Cliente:</span></p>\n      <p>{consulta_cliente}</p>\n      \n      <p><span class=\"info-label\">Historial de Conversación:</span></p>\n      <p>{historial_conversación}</p>\n    </div>\n\n    <p><span class=\"info-label\">Accede aquí a la conversación de WhatsApp:</span> \n      <a href=\"https://web.whatsapp.com/send?phone={número_teléfono}\" target=\"_blank\">\n        https://web.whatsapp.com/send?phone={número_teléfono}\n      </a>\n    </p>\n\n    <p>Por favor, contacta al cliente lo antes posible durante el horario de atención (Lunes a Viernes de 9:00h a 14:00h).</p>\n  </div>\n</body>\n</html>\n"
        }
      },
      "id": "d1d95a66-efe6-4780-a257-253f6eb89330",
      "name": "ticketAgent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2620,
        2240
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2700,
        2500
      ],
      "id": "d3c75ef1-a876-411c-ad77-7fb5eea5c5ef",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.telefono }}",
        "options": {
          "systemMessage": "=Eres un asistente especializado en buscar el número del último pedido realizado en Denipharma y otras tiendas afiliadas de complementos alimenticios.\n\nObjetivo\nTu tarea es consultar SIEMPRE y EXCLUSIVAMENTE en el nodo 'Busqueda' de Airtable (Tool Airtable Search) los datos del pedido utilizando el número de teléfono proporcionado por el cliente, junto con el código postal.\nDebes ejecutar la herramienta Airtable Search para cada búsqueda.\n\nCampos de Búsqueda\nBusca usando este identificador:\n\n\"Teléfono\": Siempre se recibe en formato completo con prefijo y símbolo +, por ejemplo: +34623990383\n\nConsideraciones Importantes para la Búsqueda\n\nEl número se recibe ya en formato internacional correcto: +34XXXXXXXXX\n\nNo necesita transformaciones\n\n\nGuarda directamente el valor recibido como {telefono}\n\nEjemplo: +34623990383\n\nTono y Estilo de Comunicación\n\nEste flujo es interno, por lo que no se requiere tono conversacional ni mensajes explicativos\n\nLa salida debe ser clara, directa y sin formato adicional\n\nGeneración de Fórmula de Búsqueda\n\nPara búsqueda por teléfono:\n\n{Teléfono} = \"{telefono}\"\n\nSustituye {telefono} por el valor recibido\n\nProceso de Búsqueda\n\nRecibe el número de teléfono en formato +34...\n\nGuarda el valor como {telefono} \n\nGenera la fórmula de búsqueda como se indica\n\nEjecuta la búsqueda en Airtable con esa fórmula\n\nSi encuentras coincidencias:\n\nSi hay múltiples registros, selecciona el último pedido realizado\n\nDevuelve únicamente el valor del campo \"Número Pedido\"\n\nEjemplo de respuesta correcta:\n\n'LPS01071'\n\nSi no encuentras coincidencias:\n\nDevuelve únicamente:\n\n'No encontrado'\n\nPrivacidad y Seguridad\nEste flujo es de uso interno y no tiene restricciones de privacidad\n\nSolo se devuelve el valor del campo \"Número Pedido\"\n\nNo se muestran otros campos ni información adicional\n\n🚨 INSTRUCCIÓN CRÍTICA – CONSULTA OBLIGATORIA EN AIRTABLE\nAntes de devolver cualquier dato, debes ejecutar obligatoriamente el nodo Airtable Search.\nNo se permite responder ni asumir información sin haber hecho la búsqueda.\nEl resultado debe ser exacto y proveniente exclusivamente del campo \"Número Pedido\" del último registro encontrado."
        }
      },
      "id": "e93b034a-a01f-46c3-9034-dc795af250a5",
      "name": "trackingAgent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1900,
        2000
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app5uDjy4y1NDWZZv",
          "mode": "list",
          "cachedResultName": "Denipharma",
          "cachedResultUrl": "https://airtable.com/app5uDjy4y1NDWZZv"
        },
        "table": {
          "__rl": true,
          "value": "tblvYYhd4vE0jWUdY",
          "mode": "list",
          "cachedResultName": "📦 Pedidos",
          "cachedResultUrl": "https://airtable.com/app5uDjy4y1NDWZZv/tblvYYhd4vE0jWUdY"
        },
        "filterByFormula": "={Teléfono} = \"{{ $fromAI(\"telefono\") }}\"",
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        2120,
        2220
      ],
      "id": "725607a7-a510-4aca-b01d-97fe0af41488",
      "name": "Airtable Search",
      "credentials": {
        "airtableTokenApi": {
          "id": "HB6pc99jhrmQ4fvC",
          "name": "Airtable Denipharma"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1960,
        2220
      ],
      "id": "8911aa96-9fae-432e-883b-8c89ed7206ef",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -6640,
        1240
      ],
      "id": "1e5d8ad7-9572-41f1-8e98-6f2f71181f55",
      "name": "Wait1",
      "webhookId": "85f1bda7-80d7-496c-ae78-aeffa43000a9",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "549a42b6-e963-40a7-ac87-975c00f05941",
              "leftValue": "={{ $('Aggregate1').item.json.data[0].accion_identificada }}",
              "rightValue": "saludo",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "a4f03e41-ac7b-4447-85d5-1365e49ddaec",
              "leftValue": "={{ $('Aggregate1').item.json.data[0].accion_identificada }}",
              "rightValue": "información de producto",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        760,
        1720
      ],
      "id": "5fa022f6-6c26-4e45-85e1-34d8b9c2e4df",
      "name": "Filter"
    },
    {
      "parameters": {
        "model": "openai/gpt-4.1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1260,
        800
      ],
      "id": "fa224934-4ee4-476e-be2e-7f473786be42",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "TaWLwZCIMo3j9GPj",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM n8n_chat_histories\nWHERE session_id = '{{ $('Edit Fields').item.json.message.chatId }}'\nORDER BY id DESC\nLIMIT 8;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1040,
        1720
      ],
      "id": "6f369434-2c98-4bd6-92a0-677ca1474eb7",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "NR0jJMop66avXtir",
          "name": "Postgres Daniel"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fb0989d6-5077-4364-827e-796d29c9672f",
              "name": "historial",
              "value": "={{ $json.historial }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        1720
      ],
      "id": "6029ed88-24ed-4d7e-8169-90aa2ec0eba4",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "message.content",
              "renameField": true,
              "outputFieldName": "historial"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1320,
        1720
      ],
      "id": "659ab7cf-89cd-4dda-96e6-98d96f20328b",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5795aa72-7fa5-45c8-910c-a3c4f5056fdd",
              "name": "telefono",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "c9e36fc1-e467-4085-8f4b-15023fee678c",
              "name": "nombre",
              "value": "={{ $('Webhook').item.json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "f1189f93-4298-412d-ba72-c1a41df3e72f",
              "name": "telefono",
              "value": "={{ $('Webhook').item.json.body.data.key.remoteJid.split('@')[0] }} ",
              "type": "string"
            },
            {
              "id": "96566b41-c1cf-4b82-a3d0-e308cba6cf42",
              "name": "historial",
              "value": "={{ $('Edit Fields5').item.json.historial }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        2000
      ],
      "id": "97d453e7-e3b8-47f6-be9f-1b1f95fdf374",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9f382f73-0ea7-4b77-bf29-a75b5717401c",
              "leftValue": "={{ $json.text }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        2020
      ],
      "id": "e34ed513-a9b9-4449-b6f0-2dff12367afc",
      "name": "If1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1460,
        2200
      ],
      "id": "8e341b1a-adaa-40be-a64e-de89416d24bd",
      "name": "No Operation, do nothing3"
    },
    {
      "parameters": {
        "messages": {
          "messageValues": [
            {
              "message": "Analiza el siguiente mensaje recibido por WhatsApp y clasifícalo estrictamente en una sola de las siguientes categorías operativas. No expliques tu decisión. Tu respuesta debe ser solo una de las etiquetas siguientes (sin comillas ni texto adicional):\n\nsaludo  \nseguimiento de pedido  \ninformación de producto  \nintención de compra  \nQueja\nFAQ  \nhablar con agente  \notro\n\nCriterios para la clasificación:\n\nsaludo → Si el mensaje contiene ÚNICAMENTE un saludo breve (ej. “hola”, “buenas”, “hola, ¿estás?”, etc.) y no incluye una petición concreta.\n\nseguimiento de pedido → Si el usuario pregunta por el estado de un pedido, menciona que no lo ha recibido, ya ha hecho un pedido, o proporciona un número de pedido.\n\ninformación de producto → Si consulta sobre uso, efectos, composición, diferencias, disponibilidad, precio o presentación de un producto.\n\nintención de compra → Si expresa intención de comprar, realizar un pedido, pagar o conocer cómo adquirir algo.\n\nqueja - si el cliente se muestra molesto y enfadado, y denota que quiere quejarse de una manera evidente. También si usa adjetivos despectivos o insultos.\n\nFAQ → Si plantea dudas generales como plazos de entrega, devoluciones, formas de pago, horarios, envíos, o contacto.\n\nhablar con agente → Si dice que necesita hablar con alguien, quiere ser atendido por una persona, no ha recibido respuesta, o solicita ayuda personalizada.\n\notro → Si el mensaje no encaja claramente en ninguna de las categorías anteriores.\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -3220,
        960
      ],
      "id": "5bbec754-65c0-4ef9-864b-18be7fe42807",
      "name": "Identifica la intención"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  // Extraemos el texto\n  const texto = item.json.text;\n\n  // Limpiamos los backticks y la etiqueta ```json\n  const jsonLimpio = texto.replace(/```json|```/g, '').trim();\n\n  // Parseamos el string JSON a objeto\n  const datos = JSON.parse(jsonLimpio);\n\n  // Devolvemos las claves por separado\n  return {\n    json: {\n      contiene_informacion_sensible: datos.contiene_informacion_sensible,\n      idioma: datos.idioma\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2840,
        1520
      ],
      "id": "b024591c-e889-4ca2-9c0a-bb036c753014",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "109e14b9-82eb-45e0-97e2-dab5d80f1da8",
              "leftValue": "={{ $json.error }}",
              "rightValue": "Model output doesn't fit required format",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1640,
        600
      ],
      "id": "10f5a67a-3696-42ca-9d14-113bdc2256f1",
      "name": "If3"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        -5880,
        940
      ],
      "id": "0dfe32db-8002-4853-99bb-ad7e71afe227",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        -5860,
        1980
      ],
      "id": "3ce609c4-1327-4a5c-95fc-cbbd2e03a7b7",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -6460,
        2240
      ],
      "id": "e26d83bb-1786-4d97-9d45-87eef44be148",
      "name": "convertir audio1"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -6220,
        2240
      ],
      "id": "998810fa-2aad-4dd8-80bd-ffe0e5c38516",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6740,
        2240
      ],
      "id": "140f8d2a-0162-4aab-9c18-23f53c76f8f3",
      "name": "descargar video"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Analiza y describe brevemente esta imagen y cualquier texto visible en ella. Tu respuesta debe comenzar con: \"Imagen enviada ____\"",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "messageType": "imageBinary"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -6000,
        720
      ],
      "id": "3b92537f-6947-4b28-b0b2-50951244c0fd",
      "name": "Analiza imagen"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Analiza y describe brevemente este sticker. Tu respuesta debe comenzar con: \"Sticker enviado ____\"",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "messageType": "imageBinary"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -5960,
        1720
      ],
      "id": "a19a3a89-5fa0-4766-969a-4bdbd0c4015f",
      "name": "Analiza sticker"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "messages": {
          "messageValues": [
            {
              "message": "Eres una cadena encargada de analizar el texto transcrito de un vídeo, proporcionado por el nodo anterior. Tu función es evaluar si dicho texto contiene una petición o mensaje claro y comprensible por parte del usuario.\n\nSi el texto no proporciona suficiente contexto, es demasiado genérico, contiene palabras sueltas, frases inconexas o no incluye una pregunta, intención o información clara, responde exclusivamente con:\n\"El usuario no dio suficiente contexto en su mensaje.\"\n\nSi el texto contiene una petición o mensaje claro, con información suficiente para que un agente lo comprenda y responda correctamente, devuelve la transcripción tal cual está, sin modificarla.\n\nNo intentes interpretar, completar o reformular el mensaje original del usuario. Tu único objetivo es filtrar el contenido según el nivel de claridad y contexto proporcionado.\n\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -5920,
        2240
      ],
      "id": "ee56c150-a406-4d6e-b028-76b21febe6aa",
      "name": "Analiza video"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "1b078c6c-6824-43e2-8bff-8a56fca7a1c9",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5460,
        2240
      ],
      "id": "be78b341-04c8-4ca0-b448-dc25227369cb",
      "name": "video content"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        -5860,
        2460
      ],
      "id": "f5757c97-947e-4369-8bbc-6cd8d48cadee",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "content": "# Formato de mensajes- Procesa los mensajes de voz, imagen, sticker y texto\n## Convierte y formatea los datos para ser procesados, incluyendo la espera y el encolamiento de mensajes de texto",
        "height": 2680,
        "width": 3780
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7660,
        80
      ],
      "id": "00a6e5c2-1c60-4b2a-ac39-a39dc52738a4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1000,
        1640
      ],
      "id": "856e716b-0f6a-4893-b711-43e1c34f3590",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "TaWLwZCIMo3j9GPj",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        40,
        1640
      ],
      "id": "b86740de-491e-4102-ae9d-b15d100d6a7a",
      "name": "Think"
    },
    {
      "parameters": {
        "content": "# Agente IA (gpt-4o) - El cerebro principal\n## Se encarga de la gestión de la consulta, activa herramientas y devuelve una respuesta",
        "height": 1120,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1200,
        840
      ],
      "id": "2c6337ce-5754-489e-bab4-dadf3315608c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "name": "base_conocimientos",
        "description": "Proporciona una base de conocimientos estructurada y precisa acerca de informacion de RealTime para poder responder preguntas frecuentes que puedan tener los clientes. Se usará para responder cosas como\n\n'Cuales son sus horarios?'\n'Hacen servicio postventa?'\n'Cuanto cuesta una reparacion?'",
        "workflowId": {
          "__rl": true,
          "value": "YsY2fBKUVCAQ2Ums",
          "mode": "list",
          "cachedResultName": "base_conocimientos"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -440,
        1640
      ],
      "id": "7cf4868b-0718-4000-a960-45a82d14d08c",
      "name": "base de conocimientos"
    },
    {
      "parameters": {
        "name": "consulta_productos",
        "description": "Usa esta herramienta para recuperar los productos que tiene disponibles realtime y todos los datos de los mismos, Siempre debes solicitar los datalles del producto una vez adquirido, principalmente el precio",
        "workflowId": {
          "__rl": true,
          "value": "7N3qK9huW8BewgZl",
          "mode": "list",
          "cachedResultName": "productos"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -620,
        1640
      ],
      "id": "8400fb42-0298-4cc5-81e7-9ca2f9620cf0",
      "name": "Productos"
    },
    {
      "parameters": {
        "name": "cotizaciones",
        "description": "Usa esta herramienta para darle a los usuarios cotizaciones de sus solicitudes especificas cuando te lo pidan",
        "workflowId": {
          "__rl": true,
          "value": "xxgErxngqykBVb4x",
          "mode": "list",
          "cachedResultName": "cotizaciones"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "correo": "={{ $fromAI('correo_del_ususario','esto es el correo electronico del usuario') }}",
            "producto": "={{ $fromAI('producto_solicitado','este es el producto que solicito el usuario') }}",
            "solicitud": "={{ $fromAI('detalles','esto corresponde a los detalles de la orden como sitio del envio, forma de pago, impuestos etc') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "correo",
              "displayName": "correo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "producto",
              "displayName": "producto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "solicitud",
              "displayName": "solicitud",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -280,
        1640
      ],
      "id": "06f15810-116b-46a2-8940-fb90b6bf25b8",
      "name": "cotizaciones"
    },
    {
      "parameters": {
        "name": "agendar_citas",
        "description": "usa esta herramienta para agendar citas en la medida que los usuarios lo soliciten",
        "workflowId": {
          "__rl": true,
          "value": "tsXf23H9MIdkwMXr",
          "mode": "list",
          "cachedResultName": "agendar_citas_realtime"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "dia": "={{ $fromAI('dia','aqui debe ir el día en el que el usuario desea agendar la cita, debe ir el este formato: YY/MM/DD') }}",
            "hora": "={{ $fromAI('hora','aqui debe ir la hora en la que el usuario desea agendar la cita') }}",
            "acompañantes": "={{ $fromAI('acompnantes','aqui debe ir el numero de acompañantes que tendra el usuario') }}",
            "consulta": "={{ $fromAI('consulta','aqui debe ir el motivo de la cita con detalles extras que de el usuario') }}",
            "correo_electronico": "={{ $fromAI('correo_electronico','aqui debe ir el correo electronico del usuario') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "correo_electronico",
              "displayName": "correo_electronico",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "hora",
              "displayName": "hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "acompañantes",
              "displayName": "acompañantes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "consulta",
              "displayName": "consulta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -100,
        1640
      ],
      "id": "30146836-8e29-427e-95d3-2f1400a8d475",
      "name": "citas"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.message.chatId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -800,
        1640
      ],
      "id": "e347fc17-4a06-430c-b0c9-c833c46741df",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "NR0jJMop66avXtir",
          "name": "Postgres Daniel"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensaje }}",
        "options": {
          "systemMessage": "=  ### 📌 IDENTIDAD DEL AGENTE  \n**NOMBRE:** Martín  \n**ROL:** Asesor de ventas y atención al cliente de **RealTime**, una tienda de **relojería y joyería de lujo**.  \n**MISIÓN:** Maximizar la conversión de clientes potenciales a compradores, proporcionando información precisa y utilizando herramientas estratégicas para **consultar, vender, cotizar y agendar citas** de manera óptima.  \n\n---  \n\n## 🔥 PRINCIPIOS FUNDAMENTALES  \n✅ **Responde SIEMPRE en español** con un tono profesional, claro y orientado a la venta.  \n✅ **Enfócate ÚNICAMENTE en productos y servicios de RealTime**. No respondas preguntas ajenas al negocio.  \n✅ **Dirige SIEMPRE la conversación hacia la conversión o venta.** Cada interacción debe acercar al usuario a una compra o visita a la tienda.  \n✅ **Usa las herramientas disponibles de manera estratégica** para consultar información y garantizar respuestas 100% precisas.  \n✅ **Nunca inventes información.** Si un dato no está disponible, guía al usuario con alternativas o solicítale más detalles.  \n\n---  \n\n## 🎯 FUNCIONES CLAVE  \n\n### 1️⃣ CONSULTAR PRODUCTOS 🛍️  \n- **Propósito:** Responder preguntas sobre productos disponibles en la tienda (nombre, precio, stock, descripción, etc.).  \n- **Estrategia:**  \n  - Filtra por **categoría, material, marca o precio** si el usuario no es específico.  \n  - Si el producto no está en stock, **sugiere alternativas similares**.  \n\n✅ **Ejemplo:**  \n**Usuario:** \"¿Tienen relojes Rolex con correa de cuero?\"  \n**Martín:** \"Sí, tenemos modelos de Rolex con correa de cuero disponibles. ¿Prefieres un modelo clásico o deportivo?\"  \n\n---\n\n### 2️⃣ COTIZACIONES 💰  \n- **Propósito:** Generar presupuestos para clientes interesados.  \n- **Proceso:**  \n  1. **Antes de cotizar, pregunta al usuario si desea recibir la cotización.**  \n  2. **Solicita estos datos esenciales:**  \n     - **Correo electrónico** 📧  \n     - **Producto de interés** ⌚💎  \n     - **Detalles adicionales** (método de pago, ubicación, divisa, certificación oficial, garantía extendida, mantenimiento preventivo anual).  \n  3. **Si menciona un estado/provincia en vez de un país, confirma la ubicación completa.**  \n\n✅ **Ejemplo:**  \n**Usuario:** \"¿Cuánto cuesta con envío a Guárico?\"  \n**Martín:** \"Perfecto, ¿Guárico, Venezuela correcto? También necesito saber en qué divisa pagarás y si deseas garantía extendida o certificación oficial.\"  \n\n---\n\n### 3️⃣ AGENDA DE CITAS 📅  \n- **Propósito:** Programar visitas en la tienda para compras, consultas personalizadas o reparaciones.  \n- **Proceso:**  \n  1. **Solicita estos datos esenciales:**  \n     - **Correo electrónico** 📧  \n     - **Número de acompañantes** 👥  \n     - **Día y hora** 📆  \n     - **Motivo específico de la cita** 📝  \n  2. **Verifica disponibilidad antes de confirmar.**  \n  3. **Si el horario está ocupado, sugiere alternativas cercanas.** \n  4. ES ABSOLUTAMENTE OBLIGATORIO QUE SOLICITES TODOS LOS DATOS SIEMPRE, JAMAS LO OLVIDES \n  5. Debes adjuntar en la consulta la intención de la misma en 3 partes: agendar, eliminar o modificar. Esto es OBLIGATORIO,\nEJEMPLO: la consulta del usuario es \"agender cita para ver reloj de lujo\"\n6. También toma en cuenta siempre que vayas a invocar esta herrmaienta que la fecha actual es {{ $now }} y no puedes invocar años anteriores a este ni aceptar fechas que sean anteriores a la misma\n\n✅ **Ejemplo:**  \n**Usuario:** \"Quiero visitar la tienda para ver relojes Cartier.\"  \n**Martín:** \"¡Con gusto! Para reservar tu cita, dime tu correo electrónico, el número de acompañantes y la fecha/hora que prefieres.\"  \n\n---\n\n### 4️⃣ INFORMACIÓN GENERAL ℹ️  \n- **Propósito:** Responder sobre horarios, políticas de pago/envío, servicios postventa y preguntas frecuentes.  \n- **Proceso:**  \n  1. Usa la herramienta de **Base de Conocimientos** para obtener la información correcta.  \n  2. Si la consulta está relacionada con productos, redirige la conversación hacia la compra.  \n\n✅ **Ejemplo:**  \n**Usuario:** \"¿Cómo puedo pagar?\"  \n**Martín:** \"Aceptamos pagos con tarjeta, transferencia bancaria y PayPal. ¿Te gustaría ver opciones de relojes en tu presupuesto?\"  \n\n---\n\n## ⚠️ REGLAS ESTRICTAS (LO QUE **NUNCA** DEBES HACER)  \n❌ **NO RESPONDAS PREGUNTAS PERSONALES** (clima, noticias, temas ajenos a RealTime).  \n❌ **NO HABLES DE PRODUCTOS QUE NO VENDEMOS.** Si el usuario pregunta por algo que no tenemos, sugiere alternativas de nuestra tienda.  \n❌ **NO COTICES SIN ANTES SOLICITAR LOS DATOS NECESARIOS.**  \n❌ **NO AGENDES CITAS SIN CONFIRMAR DISPONIBILIDAD.**  \n❌ **NO PROPORCIONES INFORMACIÓN INEXACTA O INVENTADA.**  \n\n---\n\n### 🚀 FLUJO ÓPTIMO DE DECISIÓN  \n1️⃣ **Detecta la intención del usuario** (compra, cotización, consulta, cita).  \n2️⃣ **Selecciona la herramienta adecuada.**  \n3️⃣ **Si falta información, pregunta antes de ejecutar una acción.**  \n4️⃣ **Responde con claridad, guiando siempre la conversación hacia la venta o conversión.**  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -540,
        1220
      ],
      "id": "d1d6445a-e711-4080-a2a9-beec905d7367",
      "name": "Asistente de Ventas"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "={{ $('Edit Fields').item.json.message.chatId }}",
        "messageText": "={{ $('Verificador de Respuesta').item.json.output.response.part_1 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1940,
        620
      ],
      "id": "44834cf0-b7c0-46d3-832a-b39f27bf30e2",
      "name": "Enviar parte 1",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "Espera X segundos (Variable)",
        "height": 240,
        "width": 230,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6700,
        1160
      ],
      "id": "9e14d897-1b8b-4a15-b8d5-b61ef8e4e088",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "109e14b9-82eb-45e0-97e2-dab5d80f1da8",
              "leftValue": "={{ $('Asistente de Ventas').item.json.output.length > 60 }}",
              "rightValue": "={{ $('Asistente de Ventas').item.json.output.length > 60}}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        700,
        600
      ],
      "id": "1ddb1470-f769-4143-a01f-b20468ea3fe1",
      "name": "If4"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "={{ $('Edit Fields').item.json.message.chatId }}",
        "messageText": "={{ $('Asistente de Ventas').item.json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1040,
        400
      ],
      "id": "efd90268-c3dc-45c7-88e6-9707f488b783",
      "name": "Delay corto",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "{{ $('Edit Fields').item.json.message.chatId }}",
        "messageText": "={{ $('Verificador de Respuesta').item.json.output.response.part_2 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2620,
        500
      ],
      "id": "5b8a913c-76cc-4786-b097-b9e54b1ad8f2",
      "name": "Enviar parte 2",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "={{ $('Edit Fields').item.json.message.chatId }}",
        "messageText": "={{ $('Verificador de Respuesta').item.json.output.response.part_3 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3380,
        500
      ],
      "id": "0c2acc4e-2940-4ef4-a79b-a95bc1c4e098",
      "name": "Enviar parte 3",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Verifica quien ha escribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "descargar audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "descargar imagen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Guarda el mensaje en Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "descargar sticker",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "descargar video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar audio": {
      "main": [
        [
          {
            "node": "convertir audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir audio": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "audio content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar imagen": {
      "main": [
        [
          {
            "node": "convertir imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir imagen": {
      "main": [
        [
          {
            "node": "Analiza imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "audio content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "mensaje": {
      "main": [
        [
          {
            "node": "Identifica la intención",
            "type": "main",
            "index": 0
          },
          {
            "node": "Identificador de privacidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Json Parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json Parse": {
      "main": [
        [
          {
            "node": "text content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Borrar todos mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Verificador de Respuesta",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Verificador de Respuesta": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Parte 2": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Parte 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Enviar parte 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Parte 3": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Enviar parte 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar sticker": {
      "main": [
        [
          {
            "node": "convertir sticker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir sticker": {
      "main": [
        [
          {
            "node": "Analiza sticker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identificador de privacidad": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "HorarioComercial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Output Identifica la accion": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Output Identificador de privacidad": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Detector de intervención humana": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Identificador de privacidad",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Identifica la intención",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Detector de intervención humana",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HorarioComercial": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bloquea el agente": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica bloqueo": {
      "main": [
        [
          {
            "node": "Verifica el estado de la sesión",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica el estado de la sesión": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica quien ha escribe": {
      "main": [
        [
          {
            "node": "Verifica palabra Clave",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verifica bloqueo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica palabra Clave": {
      "main": [
        [
          {
            "node": "Activar Bot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Bloquea el agente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guarda el mensaje en Redis": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recupera los mensajes": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Borrar todos mensajes": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sticker content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "ticketAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ticketAgent": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "ticketAgent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Airtable Search": {
      "ai_tool": [
        [
          {
            "node": "trackingAgent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "trackingAgent": {
      "main": [
        [
          {
            "node": "ticketAgent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "trackingAgent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Recupera los mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Verificador de Respuesta",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Detector de intervención humana",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "trackingAgent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Identifica la intención": {
      "main": [
        [
          {
            "node": "Output Identifica la accion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Output Identificador de privacidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [],
        [
          {
            "node": "Enviar parte 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Analiza imagen",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Analiza sticker",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "convertir audio1": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "Analiza video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar video": {
      "main": [
        [
          {
            "node": "convertir audio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analiza imagen": {
      "main": [
        [
          {
            "node": "image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analiza sticker": {
      "main": [
        [
          {
            "node": "sticker content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analiza video": {
      "main": [
        [
          {
            "node": "video content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Analiza video",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "video content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "base de conocimientos": {
      "ai_tool": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Productos": {
      "ai_tool": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cotizaciones": {
      "ai_tool": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "citas": {
      "ai_tool": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Asistente de Ventas",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Asistente de Ventas": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Delay corto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificador de Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar parte 1": {
      "main": [
        [
          {
            "node": "If Parte 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar parte 2": {
      "main": [
        [
          {
            "node": "If Parte 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar parte 3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "5ebff23e-d8ea-426f-9f62-c91b789f32b5",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-05-15T14:33:16.557Z",
      "updatedAt": "2025-05-15T14:33:16.557Z",
      "id": "3zErvs7bxXNKJInJ",
      "name": "Drive"
    },
    {
      "createdAt": "2025-04-29T13:00:38.791Z",
      "updatedAt": "2025-04-29T13:00:38.791Z",
      "id": "9pWt3w77gkTCDhpe",
      "name": "RAG"
    },
    {
      "createdAt": "2025-05-15T14:33:16.556Z",
      "updatedAt": "2025-05-15T14:33:16.556Z",
      "id": "fCf1s0ahZuoGedaD",
      "name": "OpenAi"
    },
    {
      "createdAt": "2025-05-15T14:33:16.567Z",
      "updatedAt": "2025-05-15T14:33:16.567Z",
      "id": "IORN13JRi1uBHf2Y",
      "name": "Gemini"
    },
    {
      "createdAt": "2025-04-27T18:42:31.149Z",
      "updatedAt": "2025-04-27T18:42:31.149Z",
      "id": "yCzirQ8grCnJYX3H",
      "name": "Whatsapp"
    }
  ]
}