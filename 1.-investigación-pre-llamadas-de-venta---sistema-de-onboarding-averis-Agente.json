{
  "createdAt": "2025-05-05T19:31:30.082Z",
  "updatedAt": "2025-05-14T20:36:08.770Z",
  "id": "HL8adEbbuHSizUCl",
  "name": "1. Investigación Pre-Llamadas de venta - Sistema de Onboarding Averis",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-f1db6c.stack.tryrelevance.com/latest/studios/f9a70da4-2d80-4e17-ad1b-a37716c423c8/trigger_limited",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"params\":{\n    \"linkedin_url\":\"{{ $json.payload.questions_and_answers[3].answer }}\",\n    \"last_x_days\":30\n  },\n  \"project\":\"[PROJECT ID]\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        360,
        140
      ],
      "id": "f428db17-3b42-4691-830c-1aa40382a92e",
      "name": "Scrape Profiles + Posts - Relevance AI",
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar-pro\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a researcher in a business development team. Your job is to find as much research as you can about the prospect company. You must ensure your research is for the correct company and is highly accurate. Your research must always include what the prospect company does.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Find as much info as you can about {{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.company }}. }} This is their website URL: {{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.company_website }}\"\n    }\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1080,
        140
      ],
      "id": "d3fed8be-2858-4bc5-b55a-5d08f79cb034",
      "name": "Research Company - Perplexity",
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "content": "# Scrapping \n- LinkedIn \n- Online \n- TrustPilot Reviews\n",
        "height": 360,
        "width": 1520
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        0
      ],
      "typeVersion": 1,
      "id": "266cdd2e-da36-4c5c-b9b8-6f90a8d2adb0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/nikita-sviridenko~trustpilot-reviews-scraper/run-sync-get-dataset-items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"companyDomain\": \"{{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.company_domain }}\",\n    \"count\": 5,\n    \"replies\": false,\n    \"sort\": \"recency\",\n    \"stars\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \"startPage\": 1,\n    \"verified\": false\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1480,
        140
      ],
      "id": "a50b71e3-8d99-4a02-8ff7-40693321c427",
      "name": "TrustPilot Reviews (1-3 Stars)",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "scope": "organization",
        "events": [
          "invitee.created"
        ]
      },
      "type": "n8n-nodes-base.calendlyTrigger",
      "typeVersion": 1,
      "position": [
        20,
        140
      ],
      "id": "86c841cc-8359-4060-be92-fd58aec095f4",
      "name": "Calendly Trigger",
      "webhookId": "25d75541-c398-4ed1-bb30-1972bc026745"
    },
    {
      "parameters": {
        "jsCode": "// Initialize an empty string for reviews HTML\nlet reviewsHTML = '';\n\n// Loop over each item (each review)\nitems.forEach(item => {\n  const review = item.json; // each item is a review object\n  reviewsHTML += `<div class=\"review-card\" style=\"border:1px solid #ddd; padding:10px; margin-bottom:10px;\">`;\n  reviewsHTML += `<h3>${review.reviewHeadline}</h3>`;\n  reviewsHTML += `<p><strong>Rating:</strong> ${review.ratingValue}</p>`;\n  // Format the date nicely; adjust locale as needed\n  const date = new Date(review.datePublished);\n  reviewsHTML += `<p><strong>Date:</strong> ${date.toLocaleDateString()}</p>`;\n  reviewsHTML += `<p>${review.reviewBody}</p>`;\n  if (review.replyMessage) {\n    reviewsHTML += `<p><strong>Reply:</strong> ${review.replyMessage}</p>`;\n  }\n  reviewsHTML += `</div>`;\n});\n\n// Return a new JSON object with the combined reviews HTML\nreturn [{ json: { reviewsHTML } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        140
      ],
      "id": "2fcb5bc3-607b-4467-8be7-7efa85b15ba2",
      "name": "Reviews"
    },
    {
      "parameters": {
        "jsCode": "const input = $node[\"Scrape Profiles + Posts - Relevance AI\"].json;\n\n// Getting posts from output, then fallback to top-level.\nconst posts = (input.output && input.output.last_30_days_posts_transformed) \n  || input.last_30_days_posts_transformed \n  || [];\n\n// Build HTML for each LinkedIn post\nlet postsHTML = '';\nif (Array.isArray(posts)) {\n  posts.forEach(post => {\n    postsHTML += `<div class=\"linkedin-post\" style=\"border:1px solid #ddd; padding:10px; margin-bottom:10px;\">\n      <p>${post.user_post}</p>\n      <p><em>Posted on: ${post.posted}</em></p>\n    </div>`;\n  });\n}\n\n// Return only the generated HTML\nreturn [{ json: { postsHTML } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        140
      ],
      "id": "6ddbb26a-5d0e-48e9-abdc-600c1af78a3a",
      "name": "Posts"
    },
    {
      "parameters": {
        "jsCode": "// Retrieve the JSON from the previous node\nconst input = items[0].json;\n\n// Extract the citations array; default to an empty array if not present\nconst citations = input.citations || [];\n\n// Build an HTML unordered list for the citations\nlet citationsHTML = '<ul>';\nif (Array.isArray(citations)) {\n  citations.forEach(citation => {\n    citationsHTML += `<li><a href=\"${citation}\" target=\"_blank\">${citation}</a></li>`;\n  });\n}\ncitationsHTML += '</ul>';\n\n// Return a new JSON object containing the generated HTML snippet\nreturn [{ json: { citationsHTML } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        140
      ],
      "id": "d693741c-779c-4ba9-ad0e-e8625822defe",
      "name": "Citations"
    },
    {
      "parameters": {
        "content": "# Crea Reporte\n",
        "height": 360,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2640,
        0
      ],
      "typeVersion": 1,
      "id": "be573850-2992-444b-a24b-e3166818e762",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Envía Email\n",
        "height": 360,
        "width": 300,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2980,
        0
      ],
      "typeVersion": 1,
      "id": "e6a8767c-ef39-4928-ba16-0e837665a1d5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Consultant Research Report</title>\n    <style>\n      body {\n        font-family: Arial, sans-serif;\n        margin: 20px;\n        line-height: 1.6;\n        color: #333;\n      }\n      h1, h2, h3 {\n        color: #222;\n      }\n      .section {\n        margin-bottom: 40px;\n      }\n      .profile-details p {\n        margin: 5px 0;\n      }\n      table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-top: 10px;\n      }\n      th, td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        vertical-align: top;\n      }\n      th {\n        background-color: #f2f2f2;\n      }\n      .card {\n        border: 1px solid #ddd;\n        padding: 10px;\n        margin-bottom: 10px;\n        border-radius: 4px;\n      }\n      a {\n        color: #1a0dab;\n        text-decoration: none;\n      }\n      a:hover {\n        text-decoration: underline;\n      }\n      /* New styles for the header images container */\n      .header-images {\n        display: flex;\n        margin-bottom: 20px;\n      }\n      .header-images img {\n        width: 50%;\n        height: auto;\n        max-width: 300px;\n\n      }\n    </style>\n  </head>\n  <body>\n        <!-- Header Images -->\n    <div class=\"header-images\">\n      <img src=\"{{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.profile_image_url }}\" alt=\"Profile Picture\">\n      <img src=\"{{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.company_logo_url }}\" alt=\"Company Logo\">\n    </div>\n\n    <!-- Analysis & Key Facts -->\n    <div class=\"section\" id=\"analysis\">\n      <h1>Analysis & Key Facts</h1>\n      {{ $('Person + Company Profile').last().json.message.content }}\n      {{ $('Pain Points + Solutions').last().json.message.content }}\n    </div>\n\n      <!-- New Section: Booking Page Info -->\n    <div class=\"section\" id=\"booking-page-info\">\n      <h1>Booking Page Info</h1>\n      <h3>How they found us:</h3>\n      <p>{{ $('Calendly Trigger').last().json.payload.questions_and_answers[1].answer }}</p>\n      <h3>Info for the meeting:</h3>\n      <p>{{ $('Calendly Trigger').last().json.payload.questions_and_answers[2].answer }}</p>\n    </div>\n\n    <!-- Detailed Research Report -->\n    <div class=\"section\" id=\"research-report\">\n      <h1>Research Report</h1>\n      \n      <!-- LinkedIn Profile Details -->\n      <div id=\"linkedin-profile\" class=\"profile-details\">\n        <h2>LinkedIn Profile Details</h2>\n        <p><strong>Name:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.full_name }}</p>\n        <p><strong>Headline:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.headline }}</p>\n        <p><strong>Location:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.location }}</p>\n        <p><strong>About:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.about }}</p>\n        <p><strong>City:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.city }}</p>\n        <p><strong>Country:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.country }}</p>\n        <p><strong>Job Title:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.job_title }}</p>\n        <p><strong>Company:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.company }}</p>\n        <p><strong>Company Description:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.company_description }}</p>\n        <p>\n          <strong>Company Website:</strong>\n          <a href=\"{{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.company_website }}\" target=\"_blank\">\n            {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.company_website }}\n          </a>\n        </p>\n        <p><strong>Industry:</strong> {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.company_industry }}</p>\n        <p>\n          <strong>LinkedIn URL:</strong>\n          <a href=\"{{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.linkedin_url }}\" target=\"_blank\">\n            {{ $node[\"Scrape Profiles + Posts - Relevance AI\"].json.output.linkedin_profile_details_data.linkedin_url }}\n          </a>\n        </p>\n      </div>\n      \n      <!-- Education -->\n      <div id=\"education\">\n        <h2>Education</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>School</th>\n              <th>Degree</th>\n              <th>Field of Study</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{ $node[\"Education\"].json.educationTable }}\n          </tbody>\n        </table>\n      </div>\n      \n      <!-- Experience -->\n      <div id=\"experience\">\n        <h2>Experience</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Company</th>\n              <th>Title</th>\n              <th>Date Range</th>\n              <th>Location</th>\n            </tr>\n          </thead>\n          <tbody>\n            {{ $node[\"Experiences\"].json.experiencesTable }}\n          </tbody>\n        </table>\n      </div>\n      \n      <!-- Recent LinkedIn Posts -->\n      <div id=\"linkedin-posts\">\n        <h2>Recent LinkedIn Posts</h2>\n        {{ $node[\"Posts\"].json.postsHTML }}\n      </div>\n      \n      <!-- Google Research Analysis -->\n      <div id=\"google-research\">\n        <h2>Google Research Analysis</h2>\n        <p>{{ $node[\"Research Company - Perplexity\"].json.choices[0].message.content }}</p>\n      </div>\n      \n      <!-- Trustpilot Reviews -->\n      <div id=\"trustpilot-reviews\">\n        <h2>Trustpilot Reviews</h2>\n        {{ $node[\"Reviews\"].json.reviewsHTML }}\n      </div>\n      \n      <!-- Citations -->\n      <div id=\"citations\">\n        <h2>Citations</h2>\n        {{ $node[\"Citations\"].json.citationsHTML }}\n      </div>\n      \n    </div>\n  </body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        2740,
        140
      ],
      "id": "36b9ce96-a7d2-4a10-8e14-5b94fca47926",
      "name": "Create HTML Report"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "apiKey",
              "stringValue": "32aa914c947342169c4998b6701a77e0"
            },
            {
              "name": "newsAge",
              "type": "numberValue",
              "numberValue": "10"
            },
            {
              "name": "maxArticles",
              "stringValue": "20"
            },
            {
              "name": "emails"
            }
          ]
        },
        "options": {}
      },
      "id": "784930f5-1fc4-4322-a6bd-07de44cac46b",
      "name": "Setup",
      "type": "n8n-nodes-base.set",
      "position": [
        380,
        -940
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "companyName",
              "stringValue": "={{ $json.summary.toLowerCase().replace('meeting with', '').replace('call with', '').trim() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "96f5fc71-7a23-4b76-a337-92a564ba83d2",
      "name": "Extract company name",
      "type": "n8n-nodes-base.set",
      "position": [
        1060,
        -980
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 7
            }
          ]
        }
      },
      "id": "bce2427f-b1c3-49fc-863b-ec9ca075f795",
      "name": "Every morning @ 7",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        140,
        -940
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "bcfb06b1-d365-43a8-9802-869529baca98",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              },
              "leftValue": "={{ $json.summary.toLowerCase() }}",
              "rightValue": "call with"
            },
            {
              "id": "4ea43ccf-d586-4985-87db-fc1e9f734351",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              },
              "leftValue": "={{ $json.summary.toLowerCase() }}",
              "rightValue": "meeting with"
            }
          ]
        },
        "options": {}
      },
      "id": "5ef03c38-1391-448f-b2fb-4f3e5a6454e1",
      "name": "Filter meetings",
      "type": "n8n-nodes-base.if",
      "position": [
        820,
        -940
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "=https://newsapi.org/v2/everything?apiKey={{ $('Setup').first().json.apiKey }}&q={{ $json.companyName }}&from={{ DateTime.now().minus({ days: $('Setup').first().json.newsAge }).toFormat('yyyy-MM-dd') }}&sortBy=publishedAt&language=en&pageSize={{ $('Setup').first().json.maxArticles }}&searchIn=title",
        "options": {}
      },
      "id": "407a2b43-f346-4146-bc7a-7ed03985211c",
      "name": "Get latest news",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1260,
        -980
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "let html = `<table style=\"width: 100%\">`;\nhtml += '</table>';\n\nfor(article of $input.item.json.articles) {\n console.log(article)\n html += `\n <tr>\n <td style=\"display: flex; background-color: #f2f4f8; font-family: sans-serif; padding: 0.3em 0.5em\">\n <div style=\"padding: 1em\">\n <a style=\"display: block; margin-bottom: 10px; font-size: 1.2em\" href=\"${article.url}\">${article.title}</a>\n <i>\n ${article.description ? article.description : article.content}\n </i>\n <div style=\"margin-top: 1em\">\n ${ article.source?.name ? '<b>Source:</b> ' + article.source?.name : '' }\n </div>\n </div>\n </td>\n </tr>\n `\n}\nreturn { \"html\": html };"
      },
      "id": "e3e4f8d0-62b7-4b53-b37a-a1cf85388a9c",
      "name": "Format for email",
      "type": "n8n-nodes-base.code",
      "position": [
        1460,
        -980
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "sendTo": "={{ $('Setup').first().json.emails }}",
        "subject": "=Latest news for '{{ $('Extract company name').item.json.summary }}'",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "id": "22620c0a-286a-4a29-bdcb-a8c9f7c6c149",
      "name": "Send news",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1660,
        -980
      ],
      "typeVersion": 2.1,
      "webhookId": "0bf9dcce-b895-4196-bec5-994c008b6ca5"
    },
    {
      "parameters": {},
      "id": "d6752ecf-7b3d-411e-8369-aa10da9e4b53",
      "name": "No meetings today",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1260,
        -680
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "milorad.filipovic19@gmail.com",
          "cachedResultName": "milorad.filipovic19@gmail.com"
        },
        "options": {
          "timeMin": "={{ $today }}",
          "timeMax": "={{ $today.plus({ days: 1 }) }}",
          "singleEvents": true
        }
      },
      "id": "2acbd925-705c-4ae0-9342-4912961f5df9",
      "name": "Get meetings for today",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        620,
        -940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://twitter154.p.rapidapi.com/user/tweets",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "10"
            },
            {
              "name": "user_id",
              "value": "={{ $json.twitter.id }}"
            },
            {
              "name": "include_replies",
              "value": "={{ false }}"
            },
            {
              "name": "include_pinned",
              "value": "={{ false }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-RapidAPI-Host",
              "value": "twitter154.p.rapidapi.com"
            },
            {
              "name": "X-RapidAPI-Key",
              "value": "={{ $('Setup1').first().json.twitterAPIKey }}"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 2000
            }
          }
        }
      },
      "id": "29a0977a-478f-4259-beba-86244f94d227",
      "name": "Get recetn tweets",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1940,
        -320
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "domain",
              "type": "arrayValue",
              "arrayValue": "={{ $json.attendees.filter(a => !a.organizer).map(a => a.email.split('@').pop()) }}"
            },
            {
              "name": "attendeeEmails",
              "type": "arrayValue",
              "arrayValue": "={{ $json.attendees.filter(a => !a.organizer).map(a => a.email) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7c3ded42-f5c8-4bfe-a06f-24c848016f62",
      "name": "Get attendees email domains",
      "type": "n8n-nodes-base.set",
      "position": [
        800,
        -420
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "fieldToSplitOut": "domain",
        "include": "selectedOtherFields",
        "fieldsToInclude": "attendeeEmails, start",
        "options": {}
      },
      "id": "db783178-2a6a-4c0e-b7ea-202a26d50894",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        1020,
        -420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://fresh-linkedin-profile-data.p.rapidapi.com/get-company-posts",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "linkedin_url",
              "value": "=https://www.linkedin.com/{{ $json.linkedin.handle }}"
            },
            {
              "name": "sort_by",
              "value": "recent"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-RapidAPI-Key",
              "value": "={{ $('Setup1').item.json.linkedInAPIKey }}"
            },
            {
              "name": "X-RapidAPI-Host",
              "value": "fresh-linkedin-profile-data.p.rapidapi.com"
            }
          ]
        },
        "options": {
          "batching": {
            "batch": {}
          }
        }
      },
      "id": "2bc4b80d-b98b-42f0-9b21-f191d4d63120",
      "name": "Get recent LinkedIn posts",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1940,
        -520
      ],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "domain": "={{ $json.domain }}",
        "additionalFields": {}
      },
      "id": "ecf570fb-f88f-4619-b822-141c1aa3a923",
      "name": "Enrich attendee company",
      "type": "n8n-nodes-base.clearbit",
      "position": [
        1460,
        -420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sendTo": "={{ $('Setup1').first().json.emails }}",
        "subject": "=Latest social activity for: {{ $('Extract data for email').item.json.name }} ",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "id": "620467a8-7cf5-4d26-a736-ae09353a6f0c",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmail",
      "position": [
        3020,
        -420
      ],
      "typeVersion": 2.1,
      "webhookId": "7d8e5516-2dcb-4e5a-aa85-650603e3ffae"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// console.log('LINKEDIN', $('Enrich attendee company').item.json.name.toLowerCase())\nconst company = $('Enrich attendee company').item.json.name.toLowerCase();\n\nlet html = `\n<div style=\"display: flex; align-items: center; margin: 2em 0 1em\">\n <img src=\"https://store-images.s-microsoft.com/image/apps.31120.9007199266245564.44dc7699-748d-4c34-ba5e-d04eb48f7960.bc4172bd-63f0-455a-9acd-5457f44e4473\" style=\"width: 20px; height: 20px; margin-right: 10px\" />\n <h3 style=\"margin: 0\">LinkedIn posts</h3>\n</div>\n<table style=\"width: 100%\">\n`;\nfor(article of $input.item.json.data.slice(0,10)) {\n html += `\n <tr>\n <td style=\"background-color: #f7f9fc; font-family: sans-serif; padding: 0.3em 1em\">\n <div>\n <a style=\"display: block; color: #000; text-decoration: none; margin-bottom: 5px; font-size: 1.1em\" href=\"${article.url}\"><i>${article.text}</i></a>\n </div>\n <p style=\"margin: 0; font-size: 0.8em\">\n <span title=\"Likes\">❤️ ${article.num_likes}</span> | <span title=\"Comments\">💬 ${article.num_comments}</span>\n </p>\n </td>\n </tr>\n `\n}\nhtml += '</table>';\n\nreturn { \n \"html_linkedin\": html,\n name: $('Switch').item.json.name,\n meeting: $('Split Out').item.json\n};"
      },
      "id": "017f42b1-c4f3-4cdc-a006-c55bca8ec49e",
      "name": "Format LinkedIn Posts",
      "type": "n8n-nodes-base.code",
      "position": [
        2160,
        -520
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const company = $('Enrich attendee company').item.json.name.toLowerCase();\nlet html = `\n<div style=\"display: flex; align-items: center; margin: 2em 0 1em\">\n <img src=\"https://img.freepik.com/free-vector/new-2023-twitter-logo-x-icon-design_1017-45418.jpg?size=338&ext=jpg&ga=GA1.1.2008272138.1708473600&semt=ais\" style=\"width: 20px; height: 20px; margin-right: 10px\" />\n <h3 style=\"margin: 0\">Tweets</h3>\n</div>\n<table style=\"width: 100%\">`;\nfor(article of $input.item.json.results) {\n html += `\n <tr>\n <td style=\"background-color: #f7f9fc; font-family: sans-serif; padding: 0.3em 1em\">\n <div>\n <a style=\"display: block; color: #000; text-decoration: none; margin-bottom: 5px; font-size: 1.1em\" href=\"https://twitter.com/${article.user.username}/status/${article.tweet_id}\">\n <i>${article.text}</i></a>\n </div>\n <p style=\"margin: 0; font-size: 0.8em\">\n <span title=\"Retweets\">🔄 ${article.retweet_count}</span> | <span title=\"Favorites\">❤️ ${article.favorite_count}</span> | <span title=\"Replies\">💬 ${article.reply_count}</span>\n </p>\n </td>\n </tr>\n `\n}\nhtml += '</table>';\n\nreturn { \n \"html_twitter\": html,\n name: $('Switch').item.json.name,\n meeting: $('Split Out').item.json\n};"
      },
      "id": "359ec47b-3e0c-4fea-beef-bd7154e2477d",
      "name": "Format Tweets",
      "type": "n8n-nodes-base.code",
      "position": [
        2160,
        -320
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "name",
              "field2": "name"
            }
          ]
        },
        "joinMode": "keepEverything",
        "options": {
          "clashHandling": {
            "values": {
              "resolveClash": "preferInput2"
            }
          }
        }
      },
      "id": "fd997e7a-0052-46cb-b154-179bf9f773c6",
      "name": "Combine all activity for a company",
      "type": "n8n-nodes-base.merge",
      "position": [
        2400,
        -420
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "attendeeEmail",
              "stringValue": "={{ $json.meeting.attendeeEmails.find(a => a.endsWith($json.meeting.domain)) }}"
            },
            {
              "name": "startHour",
              "type": "numberValue",
              "numberValue": "={{ DateTime.fromISO($json.meeting.start.dateTime).hour }}"
            },
            {
              "name": "startMinute",
              "type": "numberValue",
              "numberValue": "={{ DateTime.fromISO($json.meeting.start.dateTime).minute }}"
            }
          ]
        },
        "include": "selected",
        "includeFields": "name, html_twitter, html_linkedin",
        "options": {}
      },
      "id": "9e55f099-59bb-4426-a207-a67fd2b65ecf",
      "name": "Extract data for email",
      "type": "n8n-nodes-base.set",
      "position": [
        2580,
        -420
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n\n<html>\n<head>\n <meta charset=\"UTF-8\" />\n <title>Social media activity for company: {{ $json.name }}</title>\n</head>\n<body>\n <div class=\"container\">\n <h2 style=\"font-size: 1.2em\">\n 🗓️ Meeting with \n <span>{{ $json.attendeeEmail }}</span> \n at {{ $json.startHour }}:{{ $json.startMinute < 10 ? `0${$json.startMinute}` : $json.startMinute }}h\n </h2>\n {{ $json.html_linkedin ?? ''}}\n {{ $json.html_twitter ?? ''}}\n </div>\n</body>\n</html>\n\n<style>\n.container {\n font-family: sans-serif;\n}\n</style>"
      },
      "id": "1ee92732-38fd-4b6d-86db-06d5878fdfee",
      "name": "Prepare email template",
      "type": "n8n-nodes-base.html",
      "position": [
        2800,
        -420
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.linkedin.handle !== null }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "linkedin"
            },
            {
              "conditions": {
                "options": {
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "bbb0310e-8b20-4bc6-a540-a4cd17470e28",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.twitter.id !== null }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "twitter"
            }
          ]
        },
        "options": {
          "looseTypeValidation": false,
          "allMatchingOutputs": true
        }
      },
      "id": "df8912ff-14f7-4411-9742-87818e6ca937",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        1700,
        -420
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "881d891e-ea17-4879-a5cf-72d08b281f56",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              },
              "leftValue": "={{ $json.domain }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "512c34cd-db66-4d99-b929-784ed2eb84b0",
      "name": "Keep only ones with the domain",
      "type": "n8n-nodes-base.filter",
      "position": [
        1220,
        -420
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "linkedInAPIKey"
            },
            {
              "name": "twitterAPIKey"
            },
            {
              "name": "emails"
            }
          ]
        },
        "options": {}
      },
      "id": "ab2b07bf-c3d5-44ff-b6b6-7e39364360ab",
      "name": "Setup1",
      "type": "n8n-nodes-base.set",
      "position": [
        380,
        -420
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 7
            }
          ]
        }
      },
      "id": "13d0cb90-fb20-426c-8ba4-e70b3e2da053",
      "name": "Every morning @ ",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        160,
        -420
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "milorad.filipovic19@gmail.com",
          "cachedResultName": "milorad.filipovic19@gmail.com"
        },
        "options": {
          "timeMin": "={{ $now.beginningOf('day') }}",
          "timeMax": "={{ $now.endOf('day') }}",
          "singleEvents": true
        }
      },
      "id": "e477fa42-e837-418d-a548-5a36bcd1c0d0",
      "name": "Get meetings for today1",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        580,
        -420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "list",
          "cachedResultName": "O1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Eres parte del equipo de desarrollo de negocio de Averis, que es una agencia de desarrollo de Inteligencia Artificial.\n\nCuando un nuevo posible cliente reserva una consulta con Averis, vuestro equipo investiga a ese cliente y proporciona la investigación junto con los hallazgos extraídos a los consultores, para que puedan leerlos antes de la consulta.\n\nTu trabajo consiste en crear las siguientes secciones a partir de la investigación:\n\nPerfil personal: El perfil personal es un resumen en un párrafo sobre la persona (posible cliente), extraído a partir de la investigación de su perfil de LinkedIn.\n\nIntereses: En esta sección debes identificar algunos de los intereses del posible cliente, basándote en sus publicaciones más recientes en LinkedIn y en su perfil de LinkedIn.\n\nDatos únicos: En esta sección debes extraer al menos dos datos únicos sobre la persona que demuestren que realmente te has tomado el tiempo de investigar quién es. Estos datos deben ser particulares del posible cliente y poco comunes.\n\nPerfil de la empresa: El perfil de la empresa es un resumen en un párrafo sobre la compañía que representa la persona, extraído del perfil de LinkedIn de la empresa y de información disponible en la web.\n\nTu entrega debe estar en HTML, siguiendo este formato:\n\nPerfil personal\n{{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.toJsonString() }}\n\nPos recientes en Linkedin: \n{{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.last_30_days_posts_transformed }}\n\nWeb Research: \n{{ $('Research Company - Perplexity').last().json.choices[0].message.content }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1920,
        140
      ],
      "id": "b56dfc00-3443-4c12-ad2b-104b63169366",
      "name": "Perfil Personal + Compañía",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini",
          "mode": "list",
          "cachedResultName": "O1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are part of the business development team at [YOUR BUSINESS NAME] which is a [BUSINESS SUMMARY] that provides the following services: \n\n[\n- SERVICE 1: DETAILS\n- SERVICE 2: DETAILS\n- SERVICE 3: DETAILS\n- SERVICE 4: DETAILS\n...\n]\n\n[YOUR BUSINESS NAME]'s consultants are the first point of contact for a new lead. So when a new lead is interested in their solutions, they book a free call with their consultants. The consultants are then responsible for exploring the highest ROI opportunities for [YOUR SOLUTION].\n\nOnce a call is booked, your team does in depth research on the lead so that the consultants can read through it in preparation for the consultation. \n\nAs part of the business development team you are provided with the following research: \n\n- LinkedIn Profile: This is the result of scraping the leads LinkedIn profile. This will give you the leads bio, experiences, education and company description.\n- LinkedIn Posts: This gives you the leads LinkedIn posts over the past 30 days. \n- Company Google Search: This gives you the research found from searching the leads company on Google and their website. \n- Reviews: This gives you the most recent bad reviews the leads company received on TrustPilot. \n\nYour job is to analyse the research and extract following information: \n\n- Pain Points: By looking through the companies negative reviews and also considering their line of business and the leads position in the company, you must identify the biggest pain points the leads company could be facing. \n- Solutions to Pain Points: In this section you must come up with solutions [YOUR BUSINESS NAME] can offer to solve each of the pain points completely. \n- Highest ROI Opportunities: Considering the info you have about the lead and his company, you must come up with the 5 highest ROI opportunities that [YOUR BUSINESS NAME] can offer them. These automations have to be realisitic, yet extremely high ROI. Sort them in order of best opportunity at the top of the list.  \n\nThe insights you extract must be in HTML format as they will be going in the middle of a HTML document. \n\nPlease use the following output format: \n\nOpportunities (Heading 1)\n\nPain Points and Solutions: (Heading 2)\n[Table with 3 columns: \n1. Pain Point: Explains the pain point theyre facing. \n2. Evidence: Explains why we think this is the case. \n3. Solution: Explains the solution to the pain point by Kamexa.\nEach row is a new pain point.]\n\nOpportunities: (Heading 2)\n[5 Highest ROI automation opportunities for the leads company sorted with the best solution at the top. This must be in dotpoint format:\n- Opportunity#1 Name: Details\n- Opportunity#2 Name: Details\n...\n\n- Don't wrap the output in ```html``` since the output will go into the middle of another HTML document.\n\nSomeone just booked a call. Here's the research your team found. Create the output as per the above requirements: \n\n\nLinkedIn Profile Scraped Summary in HTML format: \n{{ $('Perfil Personal + Compañía').last().json.message.content }}\n\nWeb Research Results for Leads Company: \n{{ $('Research Company - Perplexity').last().json.choices[0].message.content }} \n\nRecent Bad Reviews on TrustPilot for Leads Company in HTML format: \n{{ $('Reviews').last().json.reviewsHTML }}\n(if there is no reviews then just create the pain points by considering the leads company and job title)\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2300,
        140
      ],
      "id": "2360d751-0e0c-4bc3-b9ba-167f0f48a103",
      "name": "Puntos de Dolor + Soluciones",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the input data from the first item\nconst input = $node[\"Scrape Profiles + Posts - Relevance AI\"].json;\n\n// Navigate to the experiences array within the \"output\" object\nconst experiences = input.output.linkedin_profile_details_data.experiences || [];\n\n// Build the HTML table rows string\nlet htmlRows = '';\nexperiences.forEach(exp => {\n  htmlRows += `<tr>\n      <td>${exp.company}</td>\n      <td>${exp.title}</td>\n      <td>${exp.date_range}</td>\n      <td>${exp.location}</td>\n    </tr>`;\n});\n\n// Return a new object that only contains the experiencesTable field\nreturn [{ json: { experiencesTable: htmlRows } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        140
      ],
      "id": "8e47f728-dad9-4d34-9258-1ae6b5d359a4",
      "name": "Experiencias"
    },
    {
      "parameters": {
        "jsCode": "// Get the input data from the first item\nconst input = $node[\"Scrape Profiles + Posts - Relevance AI\"].json;\n\n// Navigate to the educations array in the output object\nconst educations = input.output.linkedin_profile_details_data.educations || [];\n\n// Build the HTML table rows for education\nlet educationRows = '';\neducations.forEach(edu => {\n  educationRows += `<tr>\n      <td>${edu.school}</td>\n      <td>${edu.degree}</td>\n      <td>${edu.field_of_study}</td>\n    </tr>`;\n});\n\n// Return a new object that only contains the educationTable key\nreturn [{ json: { educationTable: educationRows } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        140
      ],
      "id": "2cf93c81-10bd-48d0-b925-e3ed12b75a00",
      "name": "Educación"
    },
    {
      "parameters": {
        "sendTo": "[YOUR EMAIL ADDRESS]",
        "subject": "={{ $('Scrape Profiles + Posts - Relevance AI').last().json.output.linkedin_profile_details_data.full_name }} Research Report",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3060,
        140
      ],
      "id": "86bc316d-043a-416c-8646-761b6ef3c1bf",
      "name": "Envía reporte",
      "webhookId": "54e8e9d2-f065-4929-b88f-7e7cba93b08c",
      "credentials": {
        "gmailOAuth2": {
          "id": "BwWjplhZQVpEPVPV",
          "name": "Gmail daniel@averis.es"
        }
      }
    },
    {
      "parameters": {
        "content": "# Análisis",
        "height": 360,
        "width": 720,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1860,
        0
      ],
      "id": "95a671cb-e1f9-41d2-b880-02284bb50c74",
      "name": "Sticky Note1"
    }
  ],
  "connections": {
    "Scrape Profiles + Posts - Relevance AI": {
      "main": [
        [
          {
            "node": "Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Company - Perplexity": {
      "main": [
        [
          {
            "node": "Citations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calendly Trigger": {
      "main": [
        [
          {
            "node": "Scrape Profiles + Posts - Relevance AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TrustPilot Reviews (1-3 Stars)": {
      "main": [
        [
          {
            "node": "Reviews",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reviews": {
      "main": [
        [
          {
            "node": "Perfil Personal + Compañía",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Posts": {
      "main": [
        [
          {
            "node": "Experiencias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Citations": {
      "main": [
        [
          {
            "node": "TrustPilot Reviews (1-3 Stars)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create HTML Report": {
      "main": [
        [
          {
            "node": "Envía reporte",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup": {
      "main": [
        [
          {
            "node": "Get meetings for today",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract company name": {
      "main": [
        [
          {
            "node": "Get latest news",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every morning @ 7": {
      "main": [
        [
          {
            "node": "Setup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter meetings": {
      "main": [
        [
          {
            "node": "Extract company name",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No meetings today",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get latest news": {
      "main": [
        [
          {
            "node": "Format for email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format for email": {
      "main": [
        [
          {
            "node": "Send news",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get meetings for today": {
      "main": [
        [
          {
            "node": "Filter meetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get recetn tweets": {
      "main": [
        [
          {
            "node": "Format Tweets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get attendees email domains": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Keep only ones with the domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get recent LinkedIn posts": {
      "main": [
        [
          {
            "node": "Format LinkedIn Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enrich attendee company": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format LinkedIn Posts": {
      "main": [
        [
          {
            "node": "Combine all activity for a company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Tweets": {
      "main": [
        [
          {
            "node": "Combine all activity for a company",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Combine all activity for a company": {
      "main": [
        [
          {
            "node": "Extract data for email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract data for email": {
      "main": [
        [
          {
            "node": "Prepare email template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare email template": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get recent LinkedIn posts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get recetn tweets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep only ones with the domain": {
      "main": [
        [
          {
            "node": "Enrich attendee company",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup1": {
      "main": [
        [
          {
            "node": "Get meetings for today1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every morning @ ": {
      "main": [
        [
          {
            "node": "Setup1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get meetings for today1": {
      "main": [
        [
          {
            "node": "Get attendees email domains",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Perfil Personal + Compañía": {
      "main": [
        [
          {
            "node": "Puntos de Dolor + Soluciones",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Puntos de Dolor + Soluciones": {
      "main": [
        [
          {
            "node": "Create HTML Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Experiencias": {
      "main": [
        [
          {
            "node": "Educación",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Educación": {
      "main": [
        [
          {
            "node": "Research Company - Perplexity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "c7301b77-5c4c-4fa7-b9cb-d1a4ad045a45",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-04-23T20:59:57.136Z",
      "updatedAt": "2025-04-23T20:59:57.136Z",
      "id": "Xq0NhXBZ2HnDESQS",
      "name": "Agente"
    },
    {
      "createdAt": "2025-04-23T20:54:02.682Z",
      "updatedAt": "2025-04-23T20:54:02.682Z",
      "id": "sPdc51YFSDyYeZsT",
      "name": "Averis"
    },
    {
      "createdAt": "2025-04-29T13:03:45.275Z",
      "updatedAt": "2025-04-29T13:03:45.275Z",
      "id": "ivObRU3m7gju9Vw0",
      "name": "Onboarding"
    }
  ]
}