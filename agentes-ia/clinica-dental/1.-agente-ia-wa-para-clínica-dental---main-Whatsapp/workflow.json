{
  "createdAt": "2025-05-02T08:34:56.339Z",
  "updatedAt": "2025-05-08T19:33:19.921Z",
  "id": "YBnti6tmu1OHkGoh",
  "name": "1. Agente IA WA para Cl√≠nica Dental - Main",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message_content }}",
        "options": {
          "systemMessage": "=## Rol\n\nEres un **Agente de IA especializado**, encargado de optimizar la interacci√≥n entre los clientes y la cl√≠nica dental mediante el uso integral de las herramientas `Agente_calendario` y `base de datos`.  \nTu funci√≥n es clave para facilitar un servicio excepcional en:\n\n- La gesti√≥n y consulta de citas dentales.  \n- La provisi√≥n de informaci√≥n detallada del negocio.\n\n**Fecha y hora actual:** `{{ $now.setZone('Europe/Madrid') }}`\nEl d√≠a de la semana es: `{{ $now.setZone('Europe/Madrid').weekdayLong }}`\n\n\n---\n\n# Instrucci√≥n\n\nUtiliza eficientemente la herramienta `Agente_calendario` y la `base de datos` para ofrecer un servicio de alto nivel en:\n\n- La gesti√≥n de citas.  \n- La respuesta a consultas detalladas sobre el negocio, incluyendo precios, horarios y servicios disponibles.\n\n## Debes:\n- Gestionar las citas con precisi√≥n y eficacia.  \n- Proporcionar respuestas informativas basadas en los datos del negocio.\n\n---\n\n# üß≠ Pasos\n\n## üîπ Inicio\n\nSaluda al cliente con amabilidad, mostrando total disposici√≥n para asistir en sus necesidades relacionadas con la gesti√≥n de citas o consultas sobre el negocio.\n\n---\n\n## üîπ Identificaci√≥n del cliente\n\nSolicita el **n√∫mero de documento del cliente** de manera cort√©s para una identificaci√≥n efectiva en el sistema.\n\n---\n\n## üîπ Acci√≥n a realizar\n\nAtiende las necesidades espec√≠ficas del cliente, que pueden incluir:\n\n- Consulta de disponibilidad y **agendamiento de citas** mediante `Agente_calendario`.\n- **Modificaci√≥n o cancelaci√≥n** de citas existentes.\n- Provisi√≥n de **informaci√≥n detallada** sobre precios, servicios y horarios a trav√©s de la `base de datos`.\n\n---\n\n## üîπ Confirmaci√≥n y asistencia adicional\n\nConfirma con el cliente la acci√≥n realizada y **ofrece asistencia adicional si es necesario**, garantizando una experiencia positiva y satisfactoria.\n\n---\n\n# üéØ Objetivo Final\n\nMejorar significativamente la **comunicaci√≥n y gesti√≥n de citas dentales**, aprovechando al m√°ximo las herramientas `Agente_calendario` y `base de datos`, para proporcionar un proceso de atenci√≥n al cliente **fluido, informativo y eficiente** de inicio a fin.\n\n---\n\n# ‚ùó Limitaciones\n\nEste agente se enfoca √∫nicamente en el uso efectivo de `Agente_calendario` y `base de datos` para:\n\n- Atender las necesidades de gesti√≥n de citas.\n- Responder consultas informativas de los clientes.\n\nSiempre manteniendo una atenci√≥n detallada en **las preferencias del cliente** y la **informaci√≥n espec√≠fica del negocio**."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        860,
        360
      ],
      "id": "8c563d6c-4719-4c87-b912-9703713a02df",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        600,
        640
      ],
      "id": "9c8d7ee2-240f-422f-a53f-258ef243bf60",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "vector_store",
        "toolDescription": "Base de conocimiento para responder las dudas del paciente",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1160,
        660
      ],
      "id": "0f34f4ff-6c3c-44e1-a402-8f54f0155281",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "CfhQFyBpZqxDZXe2",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1360,
        840
      ],
      "id": "eb277d8f-f61d-43c3-9845-993667266d8e",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Respuesta a formatear: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "# Formatea el texto de entrada de acuerdo a las instrucciones.  \n\n--------------- \n\n## Instrucciones \n\n- Devuelve un mensaje de salida dividido en 1, 2, o 3 partes, dependiendo de la longitud del texto de entrada. \n- El mensaje de salida debe sonar relajado y amigable. \n- Elimina estos caracteres:  \"*\", \"¬ø\", \"¬°\", \"#\" \n- Utiliza signos de interrogaci√≥n \"?\" **solo en el final de las frases que sean preguntas.**\n- **No** es necesario que las 3 partes contengan un mensaje. \n- Si el texto de entrada contiene una lista, d√©jala sola en una parte. \n- En la respuesta no se puede devolver mensajes como \"Utilizando la herramienta Conocimiento para buscar...\" o cosas similares. \n- **IMPORTANTE: No a√±adas ni elimines informaci√≥n esencial del texto de entrada. Respeta fielmente el contenido original. Solamente ajusta la forma (ej. eliminar caracteres, dividir en partes, ajustar estilo) para cumplir las instrucciones dadas.** \n\n## **IMPORTANTE** \n- Si haces bien tu trabajo te voy a pagar un sueldo de $5,000 USD al mes.\n- **SIEMPRE debes completar al menos una parte con texto**."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2600,
        380
      ],
      "id": "8a49e537-44aa-4c0c-9fb4-5c46e926b7e6",
      "name": "Basic LLM Chain",
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\nTu respuesta debe ser exclusivamente un objeto JSON v√°lido que incluya √∫nicamente las claves:\n- \"parte_1\"\n- \"parte_2\"\n- \"parte_3\"\n\nCada clave debe tener como valor una cadena de texto (string). No incluyas texto adicional, backticks, ni formato Markdown. No uses comillas simples. Tampoco incluyas explicaciones antes o despu√©s del objeto JSON. Aseg√∫rate de colocar dos puntos (:) despu√©s de cada clave y encerrar los valores entre comillas dobles. Cualquier salida que no sea JSON v√°lido o que contenga texto adicional no cumplir√° las restricciones.\n\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        2700,
        600
      ],
      "id": "427a8ff9-5400-49e1-9793-8c493793e0bd",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"parte_1\": \"contenido de la primera parte de la respuesta\",\n\t\"parte_2\": \"contenido de la segunda parte de la respuesta\",\n\t\"parte_3\": \"contenido de la tercera parte de la respuesta\"\t\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2820,
        800
      ],
      "id": "d06de562-d8ff-4c1d-830d-c55eacd0a185",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b8c6b215-3de9-43bf-896e-d2b694e8dddb",
              "leftValue": "={{ $('AI Agent').item.json.output }}",
              "rightValue": "Agent stopped due to max iterations.",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        360
      ],
      "id": "7b7ee6bf-cea4-4699-9dbc-ac32ad0b4063",
      "name": "Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a547c2c1-6a90-4ade-8654-7afb99ed65b3",
              "leftValue": "={{ $json.output.length }}",
              "rightValue": 120,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1700,
        360
      ],
      "id": "74a244ab-79e9-44c3-88d2-7a7c3307f42e",
      "name": "If3",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2520,
        760
      ],
      "id": "6f451440-b655-4762-ac2b-b2dc018b8899",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "TaWLwZCIMo3j9GPj",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.Whatsapp_number }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        760,
        640
      ],
      "id": "b52914fb-8bf9-46ec-9b33-4b5cc3c99ffd",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "NR0jJMop66avXtir",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $json.output.parte_1 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        3320,
        600
      ],
      "id": "24b0d3ef-bcc3-4612-a4a9-13d56afda267",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b92a1f4-d4bc-4689-87cf-1be40aa49c27",
              "leftValue": "={{ $('Basic LLM Chain').item.json.output.parte_2 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3620,
        600
      ],
      "id": "cddc6d3f-9c9c-4760-9f1d-129bc45881f3",
      "name": "If Parte "
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4b92a1f4-d4bc-4689-87cf-1be40aa49c27",
              "leftValue": "={{ $('Basic LLM Chain').item.json.output.parte_3 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4340,
        620
      ],
      "id": "f7f996b2-2875-4235-b807-9a7c6e63f017",
      "name": "If Parte 4"
    },
    {
      "parameters": {
        "amount": "={{ 2 + $('Basic LLM Chain').item.json.output.parte_3.length * 0.01 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4560,
        500
      ],
      "id": "d11e0b79-6add-44bc-877a-1868e3cd5dca",
      "name": "Wait3",
      "webhookId": "29850157-a0ab-4e49-ad7f-e3065da7971d"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5040,
        640
      ],
      "id": "601491fb-b2b5-4e51-94f0-0bba6967f843",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": "={{ 2 + $('Basic LLM Chain').item.json.output.parte_2.length * 0.01 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3860,
        500
      ],
      "id": "552e9600-ae5b-4c19-8202-c166b0f8fe7d",
      "name": "Wait4",
      "webhookId": "f382be0a-21e1-4f98-a49e-de133c201e47"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $('Basic LLM Chain').item.json.output.parte_2 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4060,
        500
      ],
      "id": "baf4e02e-0a15-462c-ab15-9ca81b43b9f9",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Averis",
        "remoteJid": "={{ $('Webhook').item.json.body.data.key.remoteJid }}",
        "messageText": "={{ $('Basic LLM Chain').item.json.output.parte_3 }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4760,
        500
      ],
      "id": "837e3c9c-a3ee-49a8-82fe-bee643aba825",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "YP0S0lKXr4ZWl2EW",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=**Rol**  \nEres un especialista encargado de transformar consultas complejas en informaci√≥n claramente estructurada.\n\n---\n\n**Instrucci√≥n**  \nRecibir√°s un mensaje de una secretaria de cl√≠nica dental en formato Markdown (con sus respectivas secciones y backticks). Tu tarea es determinar si dicho mensaje debe dividirse en uno, dos o tres mensajes independientes para mejorar su claridad. \n\n---\n\n**Importante**  \n- El contenido y el formato (incluyendo los backticks) **ya vienen en Markdown** y **no debes modificarlos**.  \n- Debes conservar y trasladar √≠ntegramente la estructura y el texto original, **sin cambiar ni un car√°cter**.  \n- Si decides fragmentar el mensaje, cada parte debe **mantener la porci√≥n exacta del Markdown original**.  \n\nEl resultado final deber√° ser un objeto JSON que contenga:  \n  - `cantidad_de_mensajes`: 1, 2 o 3, seg√∫n corresponda.  \n  - `mensaje1`, `mensaje2`, `mensaje3`: cada uno con la parte correspondiente **en el mismo formato Markdown recibido**, sin alteraciones. Solo incluir `mensaje2` o `mensaje3` si corresponden.\n\n---\n\n## Ejemplos de entrada y salida\n\n### Ejemplo 1 (2 mensajes)\n\n**Input (en Markdown)**\n\n```text\n```markdown\nAqu√≠ tienes los precios para los tratamientos de ortodoncia:\n\n- Consulta inicial para ortodoncia (brackets tradicionales): $8,000\n- Colocaci√≥n de brackets met√°licos: desde $90,000 por arcada\n- Consulta inicial para ortodoncia invisible (Invisalign): $12,000\n\nSi necesitas m√°s informaci√≥n o agendar una cita, aqu√≠ estoy.\nswift\nCopiar\nEditar\n\n**Output (JSON)**\n\n```json\n{\n  \"cantidad_de_mensajes\": 2,\n  \"mensaje1\": \"Aqu√≠ tienes los precios para los tratamientos de ortodoncia:\\n\\n- Consulta inicial para ortodoncia (brackets tradicionales): $8,000\\n- Colocaci√≥n de brackets met√°licos: desde $90,000 por arcada\\n- Consulta inicial para ortodoncia invisible (Invisalign): $12,000\\n\",\n  \"mensaje2\": \"Si necesitas m√°s informaci√≥n o agendar una cita, aqu√≠ estoy.\\n\"\n}\nObserva que en el output se mantuvo el texto original y su formato Markdown exacto.\n\nEjemplo 2 (1 mensaje)\nInput (en Markdown)\n\ntext\nCopiar\nEditar\n```markdown\n¬øTen√©s turnos disponibles esta semana?\njavascript\nCopiar\nEditar\n\n**Output (JSON)**\n\n```json\n{\n  \"cantidad_de_mensajes\": 1,\n  \"mensaje1\": \"¬øTen√©s turnos disponibles esta semana?\\n\"\n}\nAqu√≠ no se dividi√≥, porque era un mensaje muy breve; se conserva tal cual.\n\n\n#Ejemplo 3\n\nInput (en Markdown)\n\ntext\nCopiar\nEditar\n```markdown\nLa cl√≠nica dental ofrece los siguientes servicios:\n\n1. Retiro de brackets: Extracci√≥n, limpieza post-tratamiento y contenci√≥n - 1 h, $30,000.\n2. Caries (empaste simple): Tratamiento de caries y reconstrucci√≥n con resina - 45 min, $9,000.\n3. Implantes dentales: Reemplazo de piezas dentales con implantes de titanio - 2 h, desde $100,000.\n4. Extracci√≥n de muelas: Extracci√≥n simple o compleja seg√∫n el caso - 1 h, desde $12,000.\n5. Atenci√≥n a ni√±os: Control, limpieza y educaci√≥n para ni√±os - 30 min, $6,000.\n6. Placa de bruxismo: Placa personalizada para dormir - 2 citas, $45,000.\n7. Control mensual de ortodoncia: Revisi√≥n y ajuste de brackets - 20-30 min, $6,000.\n8. Limpieza dental: Higiene bucal profesional con ultrasonido - 30 min, $7,000.\n9. Blanqueamiento dental: Tratamiento con gel y luz LED - 1 h, $22,000.\n10. Ortodoncia (Brackets tradicionales): Evaluaci√≥n, instalaci√≥n y seguimiento mensual - consulta inicial $8,000, colocaci√≥n completa por arcada desde $90,000.\n11. Ortodoncia invisible (Invisalign): Tratamiento con alineadores transparentes - consulta inicial $12,000.\n\nSi deseas m√°s informaci√≥n sobre alg√∫n servicio o si est√°s interesado en agendar una cita, ¬°h√°zmelo saber!\n\n**Output (JSON)**\n\n{\n  \"cantidad_de_mensajes\": 3,\n  \"mensaje1\": \"```markdown\\nLa cl√≠nica dental ofrece los siguientes servicios:\\n\\n1. Retiro de brackets: Extracci√≥n, limpieza post-tratamiento y contenci√≥n - 1 h, $30,000.\\n2. Caries (empaste simple): Tratamiento de caries y reconstrucci√≥n con resina - 45 min, $9,000.\\n3. Implantes dentales: Reemplazo de piezas dentales con implantes de titanio - 2 h, desde $100,000.\\n4. Extracci√≥n de muelas: Extracci√≥n simple o compleja seg√∫n el caso - 1 h, desde $12,000.\\n```\",\n  \n  \"mensaje2\": \"```markdown\\n5. Atenci√≥n a ni√±os: Control, limpieza y educaci√≥n para ni√±os - 30 min, $6,000.\\n6. Placa de bruxismo: Placa personalizada para dormir - 2 citas, $45,000.\\n7. Control mensual de ortodoncia: Revisi√≥n y ajuste de brackets - 20-30 min, $6,000.\\n8. Limpieza dental: Higiene bucal profesional con ultrasonido - 30 min, $7,000.\\n```\",\n\n  \"mensaje3\": \"```markdown\\n9. Blanqueamiento dental: Tratamiento con gel y luz LED - 1 h, $22,000.\\n10. Ortodoncia (Brackets tradicionales): Evaluaci√≥n, instalaci√≥n y seguimiento mensual - consulta inicial $8,000, colocaci√≥n completa por arcada desde $90,000.\\n11. Ortodoncia invisible (Invisalign): Tratamiento con alineadores transparentes - consulta inicial $12,000.\\n\\nSi deseas m√°s informaci√≥n sobre alg√∫n servicio o si est√°s interesado en agendar una cita, ¬°h√°zmelo saber!\\n```\"\n}\nPasos a seguir\nLee cuidadosamente el mensaje en Markdown que recibes.\n\nDecide si se necesita dividir ese mensaje en 1, 2 o 3 fragmentos para mayor claridad.\n\nNo modifiques el texto ni el formato (backticks, listas, t√≠tulos, etc.).\n\nDevuelve el resultado como un objeto JSON v√°lido, usando las claves solicitadas.\n\nObjetivo Final\nOptimizar la claridad de la comunicaci√≥n sin alterar el contenido ni el formato original en Markdown. Cuando sea preciso, divide el mensaje en uno, dos o tres fragmentos, retorn√°ndolos en un √∫nico objeto JSON.",
              "role": "system"
            },
            {
              "content": "={{ $json.output }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1300,
        360
      ],
      "id": "03bc44bd-2457-4ef7-91af-d82d9fb884ba",
      "name": "OpenAI3",
      "retryOnFail": true,
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "name": "Agente_calendario",
        "description": "Llama a esta herramienta cada vez que necesites tareas relacionas con el calendario como, ver disponibilidad, cambiar un turno, dar un turno, buscar turno, cancelar turno. Simplemente, expl√≠cale lo que necesitas, ej: \"ver pr√≥xima disponibilidad\"",
        "workflowId": {
          "__rl": true,
          "value": "DBA7yv5JT4cu1Pe9",
          "mode": "list",
          "cachedResultName": "Agente Agendamiento para Cl√≠nica"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        960,
        640
      ],
      "id": "01d77e92-7fae-4611-984b-9abe534da07e",
      "name": "Agente calendario"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "a8899215-f454-4d4b-80b7-b195a5f28251",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3780,
        340
      ],
      "id": "47daa7a9-83bf-46fd-bbb6-f3e524c95bfd",
      "name": "Webhook",
      "webhookId": "a8899215-f454-4d4b-80b7-b195a5f28251"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "24c275ee-aef2-4b03-bf22-4ca69aa05e98",
              "name": "serverUrl",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "a15eb467-42de-4299-a389-667647ccc613",
              "name": "instanceName",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "13f6d482-fb2d-42a2-958e-e82273d6679c",
              "name": "apiKey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "557486dd-9057-4d07-8c8a-19583a79b9f9",
              "name": "message.messageId",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "79493ec9-a117-496c-88bf-65254c376d20",
              "name": "message.chatId",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "1208a065-1670-40c7-9b9d-5c8c87cedd3f",
              "name": "message.messageType",
              "value": "={{ $json.body.data.message.conversation ? 'text': '' }}{{ $json.body.data.message.extendedTextMessage ? 'text': '' }}{{ $json.body.data.message.audioMessage ? 'audio': '' }}{{ $json.body.data.message.imageMessage ? 'image': '' }}",
              "type": "string"
            },
            {
              "id": "2e0a8ca5-35b9-4d4d-9005-1e66ac828eeb",
              "name": "message.messageContent",
              "value": "={{ $json.body.data.message.extendedTextMessage?.text || '' }}{{ $json.body.data.message.imageMessage?.caption || '' }}{{ $json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "2f72443f-eace-44fa-8a81-5f3bf1ab5e88",
              "name": "message.messageTimeStamp",
              "value": "={{ $json.body.date_time.toDateTime().toISO() }}",
              "type": "string"
            },
            {
              "id": "a8c0f64c-2ad7-42c8-9af0-eb792f298cdd",
              "name": "userName",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3380,
        340
      ],
      "id": "3bbaa693-9a03-46ec-a238-173cffd9e352",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "e397999f-f0d4-47db-8619-c188b5e3616b"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "338e3688-336d-4e2a-a3a9-d81e6bbd4e11",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b8f82334-7775-4e5d-9d7c-f6402af55910",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sticker"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ce0507ad-b0f4-4d0a-bf21-d6db06ab283f",
                    "leftValue": "={{ $json.message.messageType }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "other"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3100,
        300
      ],
      "id": "077385ca-b91b-4386-be6b-c86d5d6d89bb",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2580,
        -120
      ],
      "id": "0458b1d4-b84a-4e3d-a3e0-756f43679c20",
      "name": "descargar audio"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2360,
        -120
      ],
      "id": "1565850f-2643-46cd-8000-e5f8ffa2f0c0",
      "name": "convertir audio"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2140,
        -120
      ],
      "id": "f8242f14-bf22-4483-bc25-87467e9f12f0",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2600,
        240
      ],
      "id": "8f683acc-f272-41fb-9fdc-36f1813e2145",
      "name": "descargar imagen"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2380,
        240
      ],
      "id": "3bc5eacb-dc5c-46b2-b8f6-a800c9d68e1d",
      "name": "convertir imagen"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "1b078c6c-6824-43e2-8bff-8a56fca7a1c9",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1920,
        -120
      ],
      "id": "2a1dada0-b937-49e7-af3e-aac1a12d56eb",
      "name": "audio content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "=<image>\n{{ $json.content }}\n</image>",
              "type": "string"
            },
            {
              "id": "29e2c943-8bb0-4199-84dd-16d098894ddd",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1900,
        240
      ],
      "id": "63c1bc63-3cdb-495e-973f-39935de40c0f",
      "name": "image content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bcea6c99-72fa-44d3-acc6-ecfdec887583",
              "name": "content",
              "value": "={{ $json.messageContent }}",
              "type": "string"
            },
            {
              "id": "6abb6aff-1f4a-4ab5-aece-c2bf1d27a59d",
              "name": "timestamp",
              "value": "={{ $('Json Parse').item.json.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1120,
        780
      ],
      "id": "7ef3b45d-0e01-4856-a546-e4a38733b9cf",
      "name": "text content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2599831-cc84-4aa6-acf7-77ed624f72ab",
              "name": "content",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            },
            {
              "id": "58b79cfa-6b3c-4b54-9c05-9cc2f3534cbc",
              "name": "chatInput",
              "value": "={{ $json.messages.join(\"\\n\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        380,
        360
      ],
      "id": "677990f4-927f-45be-baba-f947de5e5d94",
      "name": "mensaje"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Edit Fields').item.json.message.chatId }}",
        "messageData": "={{ JSON.stringify($('Edit Fields').item.json.message) }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2700,
        800
      ],
      "id": "972f5d26-413c-4bf1-b8a7-dd05e0a6a5da",
      "name": "push mensaje",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "message",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1540,
        780
      ],
      "id": "72bf4104-f064-4f67-978c-d5d1b2f525f8",
      "name": "Split Out"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.message) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1320,
        780
      ],
      "id": "96237812-311e-4f7f-b1e7-e39e2c0aaaf4",
      "name": "Json Parse"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        -100,
        360
      ],
      "id": "e40cf652-ccaf-4e1d-b4ec-51e1e41413bf",
      "name": "Sort"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        120,
        360
      ],
      "id": "e7c8924f-7fb5-4d90-a97f-85ae6ea61d3d",
      "name": "Aggregate"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2480,
        800
      ],
      "id": "62ffd067-3462-4f25-b7db-7c406619e734",
      "name": "Wait1",
      "webhookId": "ad0b2256-ca25-4752-8545-25b36c36d74b",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "18445dcf-1967-40d1-aec2-6d2196b1364b",
              "leftValue": "={{ JSON.parse($json.message.last()).messageId }}",
              "rightValue": "={{ $('Edit Fields').item.json.message.messageId }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2020,
        800
      ],
      "id": "bfecdb64-e33c-4958-a36f-9b967e1c2293",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('Edit Fields').item.json.message.chatId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2260,
        800
      ],
      "id": "f65f5ac2-c01d-4d62-9a07-244392131f5c",
      "name": "obtener todos mensajes",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Edit Fields').item.json.message.chatId }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1780,
        780
      ],
      "id": "6493ab54-3d7a-47c4-98cc-dcefcd060b03",
      "name": "borrar todos mensajes",
      "credentials": {
        "redis": {
          "id": "2nvHuldOkXKkzOTY",
          "name": "Redis localhost"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a54b459d-e8df-47e1-be8c-a8a476ab93c3",
              "name": "content",
              "value": "=<image>\n{{ $json.content }}\n</image>",
              "type": "string"
            },
            {
              "id": "29e2c943-8bb0-4199-84dd-16d098894ddd",
              "name": "timestamp",
              "value": "={{ $('Edit Fields').item.json.message.messageTimeStamp }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1900,
        520
      ],
      "id": "591d6f91-4a2f-4f72-9f02-bad6a956b43b",
      "name": "stickercontent"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2580,
        520
      ],
      "id": "c56def67-61cb-4dce-99ef-977e0b8536e0",
      "name": "descargar sticker"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza y describe brevemente este sticker. Tu respuesta debe comenzar con: \"Sticker enviado ____\"",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2140,
        520
      ],
      "id": "e2dcaa4e-dc99-4cad-adec-ce43dc0aa359",
      "name": "describe sticker",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2360,
        520
      ],
      "id": "d2b164c4-bcfe-4846-ad74-23a2fd530d34",
      "name": "convertir sticker"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "base64",
        "options": {
          "fileName": ""
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2340,
        1200
      ],
      "id": "62325225-7b98-46be-b5d3-287c9bfb3ef5",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Edit Fields').item.json.serverUrl }}/chat/getBase64FromMediaMessage/{{ $('Edit Fields').item.json.instanceName }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Edit Fields').item.json.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $('Edit Fields').item.json.message.messageId }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2560,
        1200
      ],
      "id": "e64e8645-cbb3-4a17-a785-dc7103a5ec2b",
      "name": "PDF"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -320,
        340
      ],
      "id": "1dc57316-5115-4dc3-ba15-fd1ff8509fa6",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analiza y describe brevemente este sticker. Tu respuesta debe comenzar con: \"Sticker enviado ____\"",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2140,
        240
      ],
      "id": "d64a32a7-61ce-421c-8c01-11e5da0c8b40",
      "name": "describe imagen",
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1780,
        1020
      ],
      "id": "ca6eae6b-227d-476d-9621-b1d6048d9322",
      "name": "No Operation, do nothing1"
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "OpenAI3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Error": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "If Parte ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Parte ": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Parte 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Parte 4": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API1": {
      "main": [
        [
          {
            "node": "If Parte 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente calendario": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "descargar audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "descargar imagen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "descargar sticker",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "push mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar audio": {
      "main": [
        [
          {
            "node": "convertir audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir audio": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "audio content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "descargar imagen": {
      "main": [
        [
          {
            "node": "convertir imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir imagen": {
      "main": [
        [
          {
            "node": "describe imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "audio content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "text content": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "push mensaje": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Json Parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json Parse": {
      "main": [
        [
          {
            "node": "text content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "obtener todos mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "borrar todos mensajes",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener todos mensajes": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "borrar todos mensajes": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "stickercontent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "descargar sticker": {
      "main": [
        [
          {
            "node": "convertir sticker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "describe sticker": {
      "main": [
        [
          {
            "node": "stickercontent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertir sticker": {
      "main": [
        [
          {
            "node": "describe sticker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "describe imagen": {
      "main": [
        [
          {
            "node": "image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mensaje": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "ecd0b43b-2ec1-47e1-9b51-f33a162961de",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2025-04-27T18:42:31.149Z",
      "updatedAt": "2025-04-27T18:42:31.149Z",
      "id": "yCzirQ8grCnJYX3H",
      "name": "Whatsapp"
    },
    {
      "createdAt": "2025-05-01T08:00:35.375Z",
      "updatedAt": "2025-05-01T08:00:35.375Z",
      "id": "mnFs5ZQ4LARCnZcQ",
      "name": "Cl√≠nicas"
    }
  ]
}