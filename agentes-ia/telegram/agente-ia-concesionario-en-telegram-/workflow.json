{
  "createdAt": "2025-05-01T07:55:28.791Z",
  "updatedAt": "2025-05-01T08:02:26.513Z",
  "id": "fJT0GArW8aqqWaar",
  "name": "Agente IA Concesionario en Telegram",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Telegram Trigger').item.json.message.text }}",
        "options": {
          "systemMessage": "=# Rol\nSos Agus, el encargado de toda la atención al cliente de la concesionaria de autos Cordoba automotoes. Tu puesto es el más importante en la empresa, si haces tu trabajo bien te pago 2000 usd al mes, si lo haces mal no podre pagarle el tratamiento a mi hija\n\n----\n\n# Tarea\nTu tarea es atender a todas las personas que nos hablen, ya sea para comprar o averiguar por un auto, o a las personas que quieran vender el suyo \n\n- Tenés que hablar con un todo claro y amable e informal\n- ayuda encuentra el vehículo que busca el cliente si no sabe\n- ressponde todas sus dudas sobre Cordoba automotoes de forma breve y clara\n\n##tenes dos herramientas a disposición \n\n###Buscar auto \n\npara usar esta herramienta le vas a pasar la información del vehículo que buscas de la forma más clara posible. Y la herramienta te va a devolver los autos más similares a lo que estás buscando \n\nen el caso de haber pocas opciones vuelve a llamarla pero ampliando la búsqueda, osea si buscaste PickUp ford 2020 4x4 y no devuelve nada podes llamarla devuelta buscando solo Pick Up Ford o PickUp 4x4 \n\n\n###Busscar usasdo \n\nusa esta herramienta para cotizar un usado, le vas a pasar toda la informacion del vheiculo usado y si esta en la lista te va a devolver la informacion de cotizaciuon del usado. en el caso de que no devuelva nada u informacion erronea simplemente vas a contestar \"en este momento no tengo la cotización para tu auto, pero pronto mi equipo se pondrá en contacto y te la enviaremos\"\n\n\n# Especificaciones\n## General \nCordoba automotores es una concesionaria donde vendemos autos y tomamos los usados. \nesta abierto de lunes a viernes de 8am a 16 horas y sabados de 8am a 12pm\n\n#Guia de mensajes \n\nPASO 1: Bienvenida + detección de intención\nMensaje:\n\n“¡Hola! Bienvenido a Cordoba automotores. ¿Estás buscando algún auto en especial o querés que te tire algunas opciones según lo que necesitás?”\n\n\nPASO 2: ¿Qué quiere y para qué lo quiere?\nSi responde con algo como “estoy viendo”, “me gusta tal modelo”, “vi una S10 en la web”, se sigue con:\n\n“Buenísimo. ¿Lo estás buscando para uso personal, trabajo o familiar?”\n\n“¿Tenés alguna marca o modelo en la cabeza o estás abierto a sugerencias?”\n\nPASO 3: Preguntar por financiación (sin asustar)\nMomento ideal: cuando ya dijo qué modelo le interesa.\n\nPreguntas naturales:\n\n\"¿me podrias dar tu nombre y apellido?\"\n\n“¿Tenés pensado pagarlo al contado o estás buscando financiar una parte?”\n\n“¿Tenés algún monto de entrega en mente para arrancar?”\n\n“¿Hasta cuánto te gustaría pagar por mes, más o menos?”\n\nSi responde con dudas o no sabe:\n\n“Tranqui, te paso un par de opciones para que tengas una idea y vemos la que mejor te cierra.”\n\nPASO 4: Preguntar si tiene un usado para entregar\nMomento ideal: después de hablar de cómo lo va a pagar o si ya mostró interés real en un auto.\n\nPreguntas:\n\n“¿Tenés algún auto para entregar como parte de pago?”\n\nSi dice que sí:\n\n“Genial. ¿Qué auto es? Marca, modelo, año y cuántos km tiene.”\n\n“¿Lo tenés a tu nombre? ¿Tenés la cédula o la transferencia hecha?”\n\nUsas la herramienta Buscar usado y le decimos que ese es un precio estimativo pero puedo ser mayor si lo lleva a revisión \n\ny usas la herramienta Buscar auto para buscar las mejores opciones para el y se las postras de  manera resumida y con los datos más relevantes\n\nPASO 5: Le hacemos preguntas para ver que le parecio\n\ncual de estass opciones te gusnto mas? queres que busquemos otras?\n\nSi no estaba la opción que él buscaba hacemos otra búsqueda más ampliada\n\n\nPASO 6: si la persona se muestra interesada Agendamos una cita o visita al local\n\n“Dale, te armo un presupuesto con opciones y te paso todo bien claro.”\n\n“¿Te gustaría venir a verlo o preferís que charlemos por llamada así charlamos todo?”\n\nUsamos la herramienta *agendar cita* agendamos con su nombre, apellido y si es llamada o local\n\n\n\n## Lenguaje\n- Usá jerga argentina (ej: \"che\", \"sos\").\n- No uses signos de apertura (¿¡).\n\n# Notas\n- es importante que no le muestes opciones de autos diponibles hasta el paso 4 ya que primero lo queremos cualificar\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -2080,
        200
      ],
      "id": "54cd9141-d720-4692-948f-c0ccae4b637f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2420,
        560
      ],
      "id": "389a085e-bc16-4964-9d22-c4e97cda962f",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "name": "AUTOS_DISPONIBLES_CAG",
        "description": "Usa esta herramienta para buscar autos disponibles, envíale toda la información de lo que buscas",
        "workflowId": {
          "__rl": true,
          "value": "8VLYbKnSAYvy26Z6",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 2"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -2020,
        520
      ],
      "id": "77a1537b-cad3-48df-a281-649b9697d377",
      "name": "AUTOS DISPONIBLES CAG"
    },
    {
      "parameters": {
        "name": "AUTOS_USSADOS_RAG",
        "description": "Llama esta herramienta para cotizar autos usados, envíale la información del auto a cotizar",
        "workflowId": {
          "__rl": true,
          "value": "TqJNJtCP1MDhRKbx",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 2"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        -1860,
        540
      ],
      "id": "34971426-af39-42db-89c2-1e86c1f048aa",
      "name": "AUTOS USADOS CAG"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "ba021d678ee68d75c492abfc7d7f4aa9f39409357c429b407ee59e0e8bcbc3a5@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "concecionaria"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', `Pedir el horario al usuario`, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', `siempre duran 1 hora`, 'string') }}",
        "additionalFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', `breve descripcion del cliente, que busca si tiene para entragar, si va a financiar `, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', `nombre y apelllido `, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -1680,
        540
      ],
      "id": "6135236f-2191-4f51-b154-e9780942f64a",
      "name": "Google Calendar"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8",
          "mode": "list",
          "cachedResultName": "CRM CONSECIONARIA",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "ID",
              "lookupValue": "={{ $json.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2980,
        220
      ],
      "id": "e7293083-5a8a-452b-a28b-34abf865eb15",
      "name": "Google Sheets",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "241e2c8d-0348-471b-9b97-85856b60e39b",
              "leftValue": "={{ $json.ID }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2760,
        220
      ],
      "id": "1d21ec5d-148f-43ae-8642-3ab49eb44224",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8",
          "mode": "list",
          "cachedResultName": "CRM CONSECIONARIA",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "NOMBRE",
              "displayName": "NOMBRE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "APELLIDO",
              "displayName": "APELLIDO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QUIERE",
              "displayName": "QUIERE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ENTREGA",
              "displayName": "ENTREGA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ESTADO",
              "displayName": "ESTADO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2760,
        400
      ],
      "id": "ad30dec2-728a-40b6-8bc1-4cc5280a529c",
      "name": "Google Sheets4"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2260,
        560
      ],
      "id": "ed06e61f-0cf4-47d6-81e4-115127e45a6d",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "limit": 6,
        "where": {
          "values": [
            {
              "column": "session_id",
              "condition": "LIKE",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.id.toString() }}"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "message"
          ]
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1660,
        200
      ],
      "id": "b8710317-f0a8-49ce-a06a-b3dd7c1a137d",
      "name": "Postgres"
    },
    {
      "parameters": {
        "jsCode": "const mensajes = items.map(item => {\n  return {\n    type: item.json.message.type,\n    content: item.json.message.content\n  };\n});\n\nreturn [\n  {\n    json: {\n      mensajes\n    }\n  }\n];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1440,
        200
      ],
      "id": "07ad70ff-0a71-44bf-b254-471bf966f77b",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# HISTORIAL DE MENSAJES\n\n{{ $json.mensajes.toJsonString() }}\n\n## 🧠 Rol\nSos el encargado de completar un CRM según lo que dicen el cliente y el vendedor.\n\n## 🛠️ Tarea\nLeé los mensajes y completá el CRM solo con los datos que menciona el cliente.\n\nPrimero tenés que **leer el CRM** y después **llenarlo**.  \nEjemplo: si el cliente dice *“me interesa la Toyota”* pero antes había dicho *“me interesa una Ford”*, leé el CRM y completá con ambas: Ford, Toyota.\n\n⚠️ **Importante:** el cliente **no puede bajar de estado**.  \nEs decir, **no puede pasar de caliente a intermedio o frío**, ni de intermedio a frío. Por eso es clave leer primero el estado actual antes de modificarlo.\n\n### Campos a completar (si el *human* lo menciona):\n- Nombre y apellido  \n- Auto que busca  \n- Auto que entrega (con toda la info posible)\n\n### Estado del cliente\nMarcá como:\n- Frío\n- Intermedio\n- Caliente\n\nUn cliente es **caliente** si:\n- Pide financiación concreta (cuotas, valor mensual)  \n- Pregunta por entrega inmediata, stock o disponibilidad  \n- Quiere agendar cita o ver el auto  \n- Da datos reales del usado para cotizar  \n- Pregunta por papeles o patentamiento  \n- O si, según tu criterio, muestra intención real de compra o mucha curiosidad\n\n⚠️ No marques como caliente solo porque menciona qué auto busca.\n\n🔍 Completá cada campo con la **máxima precisión posible**.\n\n---\n\n# HISTORIAL DE MENSAJES\n\n{{ $json.mensajes }}\n\n---\n\n✅ Si no tenés la información, **no llenes nada**.  \nCompletá **solo las casillas de las que tengas información.**\n\n📝 Devolvé únicamente la información que llenaste, o devolvé **0** si no llenaste nada.\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -1220,
        200
      ],
      "id": "e19e6032-3c3d-458b-9e82-503ee75e6f3b",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1260,
        440
      ],
      "id": "98ba40ff-a871-4595-acbf-a7dc3a2e40e4",
      "name": "OpenAI Chat Model1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8",
          "mode": "list",
          "cachedResultName": "CRM CONSECIONARIA",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "ID",
              "lookupValue": "={{ $('Telegram Trigger').first().json.message.chat.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        -860,
        420
      ],
      "id": "26b1552f-6e15-45fb-9063-bb819ecbb689",
      "name": "Leer crm"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8",
          "mode": "list",
          "cachedResultName": "CRM CONSECIONARIA",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RF0mxyfoI9bxFU4zWSCYwSkga_H8pb6QEMdqIJTTog8/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ID": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
            "NOMBRE": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('NOMBRE', `NOMBRE`, 'string') }}",
            "APELLIDO": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('APELLIDO', `APELLIDO`, 'string') }}",
            "QUIERE": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('QUIERE', `AUTO QUE QUIERE`, 'string') }}",
            "ENTREGA": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ENTREGA', `AUTO QUE QUIERE ENTREGAR`, 'string') }}",
            "ESTADO": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ESTADO', `ESTADO DEL CLIENTE`, 'string') }}"
          },
          "matchingColumns": [
            "ID"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "NOMBRE",
              "displayName": "NOMBRE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "APELLIDO",
              "displayName": "APELLIDO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QUIERE",
              "displayName": "QUIERE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ENTREGA",
              "displayName": "ENTREGA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ESTADO",
              "displayName": "ESTADO",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        -1000,
        420
      ],
      "id": "0c7a5262-2d22-49ee-83a5-90df990128df",
      "name": "llenar crm"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}\n",
        "text": "={{ $json.message.content.mensaje1 }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "4b47c668-dc31-4e84-83ab-621ca157f64e",
      "name": "Telegram",
      "webhookId": "387bd818-3ccd-4255-acd0-0d194885de08"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.content.cantidad_de_mensajes }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "id": "b907679c-7f5f-4f6e-b8f5-7e41c90f9704"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1 msg"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "51ac9eba-75f4-457f-a086-6cd4e3bcb1a1",
                    "leftValue": "={{ $json.message.content.cantidad_de_mensajes }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2 msg"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a888e835-07b4-4ee8-9b68-e46a97b82eec",
                    "leftValue": "={{ $json.message.content.cantidad_de_mensajes }}",
                    "rightValue": 3,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3 msg"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -340,
        200
      ],
      "id": "f4501434-123d-4689-a662-ebd129ac3aea",
      "name": "Switch"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "={{ $json.message.content.mensaje1 }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        200
      ],
      "id": "2811d796-3353-4dc1-804c-a872e8a25e21",
      "name": "Telegram1",
      "webhookId": "387bd818-3ccd-4255-acd0-0d194885de08"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "={{ $('Switch').item.json.message.content.mensaje2 }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        220,
        200
      ],
      "id": "374bad5e-ade8-4e6f-b72c-459d528d79e8",
      "name": "Telegram2",
      "webhookId": "387bd818-3ccd-4255-acd0-0d194885de08"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=**Rol**  \nEres un especialista encargado de transformar consultas complejas en información claramente estructurada.\n\n---\n\n**Instrucción**  \nRecibirás un mensaje de una secretaria de clínica dental en formato Markdown (con sus respectivas secciones y backticks). Tu tarea es determinar si dicho mensaje debe dividirse en uno, dos o tres mensajes independientes para mejorar su claridad. \n\n---\n\n**Importante**  \n- El contenido y el formato (incluyendo los backticks) **ya vienen en Markdown** y **no debes modificarlos**.  \n- Debes conservar y trasladar íntegramente la estructura y el texto original, **sin cambiar ni un carácter**.  \n- Si decides fragmentar el mensaje, cada parte debe **mantener la porción exacta del Markdown original**.  \n\nEl resultado final deberá ser un objeto JSON que contenga:  \n  - `cantidad_de_mensajes`: 1, 2 o 3, según corresponda.  \n  - `mensaje1`, `mensaje2`, `mensaje3`: cada uno con la parte correspondiente **en el mismo formato Markdown recibido**, sin alteraciones. Solo incluir `mensaje2` o `mensaje3` si corresponden.\n\n---\n\n## Ejemplos de entrada y salida\n\n### Ejemplo 1 (2 mensajes)\n\n**Input (en Markdown)**\n\n```text\n```markdown\nAquí tienes los precios para los tratamientos de ortodoncia:\n\n- Consulta inicial para ortodoncia (brackets tradicionales): $8,000\n- Colocación de brackets metálicos: desde $90,000 por arcada\n- Consulta inicial para ortodoncia invisible (Invisalign): $12,000\n\nSi necesitas más información o agendar una cita, aquí estoy.\nswift\nCopiar\nEditar\n\n**Output (JSON)**\n\n```json\n{\n  \"cantidad_de_mensajes\": 2,\n  \"mensaje1\": \"Aquí tienes los precios para los tratamientos de ortodoncia:\\n\\n- Consulta inicial para ortodoncia (brackets tradicionales): $8,000\\n- Colocación de brackets metálicos: desde $90,000 por arcada\\n- Consulta inicial para ortodoncia invisible (Invisalign): $12,000\\n\",\n  \"mensaje2\": \"Si necesitas más información o agendar una cita, aquí estoy.\\n\"\n}\nObserva que en el output se mantuvo el texto original y su formato Markdown exacto.\n\nEjemplo 2 (1 mensaje)\nInput (en Markdown)\n\ntext\nCopiar\nEditar\n```markdown\n¿Tenés turnos disponibles esta semana?\njavascript\nCopiar\nEditar\n\n**Output (JSON)**\n\n```json\n{\n  \"cantidad_de_mensajes\": 1,\n  \"mensaje1\": \"¿Tenés turnos disponibles esta semana?\\n\"\n}\nAquí no se dividió, porque era un mensaje muy breve; se conserva tal cual.\n\n\n#Ejemplo 3\n\nInput (en Markdown)\n\ntext\nCopiar\nEditar\n```markdown\nLa clínica dental ofrece los siguientes servicios:\n\n1. Retiro de brackets: Extracción, limpieza post-tratamiento y contención - 1 h, $30,000.\n2. Caries (empaste simple): Tratamiento de caries y reconstrucción con resina - 45 min, $9,000.\n3. Implantes dentales: Reemplazo de piezas dentales con implantes de titanio - 2 h, desde $100,000.\n4. Extracción de muelas: Extracción simple o compleja según el caso - 1 h, desde $12,000.\n5. Atención a niños: Control, limpieza y educación para niños - 30 min, $6,000.\n6. Placa de bruxismo: Placa personalizada para dormir - 2 citas, $45,000.\n7. Control mensual de ortodoncia: Revisión y ajuste de brackets - 20-30 min, $6,000.\n8. Limpieza dental: Higiene bucal profesional con ultrasonido - 30 min, $7,000.\n9. Blanqueamiento dental: Tratamiento con gel y luz LED - 1 h, $22,000.\n10. Ortodoncia (Brackets tradicionales): Evaluación, instalación y seguimiento mensual - consulta inicial $8,000, colocación completa por arcada desde $90,000.\n11. Ortodoncia invisible (Invisalign): Tratamiento con alineadores transparentes - consulta inicial $12,000.\n\nSi deseas más información sobre algún servicio o si estás interesado en agendar una cita, ¡házmelo saber!\n\n**Output (JSON)**\n\n{\n  \"cantidad_de_mensajes\": 3,\n  \"mensaje1\": \"```markdown\\nLa clínica dental ofrece los siguientes servicios:\\n\\n1. Retiro de brackets: Extracción, limpieza post-tratamiento y contención - 1 h, $30,000.\\n2. Caries (empaste simple): Tratamiento de caries y reconstrucción con resina - 45 min, $9,000.\\n3. Implantes dentales: Reemplazo de piezas dentales con implantes de titanio - 2 h, desde $100,000.\\n4. Extracción de muelas: Extracción simple o compleja según el caso - 1 h, desde $12,000.\\n```\",\n  \n  \"mensaje2\": \"```markdown\\n5. Atención a niños: Control, limpieza y educación para niños - 30 min, $6,000.\\n6. Placa de bruxismo: Placa personalizada para dormir - 2 citas, $45,000.\\n7. Control mensual de ortodoncia: Revisión y ajuste de brackets - 20-30 min, $6,000.\\n8. Limpieza dental: Higiene bucal profesional con ultrasonido - 30 min, $7,000.\\n```\",\n\n  \"mensaje3\": \"```markdown\\n9. Blanqueamiento dental: Tratamiento con gel y luz LED - 1 h, $22,000.\\n10. Ortodoncia (Brackets tradicionales): Evaluación, instalación y seguimiento mensual - consulta inicial $8,000, colocación completa por arcada desde $90,000.\\n11. Ortodoncia invisible (Invisalign): Tratamiento con alineadores transparentes - consulta inicial $12,000.\\n\\nSi deseas más información sobre algún servicio o si estás interesado en agendar una cita, ¡házmelo saber!\\n```\"\n}\nPasos a seguir\nLee cuidadosamente el mensaje en Markdown que recibes.\n\nDecide si se necesita dividir ese mensaje en 1, 2 o 3 fragmentos para mayor claridad.\n\nNo modifiques el texto ni el formato (backticks, listas, títulos, etc.).\n\nDevuelve el resultado como un objeto JSON válido, usando las claves solicitadas.\n\nObjetivo Final\nOptimizar la claridad de la comunicación sin alterar el contenido ni el formato original en Markdown. Cuando sea preciso, divide el mensaje en uno, dos o tres fragmentos, retornándolos en un único objeto JSON.",
              "role": "system"
            },
            {
              "content": "={{ $('AI Agent').first().json.output }}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -680,
        200
      ],
      "id": "ac84fdee-f5be-4f6e-9ca3-cad7352e6eda",
      "name": "OpenAI",
      "retryOnFail": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "={{ $json.message.content.mensaje1 }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        400
      ],
      "id": "fa32f3b4-3c3e-46a3-9623-c8bcf9951ca9",
      "name": "Telegram3",
      "webhookId": "387bd818-3ccd-4255-acd0-0d194885de08"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "={{ $('Switch').item.json.message.content.mensaje2 }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        220,
        400
      ],
      "id": "eaff2b4d-96d2-40c8-973d-349cc3370ec0",
      "name": "Telegram4",
      "webhookId": "387bd818-3ccd-4255-acd0-0d194885de08"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.chat.id }}",
        "text": "={{ $('Switch').item.json.message.content.mensaje3 }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        440,
        400
      ],
      "id": "f4db6771-10a1-4bf8-9cc4-f5f0b12fdf26",
      "name": "Telegram5",
      "webhookId": "387bd818-3ccd-4255-acd0-0d194885de08"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -3200,
        220
      ],
      "id": "02afdcd1-18c7-46e3-bd82-f4b04154a5ac",
      "name": "Telegram Trigger",
      "webhookId": "ac18b63f-07b2-4c3e-b755-f042fd6390d7"
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AUTOS DISPONIBLES CAG": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AUTOS USADOS CAG": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Sheets4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets4": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Leer crm": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "llenar crm": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram4": {
      "main": [
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Telegram Trigger": [
      {
        "json": {
          "update_id": 222944273,
          "message": {
            "message_id": 138,
            "from": {
              "id": 1803148796,
              "is_bot": false,
              "first_name": "Joaquin",
              "last_name": "Perotti",
              "language_code": "es"
            },
            "chat": {
              "id": 1803148796,
              "first_name": "Joaquin",
              "last_name": "Perotti",
              "type": "private"
            },
            "date": 1744761278,
            "text": "lo quioero ir a ver, podra se mañana a las 3pm?"
          }
        }
      }
    ]
  },
  "versionId": "b1778425-9a13-4891-a36b-0cd5eb16f130",
  "triggerCount": 0,
  "tags": []
}