{
  "createdAt": "2025-05-14T20:31:58.985Z",
  "updatedAt": "2025-05-14T20:33:26.519Z",
  "id": "6HJh81B1ZcoYYj0U",
  "name": "Construye tu propio servidor MCP de YouTube",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "operation"
            },
            {
              "name": "query"
            },
            {
              "name": "urls"
            }
          ]
        }
      },
      "id": "7e7c18a7-5bb2-43d6-8c73-fab0d7b5eb43",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        1280,
        520
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "81b134bc-d671-4493-b3ad-8df9be3f49a6",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "youtube_search"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Youtube Search"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "8d57914f-6587-4fb3-88e0-aa1de6ba56c1",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "youtube_transcripts"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Youtube Transcripts"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "7c38f238-213a-46ec-aefe-22e0bcb8dffc",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "usage_metrics"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Usage Metrics"
            }
          ]
        },
        "options": {}
      },
      "id": "e6ae30df-738c-4276-ad81-38400f7d1813",
      "name": "Operation",
      "type": "n8n-nodes-base.switch",
      "position": [
        1520,
        520
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "content": "## 1. Set up an MCP Server Trigger\n[Read more about the MCP Server Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger)",
        "height": 660,
        "width": 680,
        "color": 7
      },
      "id": "fc416367-0f0c-4e9b-a0ef-43705a4593b0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## 2. [APIFY.com](https://www.apify.com?fpr=414q6) for Easy Youtube Search and Transcripts\n[Sign up for Apify.com using 20JIMLEUK for 20% discount](https://www.apify.com?fpr=414q6)\n\nI've used Apify's Youtube scrapers a couple of times already and I find them quite fast and dependable for production use-cases.\nI particularly like that my workflows don't break when I inevitably hit the official Youtube rate limits which are quite low.\nFor this MCP server, I'm using the following youtube scraper for search and downloading transcripts: [https://apify.com/streamers/youtube-scraper](https://apify.com/streamers/youtube-scraper?fpr=414q6)",
        "height": 820,
        "width": 1240,
        "color": 7
      },
      "id": "895e3824-63a6-4d7d-9436-e36c4f54ee8d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1200,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Always Authenticate Your Server!\nBefore going to production, it's always advised to enable authentication on your MCP server trigger.",
        "height": 100,
        "width": 380,
        "color": 5
      },
      "id": "4c718b71-8dcd-4aeb-83ad-2f782afc9554",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "youtube_transcripts",
        "description": "Fetch the transcript from a youtube video using the youtube video url.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "urls": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('urls', ``, 'string') }}",
            "query": "null",
            "operation": "youtube_transcripts"
          },
          "schema": [
            {
              "id": "operation",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "operation",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "query",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "query",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "urls",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "urls",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "5a45ba4e-f623-4c7c-97a8-dc20b8f4a17a",
      "name": "Youtube Transcripts",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        940,
        500
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "name": "websearch_contents",
        "description": "Performs a youtube search and retrieves relevant videos with metadata only.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "urls": "null",
            "query": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('query', ``, 'string') }}",
            "operation": "youtube_search"
          },
          "schema": [
            {
              "id": "operation",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "operation",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "query",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "query",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "urls",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "urls",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "a6ff0415-cc58-4294-9f20-8ca79ee957e0",
      "name": "Youtube Search",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        660,
        500
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/streamers~youtube-scraper/run-sync-get-dataset-items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n{\n  \"searchQueries\": [$json.query],\n  \"maxResultStreams\": 0,\n  \"maxResults\": 5\n}\n}}",
        "options": {}
      },
      "id": "79ec9132-e3b3-4243-894e-d983e3280b8f",
      "name": "Apify Youtube Search",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1800,
        320
      ],
      "executeOnce": true,
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d1db837-e256-4124-80d1-8b103dbbefbb",
              "name": "channelName",
              "type": "string",
              "value": "={{ $json.channelName }}"
            },
            {
              "id": "94cebccb-b499-4fab-a1ff-187179dcd5ce",
              "name": "title",
              "type": "string",
              "value": "={{ $json.title }}"
            },
            {
              "id": "cc68698a-221a-49b8-a349-d16ad4fa746c",
              "name": "url",
              "type": "string",
              "value": "={{ $json.url }}"
            },
            {
              "id": "de8ae3e0-685d-4e40-839f-13c798d4e5e2",
              "name": "description",
              "type": "string",
              "value": "={{ $json.text.substr(0,2_000) }}"
            },
            {
              "id": "e933cbca-486c-45c9-8ed0-89a3d1efe003",
              "name": "viewCount",
              "type": "number",
              "value": "={{ $json.viewCount }}"
            },
            {
              "id": "417846bb-5e8c-42af-b1dc-8b1de9fa426c",
              "name": "likes",
              "type": "number",
              "value": "={{ $json.likes }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3df2b169-8ceb-4973-9580-9ed562a783c1",
      "name": "Simplify Search Results",
      "type": "n8n-nodes-base.set",
      "position": [
        2000,
        320
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/streamers~youtube-scraper/run-sync-get-dataset-items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n{\n  \"downloadSubtitles\": true,\n  \"hasCC\": false,\n  \"hasLocation\": false,\n  \"hasSubtitles\": false,\n  \"is360\": false,\n  \"is3D\": false,\n  \"is4K\": false,\n  \"isBought\": false,\n  \"isHD\": false,\n  \"isHDR\": false,\n  \"isLive\": false,\n  \"isVR180\": false,\n  \"maxResultStreams\": 0,\n  \"maxResults\": 1,\n  \"maxResultsShorts\": 0,\n  \"preferAutoGeneratedSubtitles\": false,\n  \"saveSubsToKVS\": false,\n  \"startUrls\": $json.urls.split(',').map(url => ({\n    \"url\": url,\n    \"method\": \"GET\"\n  })),\n  \"subtitlesFormat\": \"plaintext\",\n  \"subtitlesLanguage\": \"en\"\n}\n}}",
        "options": {}
      },
      "id": "f57b24b5-9791-402e-a14c-30cb78a97ec2",
      "name": "Apify Youtube Transcripts",
      "type": "n8n-nodes-base.httpRequest",
      "maxTries": 2,
      "position": [
        1800,
        520
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "94cebccb-b499-4fab-a1ff-187179dcd5ce",
              "name": "title",
              "type": "string",
              "value": "={{ $json.title }}"
            },
            {
              "id": "cc68698a-221a-49b8-a349-d16ad4fa746c",
              "name": "url",
              "type": "string",
              "value": "={{ $json.url }}"
            },
            {
              "id": "7501fe60-f43d-42fe-9087-6f70a1cf12af",
              "name": "transcript",
              "type": "string",
              "value": "={{ $json.subtitles[0].plaintext }}"
            }
          ]
        },
        "options": {}
      },
      "id": "71b3d4ac-b8f7-4893-8288-fde1b416f261",
      "name": "Simplify Transcript Results",
      "type": "n8n-nodes-base.set",
      "position": [
        2000,
        520
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response",
        "options": {}
      },
      "id": "a5417cf2-7595-4cae-a0f9-f29714746f38",
      "name": "Aggregate Search Results",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        2200,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response",
        "options": {}
      },
      "id": "578fb28d-f570-4264-ab1b-c41d00d46b84",
      "name": "Aggregate Transcript Results",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        2200,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ff43aa98-4e32-478d-9e43-619b7b808948",
              "name": "monthlyUsageCycle_startAt",
              "type": "string",
              "value": "={{ $json.data.monthlyUsageCycle.startAt }}"
            },
            {
              "id": "145eefd3-5248-40e9-a988-9e0e578d930a",
              "name": "monthlyUsageCycle_endAt",
              "type": "string",
              "value": "={{ $json.data.monthlyUsageCycle.endAt }}"
            },
            {
              "id": "020d1e4f-d7ec-4d69-b9be-b6c4ba5971eb",
              "name": "monthlyUsageUsd",
              "type": "string",
              "value": "={{ $json.data.current.monthlyUsageUsd.toFixed(2) }} of {{ $json.data.limits.maxMonthlyUsageUsd.toFixed(2) }}"
            },
            {
              "id": "112fb245-b35b-45ce-ad29-e05d0f352010",
              "name": "ACTOR_COMPUTE_UNITS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.ACTOR_COMPUTE_UNITS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "4b451afb-eba7-49c6-8c3c-7279fb315ec6",
              "name": "DATASET_READS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.DATASET_READS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "c002234c-955e-41f4-a27f-7f031ae6111e",
              "name": "DATASET_TIMED_STORAGE_GBYTE_HOURS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.DATASET_TIMED_STORAGE_GBYTE_HOURS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "0108085d-1bb4-44c5-bc3b-845a7206abfe",
              "name": "DATASET_WRITES",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.DATASET_WRITES.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "df993499-7410-450c-b5b1-50052e6d061e",
              "name": "DATA_TRANSFER_EXTERNAL_GBYTES",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.DATA_TRANSFER_EXTERNAL_GBYTES.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "1627a2dd-15a6-4b69-b480-4e1b792c403d",
              "name": "DATA_TRANSFER_INTERNAL_GBYTES",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.DATA_TRANSFER_INTERNAL_GBYTES.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "73037e97-e43d-4ecd-bb7e-6c5ce4740e4d",
              "name": "KEY_VALUE_STORE_READS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.KEY_VALUE_STORE_READS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "5de9ba3b-bf62-4525-9cd9-5008bafe73c5",
              "name": "KEY_VALUE_STORE_TIMED_STORAGE_GBYTE_HOURS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.KEY_VALUE_STORE_TIMED_STORAGE_GBYTE_HOURS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "6d1997f2-46c0-468b-b50f-fc37512417d2",
              "name": "KEY_VALUE_STORE_WRITES",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.KEY_VALUE_STORE_WRITES.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "b579cb9e-d18f-4877-b808-a177195a364a",
              "name": "PAID_ACTORS_PER_DATASET_ITEM",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.PAID_ACTORS_PER_DATASET_ITEM.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "5c69831c-3c62-421d-afff-bd8cfb68fb29",
              "name": "REQUEST_QUEUE_READS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.REQUEST_QUEUE_READS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "21d54d4d-515b-4fa7-b099-c8b193fc4436",
              "name": "=REQUEST_QUEUE_TIMED_STORAGE_GBYTE_HOURS",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.REQUEST_QUEUE_TIMED_STORAGE_GBYTE_HOURS.amountAfterVolumeDiscountUsd }}"
            },
            {
              "id": "68168fc6-0052-4fa6-b631-942d972af340",
              "name": "REQUEST_QUEUE_WRITES",
              "type": "number",
              "value": "={{ $('Get Usage Metrics').item.json.data.monthlyServiceUsage.REQUEST_QUEUE_WRITES.amountAfterVolumeDiscountUsd }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2dfecbb2-474e-445e-b9d1-22b8f5b3f205",
      "name": "Simplify Usage Metrics",
      "type": "n8n-nodes-base.set",
      "position": [
        2200,
        720
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/users/me/limits",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "id": "6a8fa9ad-0d63-4998-a43c-57091a7a19f7",
      "name": "Get Usage Limits",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2000,
        720
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "name": "Apfiy_Usage_Metrics",
        "description": "Returns current month's usage metrics.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "urls": "null",
            "query": "null",
            "operation": "=usage_report"
          },
          "schema": [
            {
              "id": "operation",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "operation",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "query",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "query",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "urls",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "urls",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "aeaf7c50-2288-4b04-a959-eaceaa7a7916",
      "name": "Usage Report",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        800,
        620
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/users/me/usage/monthly",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "id": "ae5d4a0c-4a81-4a89-b964-fe12d2a3e428",
      "name": "Get Usage Metrics",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1800,
        720
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "path": "b975bb25-be7c-49fb-8cd2-8e135d91ed4e"
      },
      "id": "cf01153f-ed09-4d2e-827a-f2c9e6682c03",
      "name": "Apify Youtube MCP Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        640,
        280
      ],
      "webhookId": "b975bb25-be7c-49fb-8cd2-8e135d91ed4e",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Este flujo de trabajo de n8n demuestra cómo construir un servidor MCP sencillo para buscar vídeos en YouTube y descargar sus transcripciones con fines de investigación.\nCómo funciona\nSe utiliza un desencadenador de servidor MCP, conectado a tres herramientas de flujo de trabajo personalizadas: Búsqueda en YouTube, Transcripciones de YouTube e Informes de Uso.\n\nAmbas herramientas de YouTube emplean un servicio externo de scraping llamado APIFY.com. Es mi opción preferida porque ofrece una interfaz mucho más sencilla y no tiene límites de frecuencia.\n\nLa herramienta de búsqueda en YouTube obtiene 10 resultados en función de la consulta del usuario.\n\nLa herramienta de transcripciones descarga los subtítulos de una o más URL proporcionadas.\n\nLos informes de uso muestran el gasto mensual y los límites de tu cuenta de APIFY.com, como una forma de controlar el estado de tu cuenta.\n\nCómo usarlo\nEste servidor MCP para YouTube en Apify permite a cualquier cliente MCP compatible investigar vídeos de YouTube sobre cualquier tema deseado. Sin embargo, es necesario disponer de una cuenta de Apify para poder conectarse y utilizar el servicio.\n\nConecta tu cliente MCP siguiendo las instrucciones de n8n aquí: https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop\n\nTambién puedes conectar cualquier agente de IA de n8n con la herramienta cliente MCP.\n\nPrueba las siguientes consultas en tu cliente MCP:\n\n\"¿Qué es MCP?\"\n\n\"¿Cómo puedo usar MCP en n8n?\"\n\n\"¿Cómo puedo usar el servidor MCP oficial de Apify?\"\n\nRequisitos\nAPIFY.com para hacer scraping de YouTube. Es un servicio de pago, pero tiene una modalidad gratuita de 5 $ que es más que suficiente para este ejemplo.\n\nCliente o agente MCP, como Claude Desktop - https://claude.ai/download\n\nPersonalización de este flujo de trabajo\nAñade todos los actores de APIFY.com que necesites para tu caso de uso o para tus usuarios. Considera utilizar el servidor MCP oficial de Apify, que ofrece acceso a más de 4000 herramientas disponibles.",
        "height": 1100,
        "width": 480
      },
      "id": "10954a5e-7d27-464a-aba6-5d878b232184",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        -240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "[![](https://d2gdx5nv84sdx2.cloudfront.net/uploads/35gj8m4w/marketing_asset/banner/13734/Large_rectangle_336x280_Light__1_.png)](https://www.apify.com?fpr=414q6)",
        "height": 240,
        "width": 280
      },
      "id": "dc2fb390-2708-48b0-a6c4-a177a3775167",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1200,
        -140
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Operation": {
      "main": [
        [
          {
            "node": "Apify Youtube Search",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Apify Youtube Transcripts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Usage Metrics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Usage Report": {
      "ai_tool": [
        [
          {
            "node": "Apify Youtube MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Search": {
      "ai_tool": [
        [
          {
            "node": "Apify Youtube MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Usage Limits": {
      "main": [
        [
          {
            "node": "Simplify Usage Metrics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Usage Metrics": {
      "main": [
        [
          {
            "node": "Get Usage Limits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Youtube Transcripts": {
      "ai_tool": [
        [
          {
            "node": "Apify Youtube MCP Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Apify Youtube Search": {
      "main": [
        [
          {
            "node": "Simplify Search Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simplify Search Results": {
      "main": [
        [
          {
            "node": "Aggregate Search Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify Youtube Transcripts": {
      "main": [
        [
          {
            "node": "Simplify Transcript Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simplify Transcript Results": {
      "main": [
        [
          {
            "node": "Aggregate Transcript Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "0c7d0e4d-f442-4b3b-b55b-ff2b68e8a8b5",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-04-29T17:30:10.868Z",
      "updatedAt": "2025-04-29T17:30:10.868Z",
      "id": "e3fgSwFGMK2mFM4N",
      "name": "Youtube"
    },
    {
      "createdAt": "2025-04-23T20:54:17.048Z",
      "updatedAt": "2025-04-23T20:54:17.048Z",
      "id": "YX2hAUIknxeDH192",
      "name": "MCP"
    }
  ]
}