{
  "createdAt": "2025-04-29T17:05:21.845Z",
  "updatedAt": "2025-05-02T18:04:10.712Z",
  "id": "oVpjwbSn2rg25lpm",
  "name": "Escritura AutomÃ¡tica de Contenidos SEO con BigQuery, OpenAI y Google Docs",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "formTitle": "Form",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Link",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -160,
        380
      ],
      "id": "dd4dbe64-11fe-4d9d-9711-63211c3d2008",
      "name": "On form submission",
      "webhookId": "c0791596-ada8-407c-9669-f54396d88940"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://crawl4ai:11235/crawl",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "urls",
              "value": "={{ $json.Link }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        60,
        160
      ],
      "id": "fa567bbf-1c24-4f99-b3b0-11375c61489a",
      "name": "get_article_content"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        260,
        160
      ],
      "id": "fda642b6-1d11-48ff-821d-e4ecc6796c3a",
      "name": "5_sec",
      "webhookId": "ac0bb2e9-a1f8-47df-823b-074a0e825f6c"
    },
    {
      "parameters": {
        "url": "=http://crawl4ai:11235/task/{{ $json.task_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        400,
        160
      ],
      "id": "7e8d5c4a-8f1e-4757-a4c2-72130a356bdb",
      "name": "get_status"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f42941b7-46c6-44f9-95d6-80065c27c3a9",
              "leftValue": "={{ $json.status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        540,
        160
      ],
      "id": "5b5ad805-7807-4f8d-a969-709e615cbbd1",
      "name": "is_completed"
    },
    {
      "parameters": {
        "html": "={{ $json.result.cleaned_html }}",
        "destinationKey": "markdown",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        880,
        80
      ],
      "id": "a3506031-5286-4422-88ed-a4bb98ccb64a",
      "name": "Markdown"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9177b0ac-024c-4088-a1b4-9254a53244e0",
              "name": "result.url",
              "value": "={{ $json.result.url }}",
              "type": "string"
            },
            {
              "id": "bb4b7ad9-dc32-40d5-93d7-51582c64d99f",
              "name": "result.metadata.title",
              "value": "={{ $json.result.metadata.title }}",
              "type": "string"
            },
            {
              "id": "64dfd766-9b2e-4349-8f4f-8771202cb0d4",
              "name": "result.cleaned_html",
              "value": "={{ $json.result.cleaned_html }}",
              "type": "string"
            },
            {
              "id": "a74a89ab-aa6e-4ff5-934a-c6176702c127",
              "name": "result.metadata.description",
              "value": "={{ $json.result.metadata.description }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        700,
        80
      ],
      "id": "c7eedad4-7c9a-4bb0-bb21-0d79ac91fe4b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "searchMethod": "query",
        "queryString": "={{ \"name=\" + \"'\"+$json.Link.split('/').filter(Boolean).pop()+\"'\" }}",
        "limit": 1,
        "filter": {
          "includeTrashed": "={{ false }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        60,
        600
      ],
      "id": "ad5809aa-523a-46dd-9dd8-4a92dc757554",
      "name": "Google Drive",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bf20030a-7234-4e88-bcc9-cb815ac8dcd9",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        240,
        600
      ],
      "id": "88a56f31-550f-4583-9744-eabb42b5c7cc",
      "name": "if_sheet_exists"
    },
    {
      "parameters": {
        "resource": "spreadsheet",
        "title": "={{ $('On form submission').item.json.Link.split('/').filter(Boolean).pop()  }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        680
      ],
      "id": "c3a0b100-eaf6-42ae-a2cb-cfa9c6a520cb",
      "name": "create_new_spreadsheet",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "projectId": {
          "__rl": true,
          "value": "automations-451008",
          "mode": "list",
          "cachedResultName": "automations",
          "cachedResultUrl": "https://console.cloud.google.com/bigquery?project=automations-451008"
        },
        "sqlQuery": "DECLARE target_url STRING DEFAULT '{{ $('On form submission').item.json.Link }}';\nDECLARE current_period_start DATE DEFAULT DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);\nDECLARE previous_period_start DATE DEFAULT DATE_SUB(current_period_start, INTERVAL 30 DAY);\n\nWITH \n-- Current period query performance (last 30 days)\ncurrent_period AS (\n  SELECT\n    query,\n    SUM(clicks) AS current_clicks,\n    SUM(impressions) AS current_impressions,\n    SAFE_DIVIDE(SUM(clicks), SUM(impressions)) AS current_ctr,\n    SAFE_DIVIDE(SUM(sum_position), SUM(impressions)) AS current_avg_position\n  FROM `your_bigquery_table`\n  WHERE \n    url = target_url\n    AND data_date >= current_period_start\n    AND data_date < CURRENT_DATE()\n    AND is_anonymized_query = False\n  GROUP BY query\n),\n\n-- Previous period query performance (30-60 days ago)\nprevious_period AS (\n  SELECT\n    query,\n    SUM(clicks) AS previous_clicks,\n    SUM(impressions) AS previous_impressions,\n    SAFE_DIVIDE(SUM(clicks), SUM(impressions)) AS previous_ctr,\n    SAFE_DIVIDE(SUM(sum_position), SUM(impressions)) AS previous_avg_position\n  FROM `your_bigquery_table`\n  WHERE \n    url = target_url\n    AND data_date >= previous_period_start\n    AND data_date < current_period_start\n    AND is_anonymized_query = False\n  GROUP BY query\n),\n\n-- Combined data with differences\ncombined_data AS (\n  SELECT\n    COALESCE(c.query, p.query) AS query,\n    \n    -- Current period metrics\n    IFNULL(c.current_clicks, 0) AS current_clicks,\n    IFNULL(p.previous_clicks, 0) AS previous_clicks,\n    \n    IFNULL(c.current_impressions, 0) AS current_impressions,\n    IFNULL(p.previous_impressions, 0) AS previous_impressions,\n    \n    IFNULL(c.current_ctr, 0) AS current_ctr,\n    IFNULL(p.previous_ctr, 0) AS previous_ctr,\n    \n    IFNULL(c.current_avg_position, 0) AS current_avg_position,\n    IFNULL(p.previous_avg_position, 0) AS previous_avg_position,\n    \n    -- Absolute differences\n    IFNULL(c.current_clicks, 0) - IFNULL(p.previous_clicks, 0) AS clicks_diff,\n    IFNULL(c.current_impressions, 0) - IFNULL(p.previous_impressions, 0) AS impressions_diff,\n    IFNULL(c.current_ctr, 0) - IFNULL(p.previous_ctr, 0) AS ctr_diff,\n    IFNULL(p.previous_avg_position, 0) - IFNULL(c.current_avg_position, 0) AS position_diff,\n    \n    -- Percentage differences\n    CASE \n      WHEN IFNULL(p.previous_clicks, 0) = 0 AND IFNULL(c.current_clicks, 0) > 0 THEN 100\n      WHEN IFNULL(p.previous_clicks, 0) = 0 THEN 0\n      ELSE ROUND((IFNULL(c.current_clicks, 0) - IFNULL(p.previous_clicks, 0)) / IFNULL(p.previous_clicks, 0) * 100, 2)\n    END AS clicks_diff_pct,\n    \n    CASE \n      WHEN IFNULL(p.previous_impressions, 0) = 0 AND IFNULL(c.current_impressions, 0) > 0 THEN 100\n      WHEN IFNULL(p.previous_impressions, 0) = 0 THEN 0\n      ELSE ROUND((IFNULL(c.current_impressions, 0) - IFNULL(p.previous_impressions, 0)) / IFNULL(p.previous_impressions, 0) * 100, 2)\n    END AS impressions_diff_pct,\n    \n    CASE \n      WHEN IFNULL(p.previous_ctr, 0) = 0 AND IFNULL(c.current_ctr, 0) > 0 THEN 100\n      WHEN IFNULL(p.previous_ctr, 0) = 0 THEN 0\n      ELSE ROUND((IFNULL(c.current_ctr, 0) - IFNULL(p.previous_ctr, 0)) / IFNULL(p.previous_ctr, 0) * 100, 2)\n    END AS ctr_diff_pct\n  FROM current_period c\n  FULL OUTER JOIN previous_period p ON c.query = p.query\n)\n\n-- Main query with categorization\nSELECT\n  query,\n  \n  -- Paired metrics (current next to previous)\n  current_clicks,\n  previous_clicks,\n  clicks_diff,\n  clicks_diff_pct,\n  \n  current_impressions,\n  previous_impressions,\n  impressions_diff,\n  impressions_diff_pct,\n  \n  current_ctr,\n  previous_ctr,\n  ctr_diff,\n  ctr_diff_pct,\n  \n  current_avg_position,\n  previous_avg_position,\n  position_diff,\n  \n  -- Categorization\n  CASE\n    WHEN clicks_diff > 0 THEN 'Gaining'\n    WHEN clicks_diff < 0 THEN 'Declining'\n    ELSE 'Stable'\n  END AS trend_category\n\nFROM combined_data\nWHERE \n  -- Filter to include only keywords with meaningful data\n  (current_clicks > 0 OR previous_clicks > 0 OR current_impressions > 10 OR previous_impressions > 10)\nORDER BY \n  -- Default ordering by absolute click difference (biggest gains/losses first)\n  ABS(clicks_diff) DESC,\n  current_impressions DESC",
        "options": {}
      },
      "type": "n8n-nodes-base.googleBigQuery",
      "typeVersion": 2.1,
      "position": [
        880,
        600
      ],
      "id": "93689600-5ba9-4f12-8d5d-da4a676ea3c3",
      "name": "get_article_performance"
    },
    {
      "parameters": {
        "operation": "create",
        "documentId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "title": "={{$now.format('yyyy-MM-dd')}}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        520
      ],
      "id": "96a9ae52-3391-41ab-81a6-b7689ba9fc84",
      "name": "add_sheet_0",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "create",
        "documentId": {
          "__rl": true,
          "value": "={{ $json.spreadsheetId }}",
          "mode": "id"
        },
        "title": "={{ $now.format('yyyy-MM-dd')}}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        580,
        680
      ],
      "id": "ebceb2e0-f062-4ec9-89bb-9e705ac33d26",
      "name": "add_sheet_1",
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        740,
        600
      ],
      "id": "a554325e-0167-43d1-a571-026fbb2db832",
      "name": "Merge",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "={{ $('Merge').item.json.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "={{ $now.format('yyyy-MM-dd') }}",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "current_clicks",
              "displayName": "current_clicks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "previous_clicks",
              "displayName": "previous_clicks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "clicks_diff",
              "displayName": "clicks_diff",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "clicks_diff_pct",
              "displayName": "clicks_diff_pct",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "current_impressions",
              "displayName": "current_impressions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "previous_impressions",
              "displayName": "previous_impressions",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "impressions_diff",
              "displayName": "impressions_diff",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "impressions_diff_pct",
              "displayName": "impressions_diff_pct",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "current_ctr",
              "displayName": "current_ctr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "previous_ctr",
              "displayName": "previous_ctr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ctr_diff",
              "displayName": "ctr_diff",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ctr_diff_pct",
              "displayName": "ctr_diff_pct",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "current_avg_position",
              "displayName": "current_avg_position",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "previous_avg_position",
              "displayName": "previous_avg_position",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "position_diff",
              "displayName": "position_diff",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "trend_category",
              "displayName": "trend_category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1040,
        600
      ],
      "id": "50dba265-cd84-4705-9ccb-44ce189ced57",
      "name": "insert_performance"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1240,
        160
      ],
      "id": "8966a2b5-5cdb-46a2-bd92-cadb50f2a2c9",
      "name": "Merge1",
      "executeOnce": false
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "performance",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1060,
        260
      ],
      "id": "7218635c-c4c0-4efe-9782-813b75a7b7d0",
      "name": "set_key"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Du bist Copywriter mit einem vielseitigen Skillset an SEO-FÃ¤higkeiten. Du bist auf die datengetriebene Optimierung spezialisiert und verbesserst bestehende Artikel auf Basis von realen Traffic-Daten. Deine Daten stammen aus der Google Search Console und zeigen, wie gut Keywords performen. Du stÃ¼tzt dich ausschlieÃlich auf die zugrundeliegenden Daten und erfindest keine falschen Informationen. Dein Ziel ist es immer, den Artikel datengetrieben zu verbessern. Des Weiteren bist du HTML-Experte und gibst deine Antworten ausschlieÃlich als HTML-formatiert zurÃ¼ck. Wir benÃ¶tigen kein DOCTYPE, meta oder title tag. AusschlieÃlich HTML der den Inhalt strukturiert darstellt.",
              "role": "system"
            },
            {
              "content": "=Analysiere den vorhandenen Artikel: <{{ $json.content }}> im Detail und verstehe den Inhalt sowie die Suchintention, die dieser Artikel befriedigen soll. AnschlieÃend analysierst du ALLE Keywords aus der Google Search Console. Diese Keywords zeigen dir, wie gut der Artikel fÃ¼r bestimmte Suchanfragen performt.\nDie Performance-Daten sind wie folgt:\n\"\"\n{{ JSON.stringify($('Merge1').all()[1].json.performance) }}\n\"\"\nFÃ¼hre folgende Optimierungen durch:\n    1. Analysiere den bestehenden Artikelinhalt auf Struktur, Lesbarkeit und SEO-Relevanz.\n    2. Identifiziere Optimierungspotenziale im Artikel basierend auf den analysierten Daten.\n    3. Entwickle neue VorschlÃ¤ge fÃ¼r den Titel und die Meta-Beschreibung. \n\t- Die Titel dÃ¼rften nicht mehr wie 60 Zeichen lang sein.\n\t- Die Meta-Beschreibung muss relevante Keywords aus den Performance-Daten enthalten.\n    4. Erstelle optimierte Textpassagen, die die relevanten Keywords aus der Google Search Console natÃ¼rlich integrieren.\n \t- Gib an, aus welchem Kapitel die Textpassage stammen, so dass man diese schnell erkennen und optimieren kann.\n \t- Erstelle mindestens fÃ¼r jeden Paragraphen eine optimierte Textpassage.\n\t- Gib an, aus welchem Kapitel die Textpassage stammen, so dass man diese schnell erkennen und optimieren kann.\n\t- (Die Textpassagen mÃ¼ssen so aufgebaut sein, dass ich diese schnell finden und ersetzen kann)\n    5. Erstelle neue Textpassagen mit Keywords aus den Google Search Console Daten, die man nicht im vorherigen Schritt einfÃ¼gen konnte.\n      - Verwende hier als Ãberschrift \"Neue Textpassagen\".\n    6. Erstelle eine HTML Tabelle die deine Auswahl der selektieren Keywords aus der Google Search Console darstellt.\n\nFormatiere deine Ausgabe wie folgt und vermeide Fehler:\n    - Ein kurzer Analysebericht des aktuellen Artikelinhalts.\n    - Pro Verbesserungsvorschlag einmal die originale Passage und direkt daruntere die SEO-freundliche ErgÃ¤nzung.\n    - 5 VorschlÃ¤ge fÃ¼r optimierte Titel.\n    - 5 VorschlÃ¤ge fÃ¼r optimierte Meta-Beschreibungen.\n    - Eine Liste von Ã¼berarbeiteten Textpassagen, die die identifizierten Keywords und Phrasen natÃ¼rlich integrieren. Bearbeite mindestens\n     5 Textpassagen. Wenn mÃ¶glich, dann auch mehr, so dass der Text die Keywords aus der Google Search Console beinhaltet.\n    - HTML Tabelle mit selektieren Keywords aus der Google Search Console.\n    Alles in HTML formatiert.\nWir benÃ¶tigen kein DOCTYPE, meta oder title tag. AusschlieÃlich HTML der den Inhalt strukturiert darstellt."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1480,
        160
      ],
      "id": "1b3e6f95-3581-4437-842b-1068ce5a0266",
      "name": "create_report",
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6c07931f-d135-44cb-a9f5-d0e80887a0b4",
              "name": "url",
              "value": "={{ $json.result.url }}",
              "type": "string"
            },
            {
              "id": "d3223ba3-1e08-47b2-9265-f3fb178a49ee",
              "name": "title",
              "value": "={{ $json.result.metadata.title }}",
              "type": "string"
            },
            {
              "id": "13da4adc-a125-4410-b2ca-c0c239b939ab",
              "name": "description",
              "value": "={{ $json.result.metadata.description }}",
              "type": "string"
            },
            {
              "id": "03d09f45-3ece-4da2-953b-fdbe54cd2896",
              "name": "content",
              "value": "={{ $json.markdown }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        80
      ],
      "id": "a60bb04e-cff3-4f0f-9631-96dc34dc1329",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "654e6696-7705-4021-87df-1edf19bbe439",
              "name": "message.content",
              "value": "={{ $json.message.content}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1800,
        160
      ],
      "id": "0f4db10c-914f-4f1d-8ac4-542caa6aef03",
      "name": "get_clean_html",
      "notes": ".replace('html', '').replaceAll(\"```\", '').replaceAll(\"\\n\", \"\") "
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "test.html",
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2120,
        160
      ],
      "id": "4f43638f-a096-41a0-b263-d1bcc5a5cb26",
      "name": "convert_to_html_file"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      base64: Buffer.from($input.all()[0].json.message.content).toString('base64'),\n      mimetype: \"text/html\"\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1960,
        160
      ],
      "id": "1646c9e8-4870-4983-89d0-3d46649e3a63",
      "name": "convert_to_base64"
    },
    {
      "parameters": {
        "name": "test123",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2280,
        160
      ],
      "id": "0e0e4236-ef5b-4bf7-8d4b-721f1678efba",
      "name": "save_report"
    },
    {
      "parameters": {
        "content": "# Crawl Article",
        "height": 420,
        "width": 1420
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        -20
      ],
      "id": "176b4103-cd1f-423b-9dcd-b037d85381bd",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Generate Optimized Report",
        "height": 420,
        "width": 1040
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1440,
        0
      ],
      "id": "871d0922-0035-44cc-8bb4-a0d1f76cec7c",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Generate and Save Performance Report",
        "height": 420,
        "width": 2480
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        440
      ],
      "id": "b27888e3-cec2-43ad-850d-7c5e8d798b90",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Este flujo automatiza la optimizaciÃ³n continua de artÃ­culos para SEO, eliminando tareas manuales como el anÃ¡lisis de consultas, la comparaciÃ³n de rendimiento y la reescritura de contenido. Utiliza inteligencia artificial y datos de BigQuery para generar recomendaciones personalizadas que aumenten el trÃ¡fico orgÃ¡nico.\n\nâï¸ Funciones clave del flujo:\nAnÃ¡lisis de consultas (Query Analysis): extrae palabras clave mal aprovechadas mediante una consulta SQL en BigQuery.\n\nInforme de rendimiento: genera un informe comparativo entre dos periodos, similar a Google Search Console, y lo guarda en Google Sheets.\n\nArtÃ­culo optimizado: crea un documento de Google Docs con recomendaciones de mejora para tÃ­tulo, frases clave, descripciÃ³n meta, etc.\n\nRecomendaciones con IA: integra OpenAI (como GPT-4) para generar textos optimizados automÃ¡ticamente.\n\nAnÃ¡lisis de URLs: utiliza Crawl4AI para analizar contenido de cualquier CMS y obtener datos contextuales para la mejora del contenido.\n\n",
        "height": 420,
        "width": 880
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -360,
        -480
      ],
      "id": "03ebd7c8-ebbc-4afc-8fe3-94ecbe31692a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "4. Configure Dependencies & Credentials\n\n\n\n\n\nGo to the Google Cloud Console.\n\n\n\nCreate a new project or select an existing one and create a credential.\n\n\n\n\n\nGoogle Sheets: Enable the Google Spreadsheets API and add the credential in n8n.\n\n\n\nGoogle Drive: Enable the Google Drive API and add the credential in n8n.\n\n\n\nOpenAI: Sign up for an OpenAI account and create the credential in n8n.\n\n\n\nCrawl4ai: Install Crawl4AI and selfhost it or use an external API like Firecrawl.\n\n\n\n\n\nCrawl4AI Documentation\n\n\n\nFirecrawl Documentation\n\nIn case you decide to use Firecrawl, then you need to update the corresponding nodes.",
        "height": 400,
        "width": 760
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        -560
      ],
      "id": "7653e0a4-13fb-496c-a1a1-eaec213858c1",
      "name": "Sticky Note4"
    }
  ],
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "get_article_content",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_article_content": {
      "main": [
        [
          {
            "node": "5_sec",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5_sec": {
      "main": [
        [
          {
            "node": "get_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_status": {
      "main": [
        [
          {
            "node": "is_completed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is_completed": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "5_sec",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "if_sheet_exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if_sheet_exists": {
      "main": [
        [
          {
            "node": "add_sheet_0",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "create_new_spreadsheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_new_spreadsheet": {
      "main": [
        [
          {
            "node": "add_sheet_1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_article_performance": {
      "main": [
        [
          {
            "node": "insert_performance",
            "type": "main",
            "index": 0
          },
          {
            "node": "set_key",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "add_sheet_1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "add_sheet_0": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "get_article_performance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "create_report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_key": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "create_report": {
      "main": [
        [
          {
            "node": "get_clean_html",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_clean_html": {
      "main": [
        [
          {
            "node": "convert_to_base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert_to_base64": {
      "main": [
        [
          {
            "node": "convert_to_html_file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert_to_html_file": {
      "main": [
        [
          {
            "node": "save_report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "31cab7e7-286c-4468-bb60-244efda98be7",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-04-29T11:12:24.236Z",
      "updatedAt": "2025-04-29T11:12:24.236Z",
      "id": "vlD9ysZ6ePOldrKn",
      "name": "SEO"
    }
  ]
}