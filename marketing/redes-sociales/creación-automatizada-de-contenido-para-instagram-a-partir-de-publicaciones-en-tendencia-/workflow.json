{
  "createdAt": "2025-04-29T19:45:18.870Z",
  "updatedAt": "2025-05-12T13:30:39.800Z",
  "id": "K7liPNc0xLBvX5lQ",
  "name": "Creación Automatizada de Contenido para Instagram a partir de Publicaciones en Tendencia",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "0304efee-33b2-499e-bad1-9238c1fc2999",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.status_code }}",
              "rightValue": "FINISHED"
            }
          ]
        },
        "options": {}
      },
      "id": "370cbff3-4e11-4b96-ab1c-e95cb19f79e1",
      "name": "If media status is finished",
      "type": "n8n-nodes-base.if",
      "position": [
        4600,
        1200
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "0304efee-33b2-499e-bad1-9238c1fc2999",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.status_code }}",
              "rightValue": "PUBLISHED"
            }
          ]
        },
        "options": {}
      },
      "id": "f1ca091b-a0f2-49a3-8a35-cbeb7c49e95d",
      "name": "If media status is finished1",
      "type": "n8n-nodes-base.if",
      "position": [
        5180,
        1200
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Params').item.json.telegram_chat_id }}",
        "text": "Video upload edilmeden önce bir problem oldu",
        "additionalFields": {}
      },
      "id": "0a9884bd-65e3-4055-ad62-722abfa2b30c",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        4760,
        1380
      ],
      "typeVersion": 1.2,
      "webhookId": "bf4f161c-2d95-49f1-b51e-5fdae58961d4"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Params').item.json.telegram_chat_id }}",
        "text": "Instagram Content is shared",
        "additionalFields": {}
      },
      "id": "f6e15bf4-93c9-4a52-85e1-425f4fd6c06b",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        5340,
        1040
      ],
      "typeVersion": 1.2,
      "webhookId": "27caa694-99f9-4aad-a19d-9bc741c48839"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Params').item.json.telegram_chat_id }}",
        "text": "There was a problem when execution a upload content to instagram",
        "additionalFields": {}
      },
      "id": "4d261402-870f-4bee-ab0f-59f0b0439b4f",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "position": [
        5340,
        1380
      ],
      "typeVersion": 1.2,
      "webhookId": "2ec89f3a-a96f-42e7-846f-053ca377a345"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3d74b74f-ef53-4468-86bc-d39dab0b3b88",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        2180,
        1160
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "5 13,19 * * *"
            }
          ]
        }
      },
      "id": "33a02abf-fe16-4f3c-b570-1be132cfee27",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        100,
        1240
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d18cdca7-d301-4c70-a4d0-8d6e7ecfc2d1",
              "name": "telegram_chat_id",
              "type": "string",
              "value": ""
            }
          ]
        },
        "options": {}
      },
      "id": "5dc9bc6c-9a73-4521-a64d-8e134387f06f",
      "name": "Telegram Params",
      "type": "n8n-nodes-base.set",
      "position": [
        860,
        1240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1e380c14-e908-4eeb-90e0-957a422829d0",
              "name": "instagram_business_account_id",
              "type": "string",
              "value": ""
            }
          ]
        },
        "options": {}
      },
      "id": "8d681890-1fd2-4b64-9df5-e710809e7fb0",
      "name": "Instagram params",
      "type": "n8n-nodes-base.set",
      "position": [
        620,
        1240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## All Credentials You Need\n** Instagram Business Account Id\n** Telegram Chat Id\n** Rapid Api Key\n** Replicate Token",
        "height": 600,
        "width": 1000,
        "color": 4
      },
      "id": "411ee2fb-dddb-4943-bf6d-dbc10dc5ac3c",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        320,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "48a33ec7-2b4f-496a-ad77-e4d5f1907ee4",
              "name": "x-rapid-api-key",
              "type": "string",
              "value": ""
            }
          ]
        },
        "options": {}
      },
      "id": "abc8fffe-3900-4035-ab40-7a9228ea13fe",
      "name": "Rapid Api params",
      "type": "n8n-nodes-base.set",
      "position": [
        1100,
        1240
      ],
      "notesInFlow": false,
      "typeVersion": 3.4,
      "notes": "test"
    },
    {
      "parameters": {
        "jsCode": "const filteredData = $input.first().json.data.items.filter(item=> !item.is_video)\nreturn filteredData.map((item)=>{\n return {\n id: item.id,\n prompt: item.caption.text,\n content_code: item.code,\n thumbnail_url: item.thumbnail_url,\n tag: $input.first().json.data.additional_data.name\n }\n}) \n\n"
      },
      "id": "12e3978d-df27-45d1-806a-b726bb2bdd71",
      "name": "filter the image content",
      "type": "n8n-nodes-base.code",
      "position": [
        1700,
        1320
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://instagram-scraper-api2.p.rapidapi.com/v1/hashtag",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "hashtag",
              "value": "blender3d"
            },
            {
              "name": "feed_type",
              "value": "top"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "instagram-scraper-api2.p.rapidapi.com"
            },
            {
              "name": "x-rapidapi-key",
              "value": "={{ $json['x-rapid-api-key'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "16e43fee-c584-47df-8f51-a4c708a3dd6d",
      "name": "get top trends on instagram #blender3d",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1460,
        1120
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "https://instagram-scraper-api2.p.rapidapi.com/v1/hashtag",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "hashtag",
              "value": "isometric"
            },
            {
              "name": "feed_type",
              "value": "top"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "instagram-scraper-api2.p.rapidapi.com"
            },
            {
              "name": "x-rapidapi-key",
              "value": "={{ $json['x-rapid-api-key'] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3458de76-0785-4bd7-945d-34693e5d1fc1",
      "name": "get top trends on instagram #isometric",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1460,
        1320
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {},
      "id": "5cdbeb10-af89-4a92-a214-2deab6423540",
      "name": "merge the array content",
      "type": "n8n-nodes-base.merge",
      "position": [
        1900,
        1220
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "content": "## Schedule Your Time To Post\n",
        "height": 600,
        "width": 280,
        "color": 3
      },
      "id": "e65f17c0-448f-4e9a-bbd8-a8ee969bd099",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Guide \n** [Guide](https://docs.matillion.com/metl/docs/6957316//) of getting of Instagram Business Account Id ",
        "height": 300,
        "width": 180,
        "color": 5
      },
      "id": "ccd0a4a5-46f4-4f23-9b82-09e3fb161287",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        580,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Guide \n** [Guide](https://rapidapi.com/i-yqerddkq0t/api/telegram92/tutorials/how-to-get-the-id-of-a-telegram-channel,-chat,-user-or-bot%3F) of Getting of Telegram Chat Id ",
        "height": 300,
        "width": 180,
        "color": 5
      },
      "id": "1c4e0fdf-7604-4be2-b6c5-b39ad09da7bd",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Guide \n** [Guide](https://docs.rapidapi.com/docs/keys-and-key-rotation) of Getting of Rapid Api Key ",
        "height": 300,
        "width": 180,
        "color": 5
      },
      "id": "44e0625f-1b93-4db7-89d4-adadb44179a3",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1060,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Warning\n**Don't forgot the create bot and send a message to bot first",
        "height": 120,
        "width": 180,
        "color": 7
      },
      "id": "52e1608c-ee32-4ba1-8942-15aafcd3d352",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Getting Top Trend Posts On Instagram\n** Change the topic you want to get on http request",
        "height": 600,
        "width": 660
      },
      "id": "5303e7f5-f4db-4a62-b11e-29677b6cd909",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1360,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "top_trends",
          "cachedResultName": "top_trends"
        },
        "where": {
          "values": [
            {
              "column": "code",
              "value": "={{$json.content_code}}"
            }
          ]
        },
        "options": {}
      },
      "id": "fc615907-2d09-4a08-ab40-43c998572387",
      "name": "Check Data on Database Is Exist",
      "type": "n8n-nodes-base.postgres",
      "position": [
        2420,
        1160
      ],
      "typeVersion": 2.5,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "NR0jJMop66avXtir",
          "name": "Postgres account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "9dc20983-ae4d-40db-b969-7d43fa8b0c3e",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ !$json.isEmpty() }}",
              "rightValue": "we"
            },
            {
              "id": "0e1b9264-be56-4d0c-a83e-d9ca0b05b265",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "",
              "rightValue": ""
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "1707eb61-9dd5-4a9e-a2ee-ebb81cf6cd8e",
      "name": "If Data is Exist",
      "type": "n8n-nodes-base.if",
      "position": [
        2640,
        1180
      ],
      "executeOnce": false,
      "typeVersion": 2.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "## Looping Data And Checking For Is Exist On Database\n**We are checking until find a data we did not insert because we don't want to create content about in same content",
        "height": 600,
        "width": 1060
      },
      "id": "4a800e38-9fbf-4b88-88da-a639a71f46e5",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2060,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Params').item.json.telegram_chat_id}}",
        "text": "There was a problem execution a postgresql content",
        "additionalFields": {}
      },
      "id": "f9c0b20f-e052-4923-a13b-bfd4ccdd6d5b",
      "name": "send error message to telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2180,
        1380
      ],
      "typeVersion": 1.2,
      "webhookId": "33e56a69-054b-4a07-80ff-e8c6efd29f71",
      "credentials": {
        "telegramApi": {
          "id": "tz1fYz1snqttWLEg",
          "name": "Telegram Mi Asistente Personal"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "top_trends",
          "cachedResultName": "top_trends"
        },
        "columns": {
          "value": {
            "tag": "={{$('Loop Over Items').item.json.tag}}",
            "code": "={{$('Loop Over Items').item.json.content_code}}",
            "prompt": "={{$('Loop Over Items').item.json.prompt}}",
            "isposted": false,
            "thumbnail_url": "={{$('Loop Over Items').item.json.thumbnail_url}}"
          },
          "schema": [
            {
              "id": "id",
              "type": "number",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "id",
              "defaultMatch": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "prompt",
              "type": "string",
              "display": true,
              "required": true,
              "displayName": "prompt",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "isposted",
              "type": "boolean",
              "display": true,
              "required": false,
              "displayName": "isposted",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "createdat",
              "type": "dateTime",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "createdat",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "updatedat",
              "type": "dateTime",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "updatedat",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "deletedat",
              "type": "dateTime",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "deletedat",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "code",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "code",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "tag",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "tag",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "thumbnail_url",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "thumbnail_url",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "id"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "e0e1c9c7-7c06-4b72-9683-071ee3d9d64f",
      "name": "insert data on db",
      "type": "n8n-nodes-base.postgres",
      "position": [
        2920,
        1180
      ],
      "typeVersion": 2.5,
      "credentials": {
        "postgres": {
          "id": "NR0jJMop66avXtir",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Create a clear and concise description of the object in the image, focusing on its physical and general features. Avoid detailed environmental aspects like background, lighting, or colors. Describe the shape, texture, size, and any unique characteristics of the object. Mention any notable features that make the object stand out, such as its surface details, materials, and design. The description should be focused on the object itself, not its surroundings.\n\nFor example, describe the following image:\n",
        "imageUrls": "={{ $('Loop Over Items').item.json.thumbnail_url }}",
        "options": {}
      },
      "id": "cb612fe5-a043-4fe9-b545-fc643cd8b1c7",
      "name": "Analyze Image and give the content",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        3260,
        1180
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=\nSummarize the following content description into a short, engaging Instagram caption under 150 words. The caption should focus on the content of the image, not the app. Keep it appealing to social media users, and highlight the visual details of the image. Include hashtags relevant to 3D modeling and design, such as #Blender3D, #3DArt, #DigitalArt, #3DModeling, and #ArtCommunity. Ensure the tone is friendly and inviting.\n\n\nContent description to summarize:\n{{ $json.content }}\n\nMake sure to craft the caption around the content's features, such as the color contrast, reflective surface, and artistic nature of the image.\n\n"
            }
          ]
        },
        "options": {}
      },
      "id": "17b2ccf7-217e-4b7b-b13f-76a167dae3a3",
      "name": "Analyze Content And Generate Instagram Caption",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        3460,
        1180
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "lid4f6Emqj7mGAPQ",
          "name": "OpenAi API Averis"
        }
      }
    },
    {
      "parameters": {
        "content": "## Analyze Post Content\n** We are analyzing the image\n** We are generating a instagram caption by content\n** Then we are generating the image",
        "height": 600,
        "width": 860,
        "color": 4
      },
      "id": "297e4bb4-2b18-4f5f-8155-3ae4c085361e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3160,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "={{ $('Instagram params').item.json.instagram_business_account_id }}",
        "edge": "media",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "image_url",
                "value": "={{ $json.output[0] }}"
              },
              {
                "name": "caption",
                "value": "={{ $('Analyze Content And Generate Instagram Caption').item.json.message.content }}"
              }
            ]
          }
        }
      },
      "id": "52a40765-eac5-4282-b2fd-ac4f1f014a73",
      "name": "Prepare data on Instagram",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        4160,
        1200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "graphApiVersion": "v20.0",
        "node": "={{ $json.id }}",
        "options": {
          "fields": {
            "field": [
              {
                "name": "id"
              },
              {
                "name": "status"
              },
              {
                "name": "status_code"
              }
            ]
          }
        }
      },
      "id": "1511b1ef-232b-4344-8eec-33fb773bd5bc",
      "name": "Check Status Of Media Before Uploaded",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        4380,
        1200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "={{ $('Instagram params').item.json.instagram_business_account_id }}",
        "edge": "media_publish",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "creation_id",
                "value": "={{ $json.id }}"
              }
            ]
          }
        }
      },
      "id": "b6916ebe-cb6f-45c5-b5bb-87ad659f06bc",
      "name": "Publish Media on Instagram",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        4780,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "graphApiVersion": "v20.0",
        "node": "={{ $('Check Status Of Media Before Uploaded').item.json.id }}",
        "options": {
          "fields": {
            "field": [
              {
                "name": "id"
              },
              {
                "name": "status"
              },
              {
                "name": "status_code"
              }
            ]
          }
        }
      },
      "id": "ed7ee984-d33f-4afd-989b-7c8b2041c275",
      "name": "Check status of post ",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        4980,
        1200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Publish On Instagram And Send Message When Published via Telegram\n",
        "height": 600,
        "width": 1580,
        "color": 5
      },
      "id": "ea4f48af-281f-4008-8db8-bbc737cf6dc6",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4060,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## For More About Api\n** [Facebook Scraper Api Guide](https://rapidapi.com/social-api1-instagram/api/instagram-scraper-api2/playground/apiendpoint_a45552b2-9850-4da9-b5cb-bbdd3ac2199d)",
        "height": 500,
        "width": 260,
        "color": 5
      },
      "id": "4ee7b038-61c7-4de1-8369-78857b2d5692",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1380,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const filteredData = $input.first().json.data.items.filter(item=> !item.is_video)\nreturn filteredData.map((item)=>{\n return {\n id: item.id,\n prompt: item.caption.text,\n content_code: item.code,\n thumbnail_url: item.thumbnail_url,\n tag: $input.first().json.data.additional_data.name\n }\n}) \n\n"
      },
      "id": "ed042029-2a28-4a6e-a817-302a7404e486",
      "name": "filter the image content-2",
      "type": "n8n-nodes-base.code",
      "position": [
        1700,
        1120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Guide \n** [Guide](https://replicate.com) of getting of Replicate Token ",
        "height": 300,
        "width": 180,
        "color": 5
      },
      "id": "26e70a30-e9d5-4445-bdf9-58a2780ee972",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        360,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1e380c14-e908-4eeb-90e0-957a422829d0",
              "name": "replicate_token",
              "type": "string",
              "value": ""
            }
          ]
        },
        "options": {}
      },
      "id": "8ea186b8-ca74-46c7-a7a7-f383b6c2cbcc",
      "name": "Replicate params",
      "type": "n8n-nodes-base.set",
      "position": [
        400,
        1240
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.replicate.com/v1/models/black-forest-labs/flux-schnell/predictions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Replicate params').item.json.replicate_token}}"
            },
            {
              "name": "Prefer",
              "value": "wait"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "=json",
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "jsonBody": "={\n \"input\": {\n \"prompt\": \"A highly detailed 3D isometric model of {{$('Analyze Image and give the content').item.json.content .replace(/\\\\n/g, ' ') \n.replace(/\\\\t/g, ' ') \n.replace(/\\s+/g, ' ')\n.trim(); }} rendered in a stylized miniature toy aesthetic. Materials: Matte plastic/painted metal/weathered stone texture with no self-shadowing. Lighting: - Completely shadowless rendering - Ultra bright and perfectly even illumination from all angles - Pure ambient lighting without directional shadows - Flat, consistent lighting across all surfaces - No ambient occlusion. Style specifications: - Clean, defined edges and surfaces - Slightly exaggerated proportions - Miniature/toy-like scale - Subtle wear and texturing - Rich color palette with muted tones - Isometric 3/4 view angle - Crisp details and micro-elements. Technical details: - 4K resolution - PBR materials without shadows - No depth of field - High-quality anti-aliasing - Perfect uniform lighting. Environment: Pure white background with zero shadows or gradients. Post-processing: High key lighting, maximum brightness, shadow removal.\",\n \"output_format\": \"jpg\",\n \"output_quality\": 100,\n \"go_fast\":false\n }\n}\n",
        "options": {}
      },
      "id": "c1be3170-96ec-4b6f-826c-5ae3011df443",
      "name": "Generate image on flux",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3860,
        1200
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## For top_trends Table\n```\nCREATE TABLE top_trends (\n id SERIAL PRIMARY KEY,\n isposted BOOLEAN DEFAULT false,\n createdat TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n updatedat TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,\n deletedat TIMESTAMP WITHOUT TIME ZONE,\n prompt TEXT NOT NULL,\n thumbnail_url TEXT,\n code TEXT,\n tag TEXT\n);\n```",
        "height": 320,
        "width": 1060,
        "color": 4
      },
      "id": "1191f7a5-e591-4592-86e8-9bf3d4c8bee7",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2060,
        600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Warning\n** Don't forgot the create top_trends table",
        "height": 120,
        "width": 160,
        "color": 3
      },
      "id": "9c8ec850-cc2f-43db-bbe5-3d68f50150f8",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2520,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "\nCreación Automatizada de Contenido para Instagram a partir de Publicaciones en Tendencia\nEste flujo de trabajo automatiza el proceso de descubrir y recrear contenido en tendencia en Instagram:\n\nDescubrimiento de Contenido:\n\nExtrae las principales publicaciones en tendencia de hashtags específicos (#blender3d, #isometric)\n\nFiltra para quedarse solo con contenido de imagen (excluye vídeos)\n\nConsulta la base de datos para evitar contenido duplicado\n\nGeneración de Contenido Impulsada por IA:\n\nAnaliza imágenes en tendencia utilizando GPT-4 Vision\n\nGenera descripciones detalladas de los elementos visuales\n\nCrea pies de foto atractivos para Instagram con hashtags relevantes\n\nUtiliza Flux AI para generar imágenes similares pero únicas\n\nPublicación y Monitorización:\n\nPublica automáticamente el contenido en una Cuenta de Empresa de Instagram\n\nSupervisa el estado de las publicaciones y el proceso de publicación\n\nEnvía actualizaciones de estado a través de Telegram\n\nPerfecto para creadores de contenido y empresas que buscan mantener una presencia activa en Instagram con contenido generado por IA e inspirado en las tendencias actuales. El flujo de trabajo se ejecuta de forma programada y gestiona automáticamente todo el proceso, desde el descubrimiento de contenido hasta su publicación.\n\nNota: Requiere una Cuenta de Empresa de Instagram, un Bot de Telegram y credenciales de las APIs de OpenAI y Replicate.",
        "height": 840,
        "width": 620
      },
      "id": "f2e5e991-3070-4622-bc1f-46c98f7c7b3b",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "##Warning\n** Dont forgot the subscribe [Instagram Scraper Api](https://rapidapi.com/social-api1-instagram/api/instagram-scraper-api2/playground/apiendpoint_a45552b2-9850-4da9-b5cb-bbdd3ac2199d)",
        "height": 120,
        "width": 180,
        "color": 7
      },
      "id": "4bb25687-d22b-4ef8-be59-e6f12a68b6de",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1060,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Warning\n** You can check the [rate limit](https://rapidapi.com/social-api1-instagram/api/instagram-scraper-api2) of the Instagram Scraper Api on Rapid Api\n** Free version is monthly 500 request\n",
        "height": 180,
        "width": 180
      },
      "id": "6b15c1b2-12f9-4ab1-a9c0-221dc45ae5a8",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1060,
        1580
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Check Data on Database Is Exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Params": {
      "main": [
        [
          {
            "node": "Rapid Api params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Data is Exist": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "insert data on db",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Instagram params": {
      "main": [
        [
          {
            "node": "Telegram Params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rapid Api params": {
      "main": [
        [
          {
            "node": "get top trends on instagram #isometric",
            "type": "main",
            "index": 0
          },
          {
            "node": "get top trends on instagram #blender3d",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replicate params": {
      "main": [
        [
          {
            "node": "Instagram params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Replicate params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert data on db": {
      "main": [
        [
          {
            "node": "Analyze Image and give the content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check status of post ": {
      "main": [
        [
          {
            "node": "If media status is finished1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate image on flux": {
      "main": [
        [
          {
            "node": "Prepare data on Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge the array content": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter the image content": {
      "main": [
        [
          {
            "node": "merge the array content",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prepare data on Instagram": {
      "main": [
        [
          {
            "node": "Check Status Of Media Before Uploaded",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Publish Media on Instagram": {
      "main": [
        [
          {
            "node": "Check status of post ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter the image content-2": {
      "main": [
        [
          {
            "node": "merge the array content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If media status is finished": {
      "main": [
        [
          {
            "node": "Publish Media on Instagram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If media status is finished1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Data on Database Is Exist": {
      "main": [
        [
          {
            "node": "If Data is Exist",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "send error message to telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Image and give the content": {
      "main": [
        [
          {
            "node": "Analyze Content And Generate Instagram Caption",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status Of Media Before Uploaded": {
      "main": [
        [
          {
            "node": "If media status is finished",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get top trends on instagram #isometric": {
      "main": [
        [
          {
            "node": "filter the image content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get top trends on instagram #blender3d": {
      "main": [
        [
          {
            "node": "filter the image content-2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Content And Generate Instagram Caption": {
      "main": [
        [
          {
            "node": "Generate image on flux",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "7589da43-4ac6-46b0-93ba-6c0d273060f3",
  "triggerCount": 0,
  "tags": []
}