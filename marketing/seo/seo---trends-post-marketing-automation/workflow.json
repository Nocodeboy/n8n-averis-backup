{
  "createdAt": "2025-05-02T18:05:54.080Z",
  "updatedAt": "2025-05-02T18:06:11.916Z",
  "id": "neko6rkZVvPCZOb6",
  "name": "SEO - Trends Post",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * 4"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -40,
        400
      ],
      "id": "7da5d8fa-1031-4e41-8e69-d5e9c3890685",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar-pro\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Act as a professional news researcher who is capable of finding detailed summaries about a news topic from highly reputable sources.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \" Research the following topic and return everything you can find: '{{ $('Choosing Topic').item.json.message.content }}' \"\n    }\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1180,
        400
      ],
      "id": "51defcd8-bc80-4a66-bd19-202dcfeb36fa",
      "name": "Research"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "23b8e8c4-9191-415a-9661-1b60d413528a",
              "name": "research",
              "value": "={{ $json.choices[0].message.content.replaceAll(\"[1]\", \" - source: \" +$json.citations[0]).replaceAll(\"[2]\",\" - source:\" +$json.citations[1]).replaceAll(\"[3]\",\" - source: \" +$json.citations[2]).replaceAll(\"[4]\",\" - source: \"+$json.citations[3]).replaceAll(\"[5]\",\" - source: \"+$json.citations[4]).replaceAll(\"[6]\",\" - source: \"+$json.citations[5]).replaceAll(\"[7]\",\" - source: \"+$json.citations[6]).replaceAll(\"[8]\",\" - source: \"+$json.citations[7]).replaceAll(\"[9]\",\" - source: \"+$json.citations[8]).replaceAll(\"[10]\",\" - source: \"+$json.citations[9]) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1400,
        400
      ],
      "id": "eba97c66-306e-4c71-a243-749aa090612c",
      "name": "Fix Links"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "previous-posts",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2300,
        400
      ],
      "id": "763723e1-d7af-44fc-9f9b-778e277d00dc",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1t-J2x22lsG6TpktQLBkwaS-ewuJI2WQvB-g4vQspbYU",
          "mode": "list",
          "cachedResultName": "Completed Keywords",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t-J2x22lsG6TpktQLBkwaS-ewuJI2WQvB-g4vQspbYU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t-J2x22lsG6TpktQLBkwaS-ewuJI2WQvB-g4vQspbYU/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2120,
        400
      ],
      "id": "d60f19b8-01e0-4fa9-8a61-9ff777ec4051",
      "name": "Previous Posts"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-mini-2024-09-12",
          "mode": "list",
          "cachedResultName": "O1-MINI-2024-09-12"
        },
        "messages": {
          "values": [
            {
              "content": "=You are part of a team that creats world class blog posts. \n\nYou are in charge of internal linking between blog posts. \n\nFor each new blog post that comes across your desk, your job is to look through previously posted blogs and make atleast 5 internal links. \n\nTo choose the best internal linking opportunities you must: \n\n- Read the previous blog post summaries and look through their keywords. If there is a match where the previous blog post is highly relevant, then this is an internal linking opportunity. \n\n- Do not link if it is not highly relevant. Only make a link if it makes sense and adds value for the reader. \n\nOnce you've found the best linking opportunities, you must update the blog post with the internal links. To do this you must: \n\n- Add the link of the previous blog post at the relevant section of the new blog post. Drop the URL at the place which makes most sense. Later we will hyperlink the URL to the word in the blog post which it is placed next to. So your placing is very important. \n\nMake sure to not delete any existing URLs or change anything about the blog post provided to you. You must only add new internal linking URLs and output the revised blog post. \n\nYour output must be the blog post given to you plus the new urls. Don't remove any info. \n\nDon't return the previous blog posts. Only return the current blog post with the internal links added.\n\nCurrent blog Post: \n{{ $('Copywriter').item.json.message.content }}\n\nPrevious Blog Posts: \n{{ $json['previous-posts'].toJsonString().split() }}\n\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2480,
        400
      ],
      "id": "271ee2f4-515a-46c2-8a03-b25aca79f690",
      "name": "Add internal links"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Create a slug for the following blog post: \n{{ $('Add internal links').item.json.message.content }}\n\nA slug in a blog post is the part of the URL that comes after the domain name and identifies a specific page. It is typically a short, descriptive phrase that summarizes the content of the post, making it easier for users and search engines to understand what the page is about. For example, in the URL www.example.com/intelligent-agents, the slug is intelligent-agents. A good slug is concise, contains relevant keywords, and avoids unnecessary words to improve readability and SEO. \n\nThe slug must be 4 or 5 words max and must include the primary keyword of the blog post which is {{ $('Choosing Topic').item.json.message.content }}\n\nYour output must be the slug and nothing else so that I can copy and paste your output and put it at the end of my blog post URL to post it right away. "
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3160,
        400
      ],
      "id": "b07fa105-1e82-4b4c-b39f-3b624dc922ab",
      "name": "Slug"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "GPT-4O-2024-11-20"
        },
        "messages": {
          "values": [
            {
              "content": "=Extract the blog post title from the following blog post: \n{{ $('Add internal links').item.json.message.content }}\n\n\n\nThe blog post title must include the primary keyword '{{ $('Choosing Topic').item.json.message.content }}' and must inform the users right away of what they can expect from reading the blog post. \n\n- Don't put the output in \"\". The output should just text with no markdown or formatting. \n\nYour output must only be the blog post title and nothing else. "
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3460,
        400
      ],
      "id": "bbfeeecf-f5bc-4a47-a494-f4ba324f00bc",
      "name": "Title"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-2024-11-20",
          "mode": "list",
          "cachedResultName": "GPT-4O-2024-11-20"
        },
        "messages": {
          "values": [
            {
              "content": "=Create a good meta description for the following blog post: \n\n{{ $('Add internal links').item.json.message.content }}\n\nA good meta description for a blog post that is SEO-optimized should:\n- Be Concise: Stick to 150-160 characters to ensure the full description displays in search results. \n- Include Keywords: Incorporate primary keywords naturally to improve visibility and relevance to search queries.\n\nPrimary keyword = {{ $('Choosing Topic').item.json.message.content }}\n\n\n- Provide Value: Clearly describe what the reader will learn or gain by clicking the link. \n\n- Be Engaging: Use persuasive language, such as action verbs or a question, to encourage clicks. \n\n- Align with Content: Ensure the description accurately reflects the blog post to meet user expectations and reduce bounce rates. \n\nYour output must only be the meta description and nothing else. \n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3760,
        400
      ],
      "id": "57d64a2c-8e16-4979-8cb4-6ae243a337aa",
      "name": "Meta description"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o1-preview",
          "mode": "list",
          "cachedResultName": "O1-PREVIEW"
        },
        "messages": {
          "values": [
            {
              "content": "=DO NOT OUTPUT ANYTHING OTHER THAN THE CODE. I want you to follow the layout of the template as a guide to generate the WordPress code for a blog post. Here are the rules to follow:\n\nThe blog post should have a title, estimated reading time, key takeaways, table of contents, body, and FAQ in this order.\nMake it engaging by using italics, dot points, quotes, bold, spaces, and sometimes new lines. Never use emojis.\nThe blog post will have some URLs referenced next to certain keyphrases to show where the info came from. You must hyperlink the keyphrase with the provided URL so that the reader can click on the referenced URL. It is critical you get this right.\nWrap the entire content in a container <div> with inline CSS that sets the text color to white (#ffffff), uses a legible font such as Arial, sans-serif, and sets line-height to 1.6.\nEnsure that all non-heading text elements (e.g., paragraphs, list items) have an inline style or embedded style that sets their font size to 20px and color to white (#ffffff) using !important to override theme styles.\nHyperlinks, points in the table of contents, and FAQ questions must be styled in blue (#00c2ff).\nAll headings and subheadings should have an underline implemented via a bottom border in blue (#00c2ff) with appropriate padding.\nPlace a double break (<br><br>) between each section to improve readability.\nDo not output any extra text or mention code tags like HTML''' around the output; just output the HTML code.\nBlog post: \n\n{{ $json.message.content }}\n\nHere's an example of a well formatted output:\n\n<div style=\"color: #ffffff; font-family: Arial, sans-serif; line-height: 1.6;\"> <style> p, .wp-block-paragraph, ul.wp-block-list, li { color: #ffffff !important; font-size: 20px !important; } a { color: #00c2ff !important; } </style> <h1 id=\"h-devin-ai-the-hype-and-reality-of-an-ai-software-engineer\" class=\"wp-block-heading\" style=\"border-bottom: 2px solid #00c2ff; padding-bottom: 5px;\">Devin AI: The Hype and Reality of an AI Software Engineer</h1> <br><br> <p class=\"estimated-reading-time\" style=\"color: #ffffff; font-size: 20px !important;\">Estimated reading time: 5 minutes</p> <br><br> <h2 id=\"h-key-takeaways\" class=\"wp-block-heading\" style=\"border-bottom: 2px solid #00c2ff; padding-bottom: 5px;\"><strong>Key Takeaways</strong></h2> <br><br> <ul class=\"wp-block-list\"> <li><mark style=\"background-color: #ffd966;\"><strong>Devin AI</strong></mark> claims to be the world's first fully autonomous AI software engineer.</li> <br><br> <li>Initial demos and claims have generated significant <mark style=\"background-color: #ffff00;\">hype</mark> and interest.</li> <br><br> <li>Critics argue some capabilities may be exaggerated or misleading.</li> <br><br> <li>Real-world testing reveals both <em>strengths</em> and <em>limitations</em>.</li> <br><br> <li>The true impact on software engineering remains to be seen.</li> </ul> <br><br> <div class=\"wp-block-yoast-seo-table-of-contents yoast-table-of-contents\"> <h2 style=\"color: #ffffff; border-bottom: 2px solid #00c2ff; padding-bottom: 5px;\">Table of contents</h2> <br><br> <ul> <li><a href=\"#h-devin-ai-the-hype-and-reality-of-an-ai-software-engineer\" data-level=\"1\">Devin AI: The Hype and Reality of an AI Software Engineer</a></li> <br><br> <li><a href=\"#h-key-takeaways\" data-level=\"2\">Key Takeaways</a></li> <br><br> <li><a href=\"#h-what-is-devin-ai\" data-level=\"2\">What is Devin AI?</a></li> <br><br> <li><a href=\"#h-the-hype-around-devin-ai\" data-level=\"2\">The Hype Around Devin AI</a></li> <br><br> <li><a href=\"#h-putting-devin-to-the-test\" data-level=\"2\">Putting Devin to the Test</a></li> <br><br> <li><a href=\"#h-the-reality-check\" data-level=\"2\">The Reality Check</a></li> <br><br> <li><a href=\"#h-the-future-of-ai-in-software-development\" data-level=\"2\">The Future of AI in Software Development</a></li> <br><br> <li><a href=\"#h-frequently-asked-questions\" data-level=\"2\">Frequently Asked Questions</a></li> </ul> </div> <br><br> <p>Devin AI has burst onto the tech scene, promising to revolutionize software development as we know it. But does this AI-powered coding assistant live up to the hype? Let's dive into what Devin AI really is, what it can do, and what developers are saying after putting it to the test.</p> <br><br> <!-- Rest of blog post content goes here --> </div>\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2860,
        400
      ],
      "id": "5e5953c9-0d28-42a4-ae65-490892b042c3",
      "name": "HTML version"
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search?engine=google_images",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "={{ $('Choosing Topic').item.json.message.content }}"
            },
            {
              "name": "gl",
              "value": "us"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4100,
        400
      ],
      "id": "c21f8fda-2782-4542-84f8-6a2fca41e012",
      "name": "Image Covers"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1f0541df-05ab-4e3d-a5d8-3904579fc8a9",
              "name": "image-url",
              "value": "={{ $json.images_results[1].original }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4240,
        400
      ],
      "id": "e737647a-124e-4bcb-9e78-cca730b8640f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "title": "={{ $('Title').item.json.message.content }}",
        "additionalFields": {
          "authorId": 2,
          "content": "=<img src=\"{{ $json['image-url'] }}\" alt=\"Cover Image\">\n{{ $('HTML version').item.json.message.content }}}",
          "slug": "={{ $('Slug').item.json.message.content }}",
          "status": "draft",
          "commentStatus": "closed",
          "sticky": false,
          "categories": [
            280
          ],
          "tags": [
            281
          ],
          "postTemplate": {
            "values": {}
          }
        }
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        4460,
        400
      ],
      "id": "465773cf-32fd-475e-b978-2535705e832f",
      "name": "Wordpress"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1t-J2x22lsG6TpktQLBkwaS-ewuJI2WQvB-g4vQspbYU",
          "mode": "list",
          "cachedResultName": "Completed Keywords",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t-J2x22lsG6TpktQLBkwaS-ewuJI2WQvB-g4vQspbYU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t-J2x22lsG6TpktQLBkwaS-ewuJI2WQvB-g4vQspbYU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Blog Title ": "={{ $('Title').item.json.message.content }}",
            "Keywords": "={{ $('Choosing Topic').item.json.message.content }}",
            "Summary ": "={{ $('Meta description').item.json.message.content }}",
            "URL": "=https://YourURL.com/{{ $('Slug').item.json.message.content }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Blog Title ",
              "displayName": "Blog Title ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Keywords",
              "displayName": "Keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Summary ",
              "displayName": "Summary ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4740,
        400
      ],
      "id": "a9049df9-5914-4020-aa15-df8aa802d92e",
      "name": "Google Sheets"
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search?engine=google_trends",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "=[YOUR QUERY]"
            },
            {
              "name": "geo",
              "value": "US"
            },
            {
              "name": "hl",
              "value": "en"
            },
            {
              "name": "date",
              "value": "={{ $now.minus({ days: 3 }).format('yyyy-MM-dd') }} {{ $now.format('yyyy-MM-dd') }}"
            },
            {
              "name": "data_type",
              "value": "RELATED_QUERIES"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        400
      ],
      "id": "9300373f-5741-4112-9874-db25d7e849f0",
      "name": "Trends"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"most-trending\": {\n\n    \"#1\": { \n\n      \"query\":\"{{ $json.related_queries.rising[0].query }}\",\n      \"score\":\"{{ $json.related_queries.rising[0].extracted_value }}\"\n\n    },\n\n\n    \"#2\": { \n\n      \"query\":\"{{ $json.related_queries.rising[1].query }}\",\n      \"score\":\"{{ $json.related_queries.rising[1].extracted_value }}\"\n\n    }\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        400
      ],
      "id": "93bf8b55-1a8f-4806-b51a-b5d5fb7ddf89",
      "name": "2 Most Trending"
    },
    {
      "parameters": {
        "jsCode": "// Get the top array from your JSON\nconst topItems = $('Trends').first().json.related_queries.top;\n\n// Filter the items to only include those with extracted_value > 30\nconst filtered = topItems.filter(item => item.extracted_value > 30);\n\n// Map the filtered items to their query values and join them with commas\nconst resultString = filtered.map(item => item.query).join(', ');\n\n// Return the result in a new JSON property\nreturn [{ json: { result: resultString } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        400
      ],
      "id": "4ae357a0-9393-472f-a437-725c14959cc7",
      "name": "High search volume keywords"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "deepseek/deepseek-r1",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=You are part of a team that creates world class blog posts. Your job is to choose the topic for each blog post. \n\nThe blog posts are posted on the website of a [COMPANY NAME + DESCRIPTION + PRODUCTS + TARGET MARKET]. The blog posts are mainly posted as part of an SEO campaign to get [COMPANY NAME] to rank high for its products and services.\n\nIn this instance, you are given a list of 2 keywords which have been trending the most on Google news search over the past few days. \n\nYour job is to pick one which you think would make for the most relevant blog post with the best SEO outcomes for the client. \n\nThe keywords have two attributes: \n\n1. query: This attribute determines the search query that users have been searching for which is trending. \n\n2. value: This attribute determines what percentage increase the keyword has seen compared to previous periods (i.e. the increase in search volume). \n\nYou must choose one out of the taking into consideration both the relevance of the keyword for [COMPANY NAME's] SEO efforts and the comparative trendiness determined by the value attribute. \n\nOutput the keyword you decided to post a blog on and nothing else. Don't explain your reasoning. Just output the keyword. \n\nThis instance: \n\nKeyword 1:\n{{ $('2 Most Trending').item.json['most-trending']['#1'].toJsonString() }} \n\nKeyword2: \n{{ $('2 Most Trending').item.json['most-trending']['#2'].toJsonString() }} "
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        780,
        400
      ],
      "id": "4a9d1f30-166e-44e1-83e1-677901795c8c",
      "name": "Choosing Topic"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "anthropic/claude-3.5-sonnet",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=You are part of a team that creates world class blog posts for SEO purposes. \n\nEvery week your team posts one blog post on the most trending news in this week of AI. As the copywriter for the blogs, you are provided with the folling information: \n\n- Query: The topic of this weeks blog post. This is the most trending news in the space.\n\n- Other keywords: This is a list of some high search volume keywords in the AI space. The goal is to include some of these into the blog post naturally. This is only optional and dependant on the natural dependancy of this weeks topic to the blog post. Include any of the keywords in the blog, if you can do so naturally without changing the meaning of the blog post.  \n\n\n- Research findings: This is research found from very reputable resources in relation to the topic of the post. Your blog post must be based off this research.\n\n\nGiven the said info, you must write the blog post.\n \nThe blog post must: \n\n- Place the query in the blog title, H1 header and early in the introduction. \n\n- Include all detail in research findings. When including the research points, make sure to also include their source URL so that the copywriter can use them as hyperlinks. (source url for each statement is given in the research findings next to the text)\n\n- Be very detailed. \n\n- Be using tone similar to that of a reporter, invoking curiosity and excitement and thrill in the readers.\n\n- Flow naturally and make sense. \n\n- Be at minimum 1500 to 2000 words long. \n\n- Be suitable for a year 5 reading level. \n\nMake sure to create the entire blog post draft in your first output. Don't stop or cut it short. \n\nYour output must be the blog post and nothing else.\n\nHere are the details of your next blog post project: \n\nQuery: \n{{ $('Choosing Topic').item.json.message.content }}\n\nDetailed Research: \n{{ $json.research }}\n\nWrite the blog post.\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1620,
        400
      ],
      "id": "44c7b1f9-d66d-4255-83c5-5bcd32aa6dd8",
      "name": "Copywriter"
    },
    {
      "parameters": {
        "content": "## Find Trend\n\n",
        "height": 240,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        80,
        320
      ],
      "typeVersion": 1,
      "id": "64b4cdb2-ef9a-40c0-a0a3-83ee800c5231",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## High Volume Keywords\n\n",
        "height": 240,
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        520,
        320
      ],
      "typeVersion": 1,
      "id": "102929fb-84be-47e1-8402-78fe9ff7e40a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Choosing Blog Topic\n\n\n",
        "height": 240,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        760,
        320
      ],
      "typeVersion": 1,
      "id": "a3517aed-d262-4603-a00a-9394610a38c3",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Research\n\n\n",
        "height": 240,
        "width": 460
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        320
      ],
      "typeVersion": 1,
      "id": "6dd1183f-220c-4763-bb0e-b57165642f83",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Write Post\n\n\n",
        "height": 240,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1600,
        320
      ],
      "typeVersion": 1,
      "id": "a6fc8c98-71a2-48e6-a521-1e72dd3b68ec",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Internal Links\n\n\n",
        "height": 240,
        "width": 800
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2000,
        320
      ],
      "typeVersion": 1,
      "id": "2c577a0c-557a-4c5c-b163-8bfd0c008ad5",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Prepare to Post\n\n\n",
        "height": 240,
        "width": 1220
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2820,
        320
      ],
      "typeVersion": 1,
      "id": "6e30644a-467f-4267-8d99-5e8f9625d60f",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Find Cover Image\n\n\n",
        "height": 240,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4060,
        320
      ],
      "typeVersion": 1,
      "id": "8bd85528-f1c2-48cb-b30a-63f55e640ca8",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Post on Wordpress\n\n\n",
        "height": 240
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4420,
        320
      ],
      "typeVersion": 1,
      "id": "8b9ea71e-a884-457e-bf36-0bb6f390007b",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Add to Other Blogs\n\n\n",
        "height": 240
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4680,
        320
      ],
      "typeVersion": 1,
      "id": "96c9d933-e846-4e5d-93ee-d4cb8f91ad4d",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# Trend SEO Post",
        "height": 80,
        "width": 420,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "c540cdca-2f92-4bfc-b325-c2e759cbc546",
      "name": "Sticky Note10"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Trends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research": {
      "main": [
        [
          {
            "node": "Fix Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Links": {
      "main": [
        [
          {
            "node": "Copywriter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Previous Posts": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Add internal links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add internal links": {
      "main": [
        [
          {
            "node": "HTML version",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slug": {
      "main": [
        [
          {
            "node": "Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Title": {
      "main": [
        [
          {
            "node": "Meta description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML version": {
      "main": [
        [
          {
            "node": "Slug",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Meta description": {
      "main": [
        [
          {
            "node": "Image Covers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Covers": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Wordpress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wordpress": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trends": {
      "main": [
        [
          {
            "node": "2 Most Trending",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2 Most Trending": {
      "main": [
        [
          {
            "node": "High search volume keywords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "High search volume keywords": {
      "main": [
        [
          {
            "node": "Choosing Topic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Choosing Topic": {
      "main": [
        [
          {
            "node": "Research",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Copywriter": {
      "main": [
        [
          {
            "node": "Previous Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "a42ca868-6bec-4ab7-aa68-c12cfd921753",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-05-02T18:05:50.629Z",
      "updatedAt": "2025-05-02T18:05:50.629Z",
      "id": "qYimaU8twXUrKwTs",
      "name": "marketing-automation"
    }
  ]
}