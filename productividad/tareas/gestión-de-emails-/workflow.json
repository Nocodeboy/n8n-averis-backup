{
  "createdAt": "2025-04-29T14:09:37.806Z",
  "updatedAt": "2025-04-29T14:09:37.806Z",
  "id": "U94a8Vgw9sKPcOKi",
  "name": "Gestión de emails",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.1,
      "position": [
        -4320,
        2120
      ],
      "id": "858fee22-e102-489d-97b4-5f0f43cdd38b",
      "name": "Supabase Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -4340,
        2340
      ],
      "id": "aa09f7c9-e2be-417a-ba18-dd64e49f6994",
      "name": "Embeddings OpenAI1"
    },
    {
      "parameters": {
        "name": "kamexa_information",
        "description": "Information about Kamexa that you can use to answer sales queries. ",
        "topK": 5
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -4160,
        1880
      ],
      "id": "55cbedc8-d5a8-42f5-8cc1-e049ddbbac2e",
      "name": "kamexa_information"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Manager just gave feedback requesting a change. \n\nHere's the draft Email your team had prepared: \n\n{{ $('Edit Fields2').item.json.emailBody }}\n\nHere's the managers requested changes: \n\n{{ $('HITL2').item.json.data.Feedback }}\n\nHere's Kamexa specific information which you can use as context for writing the email: \n\n{{ $('CSR Agent').item.json.output.kamexaInformation }}\n\nRewrite the draft email in line with the managers request. ",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You work in the customer support team at Kamexa, an AI Automation Agency. When Kamexa receives an email from a customer or lead requesting support, your team drafts an appropriate support response.\n\nThe incoming email can be:\n- A first-time support request (no prior ticket exists)\n- A follow-up on an existing support ticket\n- A bug report or feature request from an existing customer\n\nIn every case, your draft response should aim to resolve the issue or, if you need more information, politely request the details required.\n\nThe draft response is then sent to your support manager for feedback. If the manager asks for changes, it is your job to modify the email based on that feedback.\n\nYour output must closely follow the schema defined.\n\nDon’t make anything up.\n\nSign off emails as Kia, Kamexa Support\n\nHere is the current date/time in Sydney (UTC+10) timezone: {{ $now.weekdayLong}}, {{ $now.format('dd LLL yyyy') }} at {{ $now.format('t') }}."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1480,
        1900
      ],
      "id": "8c46565c-2345-4f5c-8867-157246370f25",
      "name": "Revision Agent (Email)2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "openai/gpt-4.1",
          "mode": "list",
          "cachedResultName": "openai/gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -4440,
        1680
      ],
      "id": "b5e6a3f0-9681-4081-b9f0-e0ad1cd90d49",
      "name": "OpenAI Chat Model3"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"emailBody\": {\n      \"type\": \"string\",\n      \"description\": \"The body content of the email reply to be sent to the prospect. (if escalate is true then this is unecessary)\"\n    },\n      \"reason\": {\n      \"type\": \"string\",\n      \"description\": \"Reasoning for your response.\"\n    },\n    \"escalate\": {\n      \"type\": \"boolean\",\n      \"description\": \"True if you are unsure and need to escalate to your manager. False if you have enough information and are sure of your answer.\"\n  },\n    \"kamexaInformation\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of information you found from querying the kamexa_informatin database.\"\n  }\n  },\n  \"required\": [\n    \"emailBody\",\n    \"reason\",\n    \"escalate\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -3740,
        2000
      ],
      "id": "5660d4e6-7173-4db2-a528-ce7d5816c43a",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "openai/gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "openai/gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3940,
        2080
      ],
      "id": "280fe5e5-b2f3-49b4-9151-672355e5e5bb",
      "name": "OpenAI Chat Model4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "74a43c89-3cf6-4814-ab9a-f000fb2eb7d2",
              "name": "emailBody",
              "value": "={{ $json.output.emailBody }}",
              "type": "string"
            },
            {
              "id": "96d65148-22fc-4acb-b2e7-7a0b892929bc",
              "name": "reasoning",
              "value": "={{ $json.output.reason }}",
              "type": "string"
            },
            {
              "id": "393e3445-3983-4f20-ad64-5de5033a8c60",
              "name": "escalate",
              "value": "={{ $json.output.escalate }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3320,
        1640
      ],
      "id": "9da3e9b4-4bdc-4964-b81b-11c0cc80756b",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "openai/gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "openai/gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1600,
        2180
      ],
      "id": "11a50f1d-3ff7-42fa-8923-bf3f69141734",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"emailBody\": {\n      \"type\": \"string\",\n      \"description\": \"The body content of the email reply to be sent to the prospect in line with managers feedback.\"\n    },\n      \"reason\": {\n      \"type\": \"string\",\n      \"description\": \"Reasoning for your response.\"\n    }\n  },\n  \"required\": [\n    \"emailBody\",\n    \"reason\",\n    \"escalate\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -1180,
        2180
      ],
      "id": "2bf17104-0bdf-4f13-aa84-afe464215e87",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data.Approve }}",
                    "rightValue": "Yes",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "0a83b8bf-1fbe-4646-a7bd-8d5efd817629"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Approved"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "327f1432-f2fd-4c09-bcf9-b03effea941f",
                    "leftValue": "={{ $json.data.Approve }}",
                    "rightValue": "No",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Iterate"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "749ca2c5-30f9-4acd-b9a2-5a10fc4d2b3e",
                    "leftValue": "={{ $json.data.Approve }}",
                    "rightValue": "Stop - Human Handling",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Human"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2860,
        1640
      ],
      "id": "fdc509fa-d254-4b20-909f-c8ce6c7e4565",
      "name": "Decision"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "YOUR-ID-HERE",
        "message": "=### Prospect = {{ $('When Executed by Another Workflow').item.json.emailAddress }}\n\n---------------------------------------------------------\n\n### Action = Replying to Email ###\n\n---------------------------------------------------------\n\n### Previous Emails Summary ### \n\n{{ $('When Executed by Another Workflow').item.json.threadSummary }}\n\n---------------------------------------------------------\n### Customer Email: ### \n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}\n\n---------------------------------------------------------\n\n### Thought Process: ### \n\n{{ $json.reasoning }}\n\n---------------------------------------------------------\n\n### Draft Email: ### \n\n{{ $json.emailBody }}\n",
        "responseType": "customForm",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Approve",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Yes"
                  },
                  {
                    "option": "No"
                  },
                  {
                    "option": "Stop - Human Handling"
                  }
                ]
              }
            },
            {
              "fieldLabel": "Feedback"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -3120,
        1640
      ],
      "id": "5f02dbe4-16ca-45a2-b333-7bf55caf14dc",
      "name": "HITL2",
      "webhookId": "d6015975-904c-4d0c-88c3-6cc4d0ce8faa"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When Executed by Another Workflow').item.json.messageId }}",
        "contextWindowLength": 0
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -4280,
        1700
      ],
      "id": "f44508ba-adef-4fda-8063-8f3564fc1e74",
      "name": "Simple Memory2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c816866-eec9-4c02-a7df-e37a4c1fc89f",
              "leftValue": "={{ $json.output.escalate }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3780,
        1500
      ],
      "id": "fd3df4a6-93f4-4b8a-a2ec-ecd87d19b42c",
      "name": "Escalate?"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "emailAddress"
            },
            {
              "name": "threadId"
            },
            {
              "name": "messageId"
            },
            {
              "name": "notes"
            },
            {
              "name": "newEmail"
            },
            {
              "name": "threadSummary"
            },
            {
              "name": "contactId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -4620,
        1480
      ],
      "id": "23f0b9e0-3777-41c6-8151-6042aae711c6",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2420,
        900
      ],
      "id": "536e2521-2e37-4ce0-8a68-b4b509fe8d70",
      "name": "Done"
    },
    {
      "parameters": {
        "resource": "thread",
        "operation": "reply",
        "threadId": "={{ $('When Executed by Another Workflow').item.json.threadId }}",
        "messageId": "={{ $('When Executed by Another Workflow').item.json.messageId }}",
        "message": "={{ $('Edit Fields2').item.json.emailBody }}",
        "options": {
          "replyToSenderOnly": true
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -760,
        1600
      ],
      "id": "5d8115d2-af67-4800-bbd7-b25473c47251",
      "name": "Reply to Email",
      "webhookId": "d6a5ff28-938b-4223-a419-0022d4bf4fd1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=A new email was just received by a prospect: \n\nHere's the email: \n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}\n\nHere's a summary of the thread of the email (for context): \n\n{{ $('When Executed by Another Workflow').item.json.threadSummary }} \n\nWe checked the email address in our CRM. Here's all the notes we found on the account associated with the email address: \n\n{{ $('When Executed by Another Workflow').item.json.notes }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Overview \nYou work in the customer support team at Kamexa, an AI automation agency. When Kamexa receives an email from a customer or lead asking for help, you must draft the appropriate support response.\n\nThe incoming email can be one of:\n\n- A first-time support request (no prior ticket exists)\n\n- A follow-up on an existing support ticket (there will be notes in the CRM)\n\n- Any other admin work related enquiry \n\nIn all cases your goal is to resolve their issue or question or, if you can’t, to collect enough detail and escalate appropriately so that a human agent can take over.\n\n# Tools\n- kamexa_information: a RAG database containing all Kamexa's product documentation, troubleshooting guides, and FAQs. Use it to find any Kamexa specific details needed to answer or troubleshoot. Only use this if there's not enough information to handle the query directly from customer notes on crm.\n\n# Instructions\n- You will be given the new incoming email plus any email history and CRM notes.\n- Consult the kamexa_information database to retrieve relevant knowledge (features, known issues, workarounds).\n- Draft a reply that:\n1. Acknowledges the customer’s concern clearly\n2. Provides the best available solution or next steps\n3. If you lack information or the problem is out of scope, set \"escalate\": true so a human can intervene\n- Sign off all replies as Kia, Kamexa Support \n- Provide the best customer service experience you possible can \n- Always write in a casual and friendly tone  \n\n# Context \nHere is the current date/time in Sydney (UTC+10) timezone: {{ $now.weekdayLong}}, {{ $now.format('dd LLL yyyy') }} at {{ $now.format('t') }}.\n\n# Output\nYour output must follow the defined schema \n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -4320,
        1480
      ],
      "id": "8554d282-a29d-4a43-a106-44656114b0e7",
      "name": "CSR Agent"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3aa4ee05-7c16-4513-928d-61dae542a4c3",
              "leftValue": "={{ $('When Executed by Another Workflow').item.json.contactId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        180,
        340
      ],
      "id": "bddd5e62-5317-4f65-a92c-623ac5f13fcd",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('When Executed by Another Workflow').item.json.contactId }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "YOUR-UID-HERE"
            },
            {
              "name": "body",
              "value": "=Type: Email\nFrom: Customer\nThreadId: {{ $('When Executed by Another Workflow').item.json.threadId }}\n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        900,
        180
      ],
      "id": "020ab226-43e9-4d8b-ad53-3c163ae8ddf7",
      "name": "Create Note - Input"
    },
    {
      "parameters": {
        "chatId": "YOUR-ID-HERE",
        "text": "=### Human Action Needed! ###\n\n### Sales Enquiry from  {{ $('When Executed by Another Workflow').item.json.emailAddress }}\n\n\n---------------------------------------------------------\n\n### Previous Emails Context:\n\n{{ $('When Executed by Another Workflow').item.json.threadSummary }}\n\n--------------------------------------------------------- \n\n### New Email: \n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}\n\n---------------------------------------------------------\n\n### Can't handle this - Here's why: \n\n{{ $('CSR Agent').item.json.output.reason }}\n\n---------------------------------------------------------\n\nPlease respond to them as soon as you can! ",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2460,
        500
      ],
      "id": "fec19c4f-216d-4f28-a4c6-c18211160e41",
      "name": "Escalation Message",
      "webhookId": "78ea7cea-6b85-49ab-ae3b-42e94d71d54d"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"firstName\": \"{{ $json.output.name }}\",\n  \"email\": \"{{ $('When Executed by Another Workflow').item.json.emailAddress }}\",\n  \"locationId\": \"YOUR-ID-HERE\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1100,
        400
      ],
      "id": "65fb5acf-b795-4c53-8d5f-4944343719cb",
      "name": "Create Contact"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "openai/gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "openai/gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        560,
        680
      ],
      "id": "b6826295-9148-465f-bcf9-4bff2536a31f",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of the person\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        980,
        680
      ],
      "id": "75ce1715-518d-4fca-95b4-b79176eb452d",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here's the email: \n\n{{ $('When Executed by Another Workflow').item.json.newEmail }} ",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Your job is to read an email and identify the name of the sender. \n\nThey usually put this at the bottom of their email.\n\nYour output must follow the defined schema."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        680,
        400
      ],
      "id": "dd12479d-5445-4c9b-a60a-6e8a77fd4494",
      "name": "Name Finder"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $json.contact.id }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "YOUR-UID-HERE"
            },
            {
              "name": "body",
              "value": "=Type: Email\nFrom: Customer\nThreadId: {{ $('When Executed by Another Workflow').item.json.threadId }}\n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1420,
        400
      ],
      "id": "5c4b8eae-fdfd-473f-be6e-ad7aae8c25c3",
      "name": "Create Note - Input1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3aa4ee05-7c16-4513-928d-61dae542a4c3",
              "leftValue": "={{ $('When Executed by Another Workflow').item.json.contactId }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        120,
        1600
      ],
      "id": "6089e657-a5fc-4847-bf58-28ec80b3ebac",
      "name": "If2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('When Executed by Another Workflow').item.json.contactId }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "YOUR-UID-HERE"
            },
            {
              "name": "body",
              "value": "=Type: Email\nFrom: Customer\nThreadId: {{ $('When Executed by Another Workflow').item.json.threadId }}\n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        1440
      ],
      "id": "03fd6354-5edd-474e-a0e3-86ca297175d6",
      "name": "Create Note - Input4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"firstName\": \"{{ $json.output.name }}\",\n  \"email\": \"{{ $('When Executed by Another Workflow').item.json.emailAddress }}\",\n  \"locationId\": \"YOUR-ID-HERE\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        1660
      ],
      "id": "f5ad3ea7-2ffc-4041-b355-c38667566338",
      "name": "Create Contact2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "openai/gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "openai/gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        500,
        1940
      ],
      "id": "36124c26-dbab-4c97-9f73-3c9a2145fd84",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of the person\"\n    }\n  },\n  \"required\": [\n    \"name\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        920,
        1940
      ],
      "id": "c5b846da-9d5e-4ccb-af04-5f124fa76ef4",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here's the email: \n\n{{ $('When Executed by Another Workflow').item.json.newEmail }} ",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Your job is to read an email and identify the name of the sender. \n\nThey usually put this at the bottom of their email.\n\nYour output must follow the defined schema."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        620,
        1660
      ],
      "id": "e769189d-76ce-48ad-b793-e7926bedede3",
      "name": "Name Finder2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('When Executed by Another Workflow').item.json.contactId }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "YOUR-UID-HERE"
            },
            {
              "name": "body",
              "value": "=Type: Email\nFrom: AI Rep\nThreadId: {{ $('When Executed by Another Workflow').item.json.threadId }}\n\n{{ $('Edit Fields2').item.json.emailBody }}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1080,
        1440
      ],
      "id": "1354920a-196d-467a-839f-de3b1faa6abc",
      "name": "Create Note - Output"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $json.note.contactId }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "YOUR-UID-HERE"
            },
            {
              "name": "body",
              "value": "=Type: Email\nFrom: AI Rep\nThreadId: {{ $('When Executed by Another Workflow').item.json.threadId }}\n\n{{ $('Edit Fields2').item.json.emailBody }}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1540,
        1660
      ],
      "id": "e9848c48-3c31-4460-a40b-81595f940963",
      "name": "Create Note - Output1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $json.contact.id }}/notes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer YOUR-API-HERE"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "YOUR-UID-HERE"
            },
            {
              "name": "body",
              "value": "=Type: Email\nFrom: Customer\nThreadId: {{ $('When Executed by Another Workflow').item.json.threadId }}\n\n{{ $('When Executed by Another Workflow').item.json.newEmail }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        1660
      ],
      "id": "520da7c5-b744-4474-a8e3-305b2d4511af",
      "name": "Create Note - Input3"
    },
    {
      "parameters": {
        "content": "# Draft Email",
        "height": 1200,
        "width": 1160,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4720,
        1300
      ],
      "typeVersion": 1,
      "id": "83090c2a-5bf5-429c-964c-4c22e348db40",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Human in The Loop",
        "height": 420,
        "width": 780
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3440,
        1520
      ],
      "typeVersion": 1,
      "id": "9fb12d92-72dc-4bd0-9e3a-26c74c426e39",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Action",
        "height": 380,
        "width": 360,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2580,
        380
      ],
      "typeVersion": 1,
      "id": "4837b731-7f7c-4a67-bdad-c6acd0fc8ea0",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# Action",
        "height": 380,
        "width": 360,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        1460
      ],
      "typeVersion": 1,
      "id": "2f152090-577d-40c3-8ef0-ff6a12b45b8d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Revision",
        "height": 560,
        "width": 640,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1680,
        1780
      ],
      "typeVersion": 1,
      "id": "4d3b30a6-3a4f-4ceb-8a28-6234c8ef662a",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# Full Context",
        "height": 920,
        "width": 1920,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "e20ea70a-87ea-4bf0-a432-d14b0bfdd710",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "# Full Context",
        "height": 920,
        "width": 1920,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        1220
      ],
      "typeVersion": 1,
      "id": "feb5dee3-a527-446a-bb0d-4d436f18be8e",
      "name": "Sticky Note13"
    }
  ],
  "connections": {
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "kamexa_information",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "kamexa_information": {
      "ai_tool": [
        [
          {
            "node": "CSR Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Revision Agent (Email)2": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "CSR Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "CSR Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "kamexa_information",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "HITL2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Revision Agent (Email)2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Revision Agent (Email)2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Decision": {
      "main": [
        [
          {
            "node": "Reply to Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Revision Agent (Email)2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HITL2": {
      "main": [
        [
          {
            "node": "Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory2": {
      "ai_memory": [
        [
          {
            "node": "CSR Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Escalate?": {
      "main": [
        [
          {
            "node": "Escalation Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "CSR Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reply to Email": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CSR Agent": {
      "main": [
        [
          {
            "node": "Escalate?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create Note - Input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Name Finder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escalation Message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Name Finder",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Name Finder",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Name Finder": {
      "main": [
        [
          {
            "node": "Create Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Contact": {
      "main": [
        [
          {
            "node": "Create Note - Input1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Done": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Create Note - Input4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Name Finder2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Contact2": {
      "main": [
        [
          {
            "node": "Create Note - Input3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Name Finder2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Name Finder2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Name Finder2": {
      "main": [
        [
          {
            "node": "Create Contact2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Note - Input4": {
      "main": [
        [
          {
            "node": "Create Note - Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Note - Input3": {
      "main": [
        [
          {
            "node": "Create Note - Output1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "emailAddress": "kia.demobot@gmail.com",
          "threadId": "1967a5b8e4528f95",
          "messageId": "1967a5b8e4528f95",
          "notes": "Note#1:\n2025-04-26T11:28:26.150Z\nJohn requested a refund. \n\nSpoke to manager - We'll offer the refund but he needs to give us his credit card details and it will take 3 days.\n\nHaven't emailed the customer yet!\n\nNote#2:\n2025-04-26T03:56:06.568Z\nCommunication Type - Email\nFrom: Rep \nThreadId: 2432424324\n\nDetails:\nWe automate your entire SEO - it only costs $1000. \nThanks\n\nNote#3:\n2025-04-26T03:55:07.143Z\nCommunication Type - Email \nFrom: Customer \nThreadId: 2432424324\n\nDetails: \nHey we're super interested in exploring how you can help us automate SEO. \nThanks! ",
          "newEmail": "Hey Kia, It’s John here. I’m still waiting on a response on that refund request.\nCan you please update me? Look forward to hearing from you.\n\nJohn",
          "threadSummary": "",
          "contactId": "MnqgxSSPzZmi4Yr9i5No"
        }
      }
    ]
  },
  "versionId": "ce20e86a-f8d5-484c-9765-ac0e092b3e86",
  "triggerCount": 0,
  "tags": []
}