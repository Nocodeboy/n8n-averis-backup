{
  "createdAt": "2025-04-29T13:33:11.062Z",
  "updatedAt": "2025-04-29T13:33:29.196Z",
  "id": "decuK1IMcNeaMrQr",
  "name": "Scrapping Profundo con FireCrawl",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        500,
        320
      ],
      "id": "2881b98d-d2be-4b4e-bf10-dbdc31d6507b",
      "name": "When clicking ‚ÄòTest workflow‚Äô"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/extract",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"urls\": [\n    \"https://quotes.toscrape.com/*\"\n  ],\n  \"prompt\": \"Extract all quotes and their corresponding authors from the website.\",\n  \"schema\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"quotes\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"text\": {\n              \"type\": \"string\"\n            },\n            \"author\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"text\",\n            \"author\"\n          ]\n        }\n      }\n    },\n    \"required\": [\n      \"quotes\"\n    ]\n  }\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        320
      ],
      "id": "f29b38d1-67d6-454b-a1df-9aed29f221d7",
      "name": "Extract"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ff812e47-d747-4f1a-8fa8-9f3d40ec2acd",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1360,
        320
      ],
      "id": "51303f30-89b9-4d6f-8c65-e853d5cc7aa1",
      "name": "If",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "=https://api.firecrawl.dev/v1/extract/{{ $('Extract').item.json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1160,
        320
      ],
      "id": "09a77f5c-e921-47e4-accf-2952ca2464b0",
      "name": "Get Results",
      "credentials": {
        "httpHeaderAuth": {
          "id": "s6ob3o4picPojIGt",
          "name": "Tavily"
        }
      }
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        940,
        320
      ],
      "id": "8255b3ee-0674-4fbd-81c5-55365d1a8d71",
      "name": "30 Secs",
      "webhookId": "e4866198-b806-4746-b57f-97333c497dbf"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1620,
        440
      ],
      "id": "1b793f1d-09d2-4aaf-9c76-74c68b5abed6",
      "name": "10 Seconds",
      "webhookId": "6cc8c637-bafb-4d64-9cd4-8ae2a9f5b7ca"
    },
    {
      "parameters": {
        "content": "# Firecrawl Extract\n",
        "height": 740,
        "width": 1520,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        0
      ],
      "id": "d30743bd-634f-4dad-9f44-efaa4db9004e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        180
      ],
      "id": "bc627d91-b44f-4d19-a645-d3b98b82466b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "# üöÄ Setup Guide  \n**Author:** [Nate Herk](https://www.youtube.com/@nateherk)\n\n---\n\n## üî• Firecrawl Setup  \n- **[Get 10% Off Firecrawl](https://firecrawl.link/nateherk)**  \n- Set up your **Firecrawl API credential** in `n8n` under **Credentials > HTTP Request**  \n- In your workflow, configure the **URL** or a **List of URLs** you want to extract content from\n\n---\n\n## üßë‚Äçüíª Self-Hosting?\nIf you're self-hosting n8n, you can use the Firecrawl **Community Node**:  \nüëâ [n8n Firecrawl Community Node](https://www.npmjs.com/package/n8n-nodes-firecrawl?activeTab=readme)\n\n---\n\n‚úÖ Once set up, Firecrawl will intelligently extract relevant content from the provided pages based on your workflow logic.\n",
        "height": 740,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "519293ff-f74c-4ec5-acfe-b13e05d9f1a3",
      "name": "Sticky Note1"
    }
  ],
  "connections": {
    "When clicking ‚ÄòTest workflow‚Äô": {
      "main": [
        [
          {
            "node": "Extract",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract": {
      "main": [
        [
          {
            "node": "30 Secs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "10 Seconds",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Results": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "30 Secs": {
      "main": [
        [
          {
            "node": "Get Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "10 Seconds": {
      "main": [
        [
          {
            "node": "Get Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "47a8a670-60dd-4d24-a4cf-8bc82a86cdd5",
  "triggerCount": 0,
  "tags": []
}