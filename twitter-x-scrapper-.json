{
  "createdAt": "2025-05-02T19:47:54.482Z",
  "updatedAt": "2025-05-02T19:47:54.482Z",
  "id": "sUF3zLat7Q7cYuwI",
  "name": "Twitter X Scrapper",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -400,
        240
      ],
      "id": "0c1a42de-35be-4f60-87f1-f9bcb3c5841d",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bc47f40e-0850-4762-9efb-999608a2c096",
              "name": "counter",
              "value": "={{ $json.count }}",
              "type": "number"
            },
            {
              "id": "92034c06-3976-4099-a7a5-28a252204472",
              "name": "cursor",
              "value": "={{ $json.cursor }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -20,
        240
      ],
      "id": "9b41e3bf-22b5-42e7-b458-42b9239113fb",
      "name": "Counter"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2f9c3c3-32f4-48b4-b72f-76f03c35b750",
              "name": "count",
              "value": 1,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -220,
        240
      ],
      "id": "e7a8b446-8b44-4308-a9ad-5280cf2de5ae",
      "name": "Set Count"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "928894d0-2876-4996-9b1e-3d365b903771",
              "leftValue": "={{ $('Counter').item.json.counter }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        880,
        240
      ],
      "id": "0a18e5e1-d14b-4dbf-b284-79ea9e62dcce",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a252eb06-03cd-4e3f-84b0-2a46082606ca",
              "name": "counter",
              "value": "={{ $('Counter').item.json.counter }}",
              "type": "number"
            },
            {
              "id": "43222ff8-c354-4afa-b050-7d55fe30c865",
              "name": "cursor",
              "value": "={{ $('Get Tweets').item.json.next_cursor }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        200,
        560
      ],
      "id": "43d68f8f-beaf-41bd-8d2d-932e24a22d37",
      "name": "Set Increase"
    },
    {
      "parameters": {
        "jsCode": "// This code should be placed in an n8n Function node\n\n// Get the input items\nconst items = $input.all();\n\n// Process each item in the array\nreturn items.map(item => {\n  // Create a new value for the count field\n  let newCount = 1;\n  \n  // If there's an existing counter value, use it as a base\n  if (item.json && item.json.counter !== undefined) {\n    newCount = item.json.counter + 1;\n  }\n  \n  // Ensure json property exists\n  if (!item.json) {\n    item.json = {};\n  }\n  \n  // Set the value to the new field name \"count\"\n  item.json.count = newCount;\n  \n  // Return the modified item\n  return item;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        380,
        560
      ],
      "id": "38cf7752-b2d6-48c8-975b-9ce40e823d25",
      "name": "Increase Count"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5be1f203-28ea-4635-b42d-01f2a5bb367f",
              "name": "count",
              "value": "={{ $json.count }}",
              "type": "string"
            },
            {
              "id": "b68f8c17-c045-4b5b-8f8b-367ec72b72a3",
              "name": "cursor",
              "value": "={{ $('Set Increase').item.json.cursor }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        560
      ],
      "id": "41c1c385-28a8-4464-9461-51078cc83fb7",
      "name": "Set Count and Cursor"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1_GeFBfE6vFYFv0C-e_HmpKMB6kDnq676IeidTaWFg0Y",
          "mode": "list",
          "cachedResultName": "Twitter Data",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_GeFBfE6vFYFv0C-e_HmpKMB6kDnq676IeidTaWFg0Y/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_GeFBfE6vFYFv0C-e_HmpKMB6kDnq676IeidTaWFg0Y/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Tweet ID": "={{ $json.tweetId }}",
            "URL": "={{ $json.url }}",
            "Content": "={{ $json.content }}",
            "Likes": "={{ $json.likeCount }}",
            "Retweets": "={{ $json.retweetCount }}",
            "Replies": "={{ $json.replyCount }}",
            "Quotes": "={{ $json.quoteCount }}",
            "Views": "={{ $json.viewCount }}",
            "Date": "={{ $json.createdAt }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Tweet ID",
              "displayName": "Tweet ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "displayName": "Content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Likes",
              "displayName": "Likes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Retweets",
              "displayName": "Retweets",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Replies",
              "displayName": "Replies",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Quotes",
              "displayName": "Quotes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Views",
              "displayName": "Views",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        520,
        240
      ],
      "id": "e2270688-5715-4bb7-966b-e079a1f88012",
      "name": "Add to Sheet"
    },
    {
      "parameters": {
        "jsCode": "// This approach handles both single tweets and collections\n// It focuses on properly formatting the output for n8n\n// First, let's log what we're working with for debugging\nconsole.log(\"Input item structure:\", JSON.stringify($input.item, null, 2));\n\n// Function to format the date in a more human-readable way\nfunction formatDate(dateString) {\n  if (!dateString) return '';\n  \n  try {\n    const date = new Date(dateString);\n    // Format: \"March 13, 2025 at 19:25\"\n    return date.toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  } catch (error) {\n    console.log(\"Error formatting date:\", error);\n    return dateString; // Return original if parsing fails\n  }\n}\n\n// Check if this is a Twitter Search result with multiple tweets\nif ($input.item.json.tweets && Array.isArray($input.item.json.tweets) && $input.item.json.tweets.length > 0) {\n  // This is a collection of tweets\n  // In n8n, to output multiple items, we need to use an array of objects with a json property\n  const items = $input.item.json.tweets.map(tweet => {\n    return {\n      json: {\n        tweetId: tweet.id || '',\n        url: tweet.url || '',\n        content: tweet.text || '',\n        likeCount: tweet.likeCount || 0,\n        retweetCount: tweet.retweetCount || 0,\n        replyCount: tweet.replyCount || 0,\n        quoteCount: tweet.quoteCount || 0,\n        viewCount: tweet.viewCount || 0,\n        createdAt: formatDate(tweet.createdAt)\n      }\n    };\n  });\n  \n  console.log(`Processing ${items.length} tweets`);\n  \n  // Return all items\n  return items;\n} else {\n  // This is a single tweet, just extract and return its data\n  const tweetData = {\n    tweetId: $input.item.json.id || '',\n    url: $input.item.json.url || '',\n    content: $input.item.json.text || '',\n    likeCount: $input.item.json.likeCount || 0,\n    retweetCount: $input.item.json.retweetCount || 0,\n    replyCount: $input.item.json.replyCount || 0,\n    quoteCount: $input.item.json.quoteCount || 0,\n    viewCount: $input.item.json.viewCount || 0,\n    createdAt: formatDate($input.item.json.createdAt)\n  };\n  \n  console.log(\"Processing single tweet\");\n  \n  // Return as a single item\n  return {\n    json: tweetData\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        240
      ],
      "id": "468d3e9a-cb9f-4a57-b85e-19a22a5a0528",
      "name": "Extract Info"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1100,
        240
      ],
      "id": "d7e30056-0d0e-4371-aaf8-6fb53cad92eb",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        40,
        560
      ],
      "id": "7b1eb500-ea2b-4fc4-91e5-265a98cc183c",
      "name": "Limit"
    },
    {
      "parameters": {
        "url": "https://api.twitterapi.io/twitter/tweet/advanced_search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "OpenAI"
            },
            {
              "name": "queryType",
              "value": "Top"
            },
            {
              "name": "cursor",
              "value": "={{ $json.cursor }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        240
      ],
      "id": "fccef8ab-e7be-4b03-a9ba-d302beb387e6",
      "name": "Get Tweets"
    },
    {
      "parameters": {
        "content": "# Increasing Count & Cursor\n",
        "height": 260,
        "width": 1360,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -620,
        500
      ],
      "id": "2aed20b6-c5b2-4a94-96b1-692a37190cd3",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Checking Count\n",
        "height": 260,
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        160
      ],
      "id": "0ad2bf3a-e955-4b67-87bd-0c4c7524cb1a",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Scraping X",
        "height": 260,
        "width": 1360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -620,
        160
      ],
      "id": "6d927a4f-2670-424a-8ce6-b90261e34022",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Nate Herk | AI Automation",
        "height": 80,
        "width": 500,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "c2e37cef-7308-4a0c-b945-493e5efe986d",
      "name": "Sticky Note3"
    }
  ],
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Set Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Counter": {
      "main": [
        [
          {
            "node": "Get Tweets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Count": {
      "main": [
        [
          {
            "node": "Counter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increase": {
      "main": [
        [
          {
            "node": "Increase Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increase Count": {
      "main": [
        [
          {
            "node": "Set Count and Cursor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Count and Cursor": {
      "main": [
        [
          {
            "node": "Counter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Sheet": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Info": {
      "main": [
        [
          {
            "node": "Add to Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Set Increase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Tweets": {
      "main": [
        [
          {
            "node": "Extract Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "0819b4a4-124f-4cf7-9cdb-854879ab5e1b",
  "triggerCount": 0,
  "tags": []
}